<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register is_register="True" is_internal="False" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>MPAMF_ESR</reg_short_name>
      <reg_long_name>MPAM Error Status Register</reg_long_name>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Any"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_s</reg_frame>
    <reg_offset><hexnumber>0x00F8</hexnumber></reg_offset>
    <reg_instance>MPAMF_ESR_s</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_type>RW</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Any"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_ns</reg_frame>
    <reg_offset><hexnumber>0x00F8</hexnumber></reg_offset>
    <reg_instance>MPAMF_ESR_ns</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_type>RW</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>

          <reg_reset_value>

      </reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Indicates MPAM error status for this MSC. MPAMF_ESR_s reports Secure MPAM errors. MPAMF_ESR_ns reports Non-secure MPAM errors.</para>

      </purpose_text>
      <purpose_text>
        <para>Software should write this register after reading the status of an error to reset ERRCODE to <hexnumber>0x0000</hexnumber> and OVRWR to 0 so that future errors are not reported with OVRWR set.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>Memory Partitioning and Monitoring registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>If a MSC cannot encounter any of the error conditions listed in <xref browsertext="Chapter 12 Errors in MSCs" filename="AS_errors_in_mscs.fm" linkend="CIHHADCG"/>, both the MPAMF_ESR and <register_link state="ext" id="ext-mpamf_ecr.xml">MPAMF_ECR</register_link> must be RAZ/WI.</para>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          
    
      <attributes_text>
        <para>MAMPF_ESR is 64-bit register when ARMv8.6-MPAM is implemented and MPAMF_IDR.HAS_EXTD_ESR == 1.</para>

      </attributes_text>
      <attributes_text>
        <para>Otherwise, MAMPF_ESR is a 32-bit register.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="64">
      <fields_condition>When ARMv8.6-MPAM is implemented and MPAMF_IDR.HAS_EXTD_ESR == 1</fields_condition>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_63_36"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>63</field_msb>
          <field_lsb>36</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="RIS_35_32_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>RIS</field_name>
          <field_msb>35</field_msb>
          <field_lsb>32</field_lsb>
           <field_range>35:32</field_range>
          <field_description order="before">
          
  <para>Resource Instance Selector. Where applicable to the ERRCODE, captures the RIS value for the error.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
            <fields_condition>When MPAMF_IDR.HAS_RIS == 1</fields_condition>
      </field>
        <field
           id="0_35_32_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>35</field_msb>
          <field_lsb>32</field_lsb>
           <field_range>35:32</field_range>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="OVRWR_31_31"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>OVRWR</field_name>
          <field_msb>31</field_msb>
          <field_lsb>31</field_lsb>
          <field_description order="before">
          
  <para>Overwritten.</para>
<para>If 0 and ERRCODE == <binarynumber>0b0000</binarynumber>, no errors have occurred.</para>
<para>If 0 and ERRCODE is non-zero, a single error has occurred and is recorded in this register.</para>
<para>If 1 and ERRCODE is non-zero, multiple errors have occurred and this register records the most recent error.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  <para>The state where this bit is 1 and ERRCODE is zero must not be produced by hardware and is only reached when software writes this combination into this register.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="0_30_28"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>30</field_msb>
          <field_lsb>28</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="ERRCODE_27_24"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ERRCODE</field_name>
          <field_msb>27</field_msb>
          <field_lsb>24</field_lsb>
          <field_description order="before">
          
  <para>Error code.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
  <para>No error.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
  <para>PARTID_SEL_Range.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0010</field_value>
        <field_value_description>
  <para>Req_PARTID_Range.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0011</field_value>
        <field_value_description>
  <para>MSMONCFG_ID_RANGE.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0100</field_value>
        <field_value_description>
  <para>Req_PMG_Range.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0101</field_value>
        <field_value_description>
  <para>Monitor_Range.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0110</field_value>
        <field_value_description>
  <para>intPARTID_Range.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0111</field_value>
        <field_value_description>
  <para>Unexpected_INTERNAL.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1000</field_value>
        <field_value_description>
  <para>Undefined_RIS_PART_SEL.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1001</field_value>
        <field_value_description>
  <para>RIS_No_Control.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1010</field_value>
        <field_value_description>
  <para>Undefined_RIS_MON_SEL.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1011</field_value>
        <field_value_description>
  <para>RIS_No_Monitor.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1100</field_value>
        <field_value_description>
  <para>Reserved.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1101</field_value>
        <field_value_description>
  <para>Reserved.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1110</field_value>
        <field_value_description>
  <para>Reserved.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1111</field_value>
        <field_value_description>
  <para>Reserved.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="PMG_23_16"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>PMG</field_name>
          <field_msb>23</field_msb>
          <field_lsb>16</field_lsb>
          <field_description order="before">
          
  <para>Program monitoring group.</para>
<para>Set to the PMG on an error that captures PMG.  Otherwise, set to <hexnumber>0x00</hexnumber> on an error that does not capture PMG.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="PARTID_MON_15_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>PARTID_MON</field_name>
          <field_msb>15</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>PARTID or monitor.</para>
<para>Set to the PARTID on an error that captures PARTID.</para>
<para>Set to the monitor index on an error that captures MON.</para>
<para>On an error that captures neither PARTID nor MON, this field is set to 0.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <fields length="32">
      <fields_condition></fields_condition>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="OVRWR_31_31"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>OVRWR</field_name>
          <field_msb>31</field_msb>
          <field_lsb>31</field_lsb>
          <field_description order="before">
          
  <para>Overwritten.</para>
<para>If 0 and ERRCODE == <binarynumber>0b0000</binarynumber>, no errors have occurred.</para>
<para>If 0 and ERRCODE is non-zero, a single error has occurred and is recorded in this register.</para>
<para>If 1 and ERRCODE is non-zero, multiple errors have occurred and this register records the most recent error.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  <para>The state where this bit is 1 and ERRCODE is 0 must not be produced by hardware and is only reached when software writes this combination into this register.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="0_30_28"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>30</field_msb>
          <field_lsb>28</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="ERRCODE_27_24"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ERRCODE</field_name>
          <field_msb>27</field_msb>
          <field_lsb>24</field_lsb>
          <field_description order="before">
          
  <para>Error code.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
  <para>No error.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
  <para>PARTID_SEL_Range.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0010</field_value>
        <field_value_description>
  <para>Req_PARTID_Range.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0011</field_value>
        <field_value_description>
  <para>MSMONCFG_ID_RANGE.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0100</field_value>
        <field_value_description>
  <para>Req_PMG_Range.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0101</field_value>
        <field_value_description>
  <para>Monitor_Range.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0110</field_value>
        <field_value_description>
  <para>intPARTID_Range.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0111</field_value>
        <field_value_description>
  <para>Unexpected_INTERNAL.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1000</field_value>
        <field_value_description>
  <para>Reserved.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1001</field_value>
        <field_value_description>
  <para>Reserved.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1010</field_value>
        <field_value_description>
  <para>Reserved.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1011</field_value>
        <field_value_description>
  <para>Reserved.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1100</field_value>
        <field_value_description>
  <para>Reserved.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1101</field_value>
        <field_value_description>
  <para>Reserved.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1110</field_value>
        <field_value_description>
  <para>Reserved.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1111</field_value>
        <field_value_description>
  <para>Reserved.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="PMG_23_16"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>PMG</field_name>
          <field_msb>23</field_msb>
          <field_lsb>16</field_lsb>
          <field_description order="before">
          
  <para>Program monitoring group.</para>
<para>Set to the PMG on an error that captures PMG. Otherwise, set to <hexnumber>0x00</hexnumber> on an error that does not capture PMG.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="PARTID_MON_15_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>PARTID_MON</field_name>
          <field_msb>15</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>PARTID or monitor.</para>
<para>Set to the PARTID on an error that captures PARTID.</para>
<para>Set to the monitor index on an error that captures MON.</para>
<para>On an error that captures neither PARTID nor MON, this field is set to <hexnumber>0x0000</hexnumber>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="64">
        <fields_condition>When ARMv8.6-MPAM is implemented and MPAMF_IDR.HAS_EXTD_ESR == 1</fields_condition>
      
        <fieldat id="0_63_36" msb="63" lsb="36"/>
        <fieldat id="RIS_35_32_1" msb="35" lsb="32"/>
        <fieldat id="OVRWR_31_31" msb="31" lsb="31"/>
        <fieldat id="0_30_28" msb="30" lsb="28"/>
        <fieldat id="ERRCODE_27_24" msb="27" lsb="24"/>
        <fieldat id="PMG_23_16" msb="23" lsb="16"/>
        <fieldat id="PARTID_MON_15_0" msb="15" lsb="0"/>
    </reg_fieldset>
  <reg_fieldset length="32">
        <fields_condition></fields_condition>
      
        <fieldat id="OVRWR_31_31" msb="31" lsb="31"/>
        <fieldat id="0_30_28" msb="30" lsb="28"/>
        <fieldat id="ERRCODE_27_24" msb="27" lsb="24"/>
        <fieldat id="PMG_23_16" msb="23" lsb="16"/>
        <fieldat id="PARTID_MON_15_0" msb="15" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  
    
      <access_permission_text>
        <para>This register is within the MPAM feature page memory frames. In a system that supports Secure and Non-secure memory maps, there must be both Secure and Non-secure MPAM feature pages.</para>

      </access_permission_text>
      <access_permission_text>
        <para>MPAMF_ESR_s must be accessible from the Secure MPAM feature page. MPAMF_ESR_ns must be accessible from the Non-secure MPAM feature page.</para>

      </access_permission_text>
      <access_permission_text>
        <para>MPAMF_ESR_s and MPAMF_ESR_ns must be separate registers. The Secure instance (MPAMF_ESR_s) accesses the error status used for Secure PARTIDs, and the Non-secure instance (MPAMF_ESR_ns) accesses the error status used for Non-secure PARTIDs.</para>
      </access_permission_text>


</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>