<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register execution_state="AArch32" is_register="True" is_internal="True" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>HCPTR</reg_short_name>
      <reg_long_name>Hyp Architectural Feature Trap Register</reg_long_name>
        <reg_condition otherwise="UNKNOWN">when AArch32 is supported at any Exception level</reg_condition>
      

          <reg_reset_value>
            <reg_reset_limited_to_el>EL2</reg_reset_limited_to_el>
            <reg_reset_limited_to_el>EL3</reg_reset_limited_to_el>

      </reg_reset_value>
      <reg_mappings>
          <reg_mapping>
              
            <mapped_name filename="AArch64-cptr_el2.xml">CPTR_EL2</mapped_name>
            <mapped_type>Architectural</mapped_type>
              <mapped_execution_state>AArch64</mapped_execution_state>
              <mapped_from_startbit>31</mapped_from_startbit>
              <mapped_from_endbit>0</mapped_from_endbit>

              <mapped_to_startbit>31</mapped_to_startbit>
              <mapped_to_endbit>0</mapped_to_endbit>

          </reg_mapping>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Controls:</para>

      </purpose_text>
      <purpose_text>
        <list type="unordered">
<listitem><content>Trapping to Hyp mode of Non-secure access, at EL1 or EL0, to trace, and to Advanced SIMD and floating-point functionality.</content>
</listitem><listitem><content>Hyp mode access to trace, and to Advanced SIMD and floating-point functionality.</content>
</listitem></list>

      </purpose_text>
      <purpose_text>
        <note><para>Accesses to this functionality:</para><list type="unordered"><listitem><content>From Non-secure modes other than Hyp mode are also affected by settings in the <register_link state="AArch32" id="AArch32-cpacr.xml">CPACR</register_link> and <register_link state="AArch32" id="AArch32-nsacr.xml">NSACR</register_link>.</content></listitem><listitem><content>From Hyp mode are also affected by settings in the <register_link state="AArch32" id="AArch32-nsacr.xml">NSACR</register_link>.</content></listitem></list><para>Exceptions generated by the <register_link state="AArch32" id="AArch32-cpacr.xml">CPACR</register_link> and <register_link state="AArch32" id="AArch32-nsacr.xml">NSACR</register_link> controls are higher priority than those generated by the HCPTR controls.</para></note>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
            <reg_group>Virtualization registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>If EL2 is not implemented, this register is <arm-defined-word>RES0</arm-defined-word> from EL3.</para>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>HCPTR is a 32-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="32">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="TCPAC_31_31"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>TCPAC</field_name>
          <field_msb>31</field_msb>
          <field_lsb>31</field_lsb>
          <field_description order="before">
          
  <para>Traps Non-secure EL1 accesses to the <register_link state="AArch32" id="AArch32-cpacr.xml">CPACR</register_link> to Hyp mode.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>This control does not cause any instructions to be trapped.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Non-secure EL1 accesses to the <register_link state="AArch32" id="AArch32-cpacr.xml">CPACR</register_link> are trapped to Hyp mode.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <note><para>The <register_link state="AArch32" id="AArch32-cpacr.xml">CPACR</register_link> is not accessible at EL0.</para></note>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="TAM_30_30_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TAM</field_name>
          <field_msb>30</field_msb>
          <field_lsb>30</field_lsb>
          <field_description order="before">
          
  <para>Trap Activity Monitor access. Traps Non-secure EL1 and EL0 accesses to all Activity Monitor registers to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Accesses from Non-secure EL1 and EL0 to Activity Monitor registers are not trapped.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Accesses from Non-secure EL1 and EL0 to Activity Monitor registers are trapped to Hyp mode.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When AMUv1 is implemented</fields_condition>
      </field>
        <field
           id="0_30_30_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>30</field_msb>
          <field_lsb>30</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_29_21"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>29</field_msb>
          <field_lsb>21</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TTA_20_20"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="True"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>TTA</field_name>
          <field_msb>20</field_msb>
          <field_lsb>20</field_lsb>
          <field_description order="before">
          
  <para>Traps Non-secure System register accesses to all implemented trace registers to Hyp mode.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>This control does not cause any instructions to be trapped.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Any Non-secure System register access to an implemented trace register is trapped to Hyp mode, unless the access is trapped to EL1 by a <register_link state="AArch32" id="AArch32-cpacr.xml">CPACR</register_link> or <register_link state="AArch32" id="AArch32-nsacr.xml">NSACR</register_link> control, or the access is from Non-secure EL0 and the definition of the register in the appropriate trace architecture specification indicates that the register is not accessible from EL0. A trapped instruction generates:</para>
<list type="unordered">
<listitem><content>A Hyp Trap exception, if the exception is taken from Non-secure EL0 or EL1.</content>
</listitem><listitem><content>An Undefined Instruction exception taken to Hyp mode, if the exception is taken from Hyp mode.</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If the implementation does not include a PE trace unit, or does not include a System register interface to the PE trace unit registers, it is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether this bit:</para>
<list type="unordered">
<listitem><content>Is <arm-defined-word>RES0</arm-defined-word>.</content>
</listitem><listitem><content>Is <arm-defined-word>RES1</arm-defined-word>.</content>
</listitem><listitem><content>Can be written from Hyp mode, and from Secure Monitor mode when <register_link state="AArch32" id="AArch32-scr.xml">SCR</register_link>.NS is 1.</content>
</listitem></list>
<para>If EL3 is implemented and is using AArch32, and the value of <register_link state="AArch32" id="AArch32-nsacr.xml">NSACR</register_link>.NSTRCDIS is 1, in Non-secure state this field behaves as RAO/WI, regardless of its actual value.</para>
<note><list type="unordered"><listitem><content>The ETMv4 architecture does not permit EL0 to access the trace registers. If the implementation includes an ETMv4 implementation, EL0 accesses to the trace registers are <arm-defined-word>UNDEFINED</arm-defined-word>, and a resulting Undefined Instruction exception is higher priority than a HCPTR.TTA Hyp Trap exception.</content></listitem><listitem><content>The architecture does not provide traps on trace register accesses through the optional memory-mapped debug interface.</content></listitem></list></note><para>System register accesses to the trace registers can have side-effects. When a System register access is trapped, any side-effects that are normally associated with the access do not occur before the exception is taken.</para>

          </field_description>
            
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_19_16"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>19</field_msb>
          <field_lsb>16</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TASE_15_15"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="True"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>TASE</field_name>
          <field_msb>15</field_msb>
          <field_lsb>15</field_lsb>
          <field_description order="before">
          
  <para>Traps Non-secure execution of Advanced SIMD instructions to Hyp mode when the value of HCPTR.TCP10 is 0.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>This control does not cause any instructions to be trapped.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>When the value of HCPTR.TCP10 is 0, any attempt to execute an Advanced SIMD instruction in Non-secure state is trapped to Hyp mode, unless it is trapped to EL1 by a <register_link state="AArch32" id="AArch32-cpacr.xml">CPACR</register_link> or <register_link state="AArch32" id="AArch32-nsacr.xml">NSACR</register_link> control. A trapped instruction generates:</para>
<list type="unordered">
<listitem><content>A Hyp Trap exception, if the exception is taken from Non-secure EL0 or EL1.</content>
</listitem><listitem><content>An Undefined Instruction exception taken to Hyp mode, if the exception is taken from Hyp mode.</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>When the value of HCPTR.TCP10 is 1, the value of this field is ignored.</para>
<para>If the implementation does not include Advanced SIMD and floating-point functionality, this field is <arm-defined-word>RES1</arm-defined-word>. Otherwise, it is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether this field is implemented as a RW field. If it is not implemented as a RW field, then it is RAZ/WI.</para>
<para>If EL3 is implemented and is using AArch32, and the value of <register_link state="AArch32" id="AArch32-nsacr.xml">NSACR</register_link>.NSASEDIS is 1, in Non-secure state this field behaves as RAO/WI, regardless of its actual value. This applies even if the field is implemented as RAZ/WI.</para>
<para>For the list of instructions affected by this field, see <xref linkend="CJAHFFIE" browsertext="'Controls of Advanced SIMD operation that do not apply to floating-point operation' in the Arm® Architecture Reference Manual, Armv8, for Armv8-A architecture profile, section E1"/>.</para>

          </field_description>
            
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_14_14"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>14</field_msb>
          <field_lsb>14</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="1_13_12"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES1"
        >
          <field_name>1</field_name>
          <field_msb>13</field_msb>
          <field_lsb>12</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES1</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TCP11_11_11"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="True"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>TCP11</field_name>
          <field_msb>11</field_msb>
          <field_lsb>11</field_lsb>
          <field_description order="before">
          
  <para>The value of this field is ignored. If this field is programmed with a different value to the TCP10 bit then this field is <arm-defined-word>UNKNOWN</arm-defined-word> on a direct read of the HCPTR.</para>
<para>If the implementation does not include Advanced SIMD and floating-point functionality, this field is <arm-defined-word>RES1</arm-defined-word>.</para>
<para>If EL3 is implemented and is using AArch32, and the value of <register_link state="AArch32" id="AArch32-nsacr.xml">NSACR</register_link>.cp10 is 0, in Non-secure state this field behaves as RAO/WI, regardless of its actual value.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
            
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="TCP10_10_10"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="True"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>TCP10</field_name>
          <field_msb>10</field_msb>
          <field_lsb>10</field_lsb>
          <field_description order="before">
          
  <para>Trap Non-secure accesses to Advanced SIMD and floating-point functionality to Hyp mode:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>This control does not cause any instructions to be trapped.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Any attempted access to Advanced SIMD and floating-point functionality from Non-secure state is trapped to Hyp mode, unless it is trapped to EL1 by a <register_link state="AArch32" id="AArch32-cpacr.xml">CPACR</register_link> or <register_link state="AArch32" id="AArch32-nsacr.xml">NSACR</register_link> control. A trapped instruction generates:</para>
<list type="unordered">
<listitem><content>A Hyp Trap exception, if the exception is taken from Non-secure EL0 or EL1.</content>
</listitem><listitem><content>An Undefined Instruction exception taken to Hyp mode, if the exception is taken from Hyp mode.</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>The Advanced SIMD and floating-point features controlled by these fields are:</para>
<list type="unordered">
<listitem><content>Execution of any floating-point or Advanced SIMD instruction.</content>
</listitem><listitem><content>Any access to the Advanced SIMD and floating-point registers D0-D31 and their views as S0-S31 and Q0-Q15.</content>
</listitem><listitem><content>Any access to the <register_link state="AArch32" id="AArch32-fpscr.xml">FPSCR</register_link>, <register_link state="AArch32" id="AArch32-fpsid.xml">FPSID</register_link>, <register_link state="AArch32" id="AArch32-mvfr0.xml">MVFR0</register_link>, <register_link state="AArch32" id="AArch32-mvfr1.xml">MVFR1</register_link>, <register_link state="AArch32" id="AArch32-mvfr2.xml">MVFR2</register_link>, or <register_link state="AArch32" id="AArch32-fpexc.xml">FPEXC</register_link> System registers.</content>
</listitem></list>
<para>If the implementation does not include Advanced SIMD and floating-point functionality, this field is <arm-defined-word>RES1</arm-defined-word>.</para>
<para>If EL3 is implemented and is using AArch32, and the value of <register_link state="AArch32" id="AArch32-nsacr.xml">NSACR</register_link>.cp10 is 0, in Non-secure state this field behaves as RAO/WI, regardless of its actual value.</para>

          </field_description>
            
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="1_9_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES1"
        >
          <field_name>1</field_name>
          <field_msb>9</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES1</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="32">
      
        <fieldat id="TCPAC_31_31" msb="31" lsb="31"/>
        <fieldat id="TAM_30_30_1" msb="30" lsb="30"/>
        <fieldat id="0_29_21" msb="29" lsb="21"/>
        <fieldat id="TTA_20_20" msb="20" lsb="20"/>
        <fieldat id="0_19_16" msb="19" lsb="16"/>
        <fieldat id="TASE_15_15" msb="15" lsb="15"/>
        <fieldat id="0_14_14" msb="14" lsb="14"/>
        <fieldat id="1_13_12" msb="13" lsb="12"/>
        <fieldat id="TCP11_11_11" msb="11" lsb="11"/>
        <fieldat id="TCP10_10_10" msb="10" lsb="10"/>
        <fieldat id="1_9_0" msb="9" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  


      <access_mechanism accessor="MRC HCPTR">
        <encoding>
          
          <access_instruction>MRC{&lt;c&gt;}{&lt;q&gt;} &lt;coproc&gt;, {#}&lt;opc1&gt;, &lt;Rt&gt;, &lt;CRn&gt;, &lt;CRm&gt;{, {#}&lt;opc2&gt;}</access_instruction>
            
            <enc n="coproc" v="0b1111"/>
            
            <enc n="opc1" v="0b100"/>
            
            <enc n="CRn" v="0b0001"/>
            
            <enc n="CRm" v="0b0001"/>
            
            <enc n="opc2" v="0b010"/>
        </encoding>
          <access_permission>
            <ps name="MRC" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; !ELUsingAArch32(EL2) &amp;&amp; HSTR_EL2.T1 == '1' then
        AArch64.AArch32SystemAccessTrap(EL2, 0x03);
    elsif EL2Enabled() &amp;&amp; ELUsingAArch32(EL2) &amp;&amp; HSTR.T1 == '1' then
        AArch32.TakeHypTrapException(0x03);
    else
        UNDEFINED;
elsif PSTATE.EL == EL2 then
    if HaveEL(EL3) &amp;&amp; !ELUsingAArch32(EL3) &amp;&amp; CPTR_EL3.TCPAC == '1' then
        AArch64.AArch32SystemAccessTrap(EL3, 0x03);
    else
        return HCPTR;
elsif PSTATE.EL == EL3 then
    if SCR.NS == '0' then
        UNDEFINED;
    else
        return HCPTR;
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
      <access_mechanism accessor="MCR HCPTR">
        <encoding>
          
          <access_instruction>MCR{&lt;c&gt;}{&lt;q&gt;} &lt;coproc&gt;, {#}&lt;opc1&gt;, &lt;Rt&gt;, &lt;CRn&gt;, &lt;CRm&gt;{, {#}&lt;opc2&gt;}</access_instruction>
            
            <enc n="coproc" v="0b1111"/>
            
            <enc n="opc1" v="0b100"/>
            
            <enc n="CRn" v="0b0001"/>
            
            <enc n="CRm" v="0b0001"/>
            
            <enc n="opc2" v="0b010"/>
        </encoding>
          <access_permission>
            <ps name="MCR" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; !ELUsingAArch32(EL2) &amp;&amp; HSTR_EL2.T1 == '1' then
        AArch64.AArch32SystemAccessTrap(EL2, 0x03);
    elsif EL2Enabled() &amp;&amp; ELUsingAArch32(EL2) &amp;&amp; HSTR.T1 == '1' then
        AArch32.TakeHypTrapException(0x03);
    else
        UNDEFINED;
elsif PSTATE.EL == EL2 then
    if HaveEL(EL3) &amp;&amp; !ELUsingAArch32(EL3) &amp;&amp; CPTR_EL3.TCPAC == '1' then
        AArch64.AArch32SystemAccessTrap(EL3, 0x03);
    else
        HCPTR = R[t];
elsif PSTATE.EL == EL3 then
    if SCR.NS == '0' then
        UNDEFINED;
    else
        HCPTR = R[t];
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>