<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register is_register="True" is_internal="False" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>MSMON_CFG_MBWU_CTL</reg_short_name>
      <reg_long_name>MPAM Memory System Monitor Configure Memory Bandwidth Usage Monitor Control Register</reg_long_name>
        <reg_condition otherwise="RES0">when MPAMF_IDR.HAS_MSMON == 1 and MPAMF_MSMON_IDR.MSMON_MBWU == 1</reg_condition>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Any"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_s</reg_frame>
    <reg_offset><hexnumber>0x0828</hexnumber></reg_offset>
    <reg_instance>MSMON_CFG_MBWU_CTL_s</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_type>RW</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Any"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_ns</reg_frame>
    <reg_offset><hexnumber>0x0828</hexnumber></reg_offset>
    <reg_instance>MSMON_CFG_MBWU_CTL_ns</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_type>RW</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>

          <reg_reset_value>

      </reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Controls the MBWU monitor selected by <register_link state="ext" id="ext-msmon_cfg_mon_sel.xml">MSMON_CFG_MON_SEL</register_link>. MSMON_CFG_MBWU_CTL_s controls the Secure memory bandwidth usage monitor instance selected by the Secure instance of <register_link state="ext" id="ext-msmon_cfg_mon_sel.xml">MSMON_CFG_MON_SEL</register_link>. MSMON_CFG_MBWU_CTL_ns controls Non-secure memory bandwidth usage monitor instance selected by the Non-secure instance of <register_link state="ext" id="ext-msmon_cfg_mon_sel.xml">MSMON_CFG_MON_SEL</register_link>.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>Memory Partitioning and Monitoring registers</reg_group>
      </reg_groups>
      <reg_configuration>
        

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>MSMON_CFG_MBWU_CTL is a 32-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="32">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="EN_31_31"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>EN</field_name>
          <field_msb>31</field_msb>
          <field_lsb>31</field_lsb>
          <field_description order="before">
          
  <para>Enabled.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The monitor instance is disabled and must not collect any information.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The monitor instance is enabled to collect information according to the configuration of the instance.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="CAPT_EVNT_30_28"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>CAPT_EVNT</field_name>
          <field_msb>30</field_msb>
          <field_lsb>28</field_lsb>
          <field_description order="before">
          
  <para>Capture event selector.</para>
<para>When the selected capture event occurs, <register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link> of the monitor instance is copied to <register_link state="ext" id="ext-msmon_mbwu_capture.xml">MSMON_MBWU_CAPTURE</register_link> of the same instance. If the long counter is also implemented, <register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link> is also copied to <register_link state="ext" id="ext-msmon_mbwu_l_capture.xml">MSMON_MBWU_L_CAPTURE</register_link>.</para>
<para>Select the event that triggers capture from the following:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b000</field_value>
        <field_value_description>
  <para>No capture event is triggered.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b001</field_value>
        <field_value_description>
  <para>External capture event 1 (optional but recommended)</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b010</field_value>
        <field_value_description>
  <para>External capture event 2 (optional)</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b011</field_value>
        <field_value_description>
  <para>External capture event 3 (optional)</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b100</field_value>
        <field_value_description>
  <para>External capture event 4 (optional)</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b101</field_value>
        <field_value_description>
  <para>External capture event 5 (optional)</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b110</field_value>
        <field_value_description>
  <para>External capture event 6 (optional)</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b111</field_value>
        <field_value_description>
  <para>Capture occurs when a <register_link state="ext" id="ext-msmon_capt_evnt.xml">MSMON_CAPT_EVNT</register_link> register in this MSC is written and causes a capture event for the security state of this monitor. (optional)</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>The values marked as optional indicate capture event sources that can be omitted in an implementation. Those values representing non-implemented event sources must not trigger a capture event.</para>
<para>If capture is not implemented for the MBWU monitor type as indicated by <register_link state="ext" id="ext-mpamf_mbwumon_idr.xml">MPAMF_MBWUMON_IDR</register_link>.HAS_CAPTURE = 0, this field is RAZ/WI.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="CAPT_RESET_27_27"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>CAPT_RESET</field_name>
          <field_msb>27</field_msb>
          <field_lsb>27</field_lsb>
          <field_description order="before">
          
  <para>Reset <register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link>.VALUE after capture.</para>
<para>Controls whether the VALUE field of the monitor instance is reset to zero immediately after being copied to the corresponding capture register.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link>.VALUE field of the monitor instance is not reset on capture.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link>.VALUE field of the monitor instance is reset on capture.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If capture is not implemented for the MBWU monitor type as indicated by <register_link state="ext" id="ext-mpamf_mbwumon_idr.xml">MPAMF_MBWUMON_IDR</register_link>.HAS_CAPTURE = 0, this field is RAZ/WI.</para>
<para>This control bit affects both <register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link> and <register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link> in implementations that include <register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link>.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="OFLOW_STATUS_26_26"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>OFLOW_STATUS</field_name>
          <field_msb>26</field_msb>
          <field_lsb>26</field_lsb>
          <field_description order="before">
          
  <para>Overflow status.</para>
<para>Indicates whether the value of <register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link> has overflowed.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link> has not overflowed.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-msmon_mbuw.xml">MSMON_MBUW</register_link> has overflowed at least once since this bit was last written to zero.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If overflow is not possible for a MBWU monitor in the implementation, this field is RAZ/WI.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="OFLOW_INTR_25_25"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>OFLOW_INTR</field_name>
          <field_msb>25</field_msb>
          <field_lsb>25</field_lsb>
          <field_description order="before">
          
  <para>Overflow status of the MSMON_MBWU_L instance.</para>
<para>Indicates that the value of <register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link> overflow has overflowed.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>No interrupt is signaled on an overflow of <register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link>.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>An implementation-specific interrupt is signaled on an overflow of <register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link>.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="OFLOW_FRZ_24_24"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>OFLOW_FRZ</field_name>
          <field_msb>24</field_msb>
          <field_lsb>24</field_lsb>
          <field_description order="before">
          
  <para>Freeze monitor instance on overflow.</para>
<para>Controls whether <register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link>.VALUE field of the monitor instance freezes on an overflow.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link>.VALUE field of the monitor instance wraps on overflow.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link>.VALUE field of the monitor instance freezes on overflow. If the increment that caused the overflow was 1, the frozen value is the post-increment value of 0. If the increment that caused the overflow was larger than 1, the frozen value of the monitor might be 0 or a larger value less than the final increment.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If overflow is not possible for the instance of the MBWU monitor in the implementation, this field is RAZ/WI.</para>
<para>This control bit affects both <register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link> and <register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link> in implementations that include <register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link>.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="SUBTYPE_23_20"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>SUBTYPE</field_name>
          <field_msb>23</field_msb>
          <field_lsb>20</field_lsb>
          <field_description order="before">
          
  <para>Subtype.</para>
<para>A monitor can have other event matching criteria.</para>
<para>This field is not currently used for MBWU monitors, but reserved for future use.</para>
<para>This field is RAZ/WI.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="SCLEN_19_19"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>SCLEN</field_name>
          <field_msb>19</field_msb>
          <field_lsb>19</field_lsb>
          <field_description order="before">
          
  <para><register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link>.VALUE Scaling Enable.</para>
<para>Enables scaling of <register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link>.VALUE by <register_link state="ext" id="ext-mpamf_mbwumon_idr.xml">MPAMF_MBWUMON_IDR</register_link>.SCALE.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link>.VALUE has bytes counted by the monitor instance.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-msmon_mbwu.xml">MSMON_MBWU</register_link>.VALUE has bytes counted by the monitor instance, shifted right by <register_link state="ext" id="ext-mpamf_mbwumon_idr.xml">MPAMF_MBWUMON_IDR</register_link>.SCALE.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="0_18_18"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>18</field_msb>
          <field_lsb>18</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="MATCH_PMG_17_17"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>MATCH_PMG</field_name>
          <field_msb>17</field_msb>
          <field_lsb>17</field_lsb>
          <field_description order="before">
          
  <para>Match PMG.</para>
<para>Controls whether the monitor instance only counts data transferred with PMG matching <register_link state="ext" id="ext-msmon_cfg_mbwu_flt.xml">MSMON_CFG_MBWU_FLT</register_link>.PMG.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The monitor instance counts data transferred with any PMG value.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The monitor instance only counts data transferred with the PMG value matching <register_link state="ext" id="ext-msmon_cfg_mbwu_flt.xml">MSMON_CFG_MBWU_FLT</register_link>.PMG.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="MATCH_PARTID_16_16"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>MATCH_PARTID</field_name>
          <field_msb>16</field_msb>
          <field_lsb>16</field_lsb>
          <field_description order="before">
          
  <para>Match PARTID.</para>
<para>Controls whether the monitor instance counts only data transferred with PARTID matching <register_link state="ext" id="ext-msmon_cfg_mbwu_flt.xml">MSMON_CFG_MBWU_FLT</register_link>.PARTID.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The monitor instance counts data transferred with any PARTID value.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The monitor instance only counts data transferred with the PARTID value matching <register_link state="ext" id="ext-msmon_cfg_mbwu_flt.xml">MSMON_CFG_MBWU_FLT</register_link>.PARTID.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="OFLOW_STATUS_L_15_15_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>OFLOW_STATUS_L</field_name>
          <field_msb>15</field_msb>
          <field_lsb>15</field_lsb>
          <field_description order="before">
          
  <para>Overflow Status  of the MSMON_MBWU_L instance.</para>
<para>Indicates whether an MPAM overflow interrupt is generated when the value of <register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link> has overflowed.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link> has not overflowed.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link> has overflowed at least once since this bit was last written to zero.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If <register_link state="ext" id="ext-mpamf_mbwumon_idr.xml">MPAMF_MBWUMON_IDR</register_link>.HAS_LONG == 0, this bit is <arm-defined-word>RES0</arm-defined-word>.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
            <fields_condition>When ARMv8.6-MPAM is implemented</fields_condition>
      </field>
        <field
           id="0_15_15_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>15</field_msb>
          <field_lsb>15</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="OFLOW_INTR_L_14_14_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>OFLOW_INTR_L</field_name>
          <field_msb>14</field_msb>
          <field_lsb>14</field_lsb>
          <field_description order="before">
          
  <para>Overflow Interrupt for <register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link>.</para>
<para>Controls whether an MPAM overflow interrupt is generated when the value of <register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link> overflows.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>No interrupt is signaled on an overflow of <register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link>.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>An implementation-specific interrupt is signalled on overflow of <register_link state="ext" id="ext-msmon_mbwu_l.xml">MSMON_MBWU_L</register_link>.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If OFLOW_INTR is not supported by the implementation, this field is RAZ/WI.</para>
<para>If <register_link state="ext" id="ext-mpamf_mbwumon_idr.xml">MPAMF_MBWUMON_IDR</register_link>.HAS_LONG == 0, this bit is <arm-defined-word>RES0</arm-defined-word>.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
            <fields_condition>When ARMv8.6-MPAM is implemented</fields_condition>
      </field>
        <field
           id="0_14_14_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>14</field_msb>
          <field_lsb>14</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_13_8"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>13</field_msb>
          <field_lsb>8</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TYPE_7_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>TYPE</field_name>
          <field_msb>7</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Monitor Type Code.</para>
<para>Constant type indicating the type of the monitor.</para>
<para>Read-only.</para>
<para>MBWU monitor is TYPE = <hexnumber>0x42</hexnumber>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="32">
      
        <fieldat id="EN_31_31" msb="31" lsb="31"/>
        <fieldat id="CAPT_EVNT_30_28" msb="30" lsb="28"/>
        <fieldat id="CAPT_RESET_27_27" msb="27" lsb="27"/>
        <fieldat id="OFLOW_STATUS_26_26" msb="26" lsb="26"/>
        <fieldat id="OFLOW_INTR_25_25" msb="25" lsb="25"/>
        <fieldat id="OFLOW_FRZ_24_24" msb="24" lsb="24"/>
        <fieldat id="SUBTYPE_23_20" msb="23" lsb="20"/>
        <fieldat id="SCLEN_19_19" msb="19" lsb="19"/>
        <fieldat id="0_18_18" msb="18" lsb="18"/>
        <fieldat id="MATCH_PMG_17_17" msb="17" lsb="17"/>
        <fieldat id="MATCH_PARTID_16_16" msb="16" lsb="16"/>
        <fieldat id="OFLOW_STATUS_L_15_15_1" msb="15" lsb="15"/>
        <fieldat id="OFLOW_INTR_L_14_14_1" msb="14" lsb="14"/>
        <fieldat id="0_13_8" msb="13" lsb="8"/>
        <fieldat id="TYPE_7_0" msb="7" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  
    
      <access_permission_text>
        <para>This register is within the MPAM feature page memory frames. In a system that supports Secure and Non-secure memory maps, there must be both Secure and Non-secure MPAM feature pages.</para>

      </access_permission_text>
      <access_permission_text>
        <para>MSMON_CFG_MBWU_CTL_s must be accessible from the Secure MPAM feature page. MSMON_CFG_MBWU_CTL_ns must be accessible from the Non-secure MPAM feature page.</para>

      </access_permission_text>
      <access_permission_text>
        <para>MSMON_CFG_MBWU_CTL_s and MSMON_CFG_MBWU_CTL_ns must be separate registers. The Secure instance (MSMON_CFG_MBWU_CTL_s) accesses the memory bandwidth usage monitor controls used for Secure PARTIDs, and the Non-secure instance (MSMON_CFG_MBWU_CTL_ns) accesses the memory bandwidth usage monitor controls used for Non-secure PARTIDs.</para>
      </access_permission_text>


</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>