<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register is_register="True" is_internal="False" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>GICH_APR&lt;n&gt;</reg_short_name>
      <reg_long_name>Active Priorities Registers</reg_long_name>
          <reg_array>
              <reg_array_start>0</reg_array_start>
              <reg_array_end>3</reg_array_end>
         </reg_array>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Unknown"
  >
    <reg_component>GIC Virtual interface control</reg_component>
    <reg_offset><hexnumber>0x00F0</hexnumber> + 4n</reg_offset>
    <reg_instance>GICH_APR&lt;n&gt;</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_level>When GICD_CTLR.DS == 0b0</reg_access_level>
            <reg_access_type>RW</reg_access_type>
        </reg_access_state>
        
        <reg_access_state>
            <reg_access_level>When IsAccessSecure()</reg_access_level>
            <reg_access_type>RW</reg_access_type>
        </reg_access_state>
        
        <reg_access_state>
            <reg_access_level>When !IsAccessSecure()</reg_access_level>
            <reg_access_type>RW</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>

          <reg_reset_value></reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>These registers track which preemption levels are active in the virtual CPU interface, and indicate the current active priority. Corresponding bits are set to 1 in this register when an interrupt is acknowledged, based on <register_link state="ext" id="ext-gich_lrn.xml">GICH_LR&lt;n&gt;</register_link>.Priority, and the least significant bit set is cleared on EOI.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
            <reg_group>GIC virtualised guest interface control registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>This register is available when the GIC implementation supports interrupt virtualization.</para>

      </configuration_text>
      <configuration_text>
        <para>The number of registers required depends on how many bits are implemented in <register_link state="ext" id="ext-gich_lrn.xml">GICH_LR&lt;n&gt;</register_link>.Priority:</para>

      </configuration_text>
      <configuration_text>
        <list type="unordered">
<listitem><content>When 5 priority bits are implemented, 1 register is required (GICH_APR0).</content>
</listitem><listitem><content>When 6 priority bits are implemented, 2 registers are required (GICH_APR0, GICH_APR1).</content>
</listitem><listitem><content>When 7 priority bits are implemented, 4 registers are required (GICH_APR0, GICH_APR1, GICH_APR2, GICH_APR3).</content>
</listitem></list>

      </configuration_text>
      <configuration_text>
        <para>Unimplemented registers are RAZ/WI.</para>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>GICH_APR&lt;n&gt; is a 32-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="32">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="P&lt;x&gt;_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>P&lt;x&gt;</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_array>
            <field_array_start>31</field_array_start>
            <field_array_end>0</field_array_end>
            <field_array_description>x</field_array_description>
          </field_array>
          <field_description order="before">
          
  <para>Active priorities. Possible values of each bit are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>There is no interrupt active at the priority corresponding to that bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>There is an interrupt active at the priority corresponding to that bit.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>The correspondence between priorities and bits depends on the number of bits of priority that are implemented.</para>
<para>If 5 bits of priority are implemented (bits [7:3] of priority), then there are 32 priority groups, and the active state of these priorities are held in GICH_APR0 in the bits corresponding to Priority[7:3].</para>
<para>If 6 bits of priority are implemented (bits [7:2] of priority), then there are 64 priority groups, and:</para>
<list type="unordered">
<listitem><content>The active state of priorities 0 - 124 are held in GICH_APR0 in the bits corresponding to 0:Priority[6:2].</content>
</listitem><listitem><content>The active state of priorities 128 - 252 are held in GICH_APR1 in the bits corresponding to 1:Priority[6:2].</content>
</listitem></list>
<para>If 7 bits of priority are implemented (bits [7:1] of priority), then there are 128 priority groups, and:</para>
<list type="unordered">
<listitem><content>The active state of priorities 0 - 62 are held in GICH_APR0 in the bits corresponding to 00:Priority[5:1].</content>
</listitem><listitem><content>The active state of priorities 64 - 126 are held in GICH_APR1 in the bits corresponding to 01:Priority[5:1].</content>
</listitem><listitem><content>The active state of priorities 128 - 190 are held in GICH_APR2 in the bits corresponding to 10:Priority[5:1].</content>
</listitem><listitem><content>The active state of priorities 192 - 254 are held in GICH_APR3 in the bits corresponding to 11:Priority[5:1].</content>
</listitem></list>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_number>0</field_reset_number>
  
        </field_reset>
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="32">
      
        <fieldat id="P&lt;x&gt;_31_0" msb="31" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
        <reg_variables>
              <reg_variable variable="n" max="3"/>
        </reg_variables>
      


<access_mechanisms>
  
    
      <access_permission_text>
        <para>These registers are used only when System register access is not enabled. When System register access is enabled the following registers provide equivalent functionality:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>In AArch64:<list type="unordered">
<listitem><content>For Group 0, <register_link state="AArch64" id="AArch64-ich_ap0rn_el2.xml">ICH_AP0R&lt;n&gt;_EL2</register_link>.</content>
</listitem><listitem><content>For Group 1, <register_link state="AArch64" id="AArch64-ich_ap1rn_el2.xml">ICH_AP1R&lt;n&gt;_EL2</register_link>.</content>
</listitem></list>
</content>
</listitem><listitem><content>In AArch32:<list type="unordered">
<listitem><content>For Group 0, <register_link state="AArch32" id="AArch32-ich_ap0rn.xml">ICH_AP0R&lt;n&gt;</register_link>.</content>
</listitem><listitem><content>For Group 1, <register_link state="AArch32" id="AArch32-ich_ap1rn.xml">ICH_AP1R&lt;n&gt;</register_link>.</content>
</listitem></list>
</content>
</listitem></list>
      </access_permission_text>


</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>