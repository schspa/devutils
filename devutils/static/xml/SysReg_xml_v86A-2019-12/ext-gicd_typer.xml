<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register is_register="True" is_internal="False" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>GICD_TYPER</reg_short_name>
      <reg_long_name>Interrupt Controller Type Register</reg_long_name>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Unknown"
  >
    <reg_component>GIC Distributor</reg_component>
    <reg_offset><hexnumber>0x0004</hexnumber></reg_offset>
    <reg_instance>GICD_TYPER</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_level>When GICD_CTLR.DS == 0b0</reg_access_level>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
        
        <reg_access_state>
            <reg_access_level>When IsAccessSecure()</reg_access_level>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
        
        <reg_access_state>
            <reg_access_level>When !IsAccessSecure()</reg_access_level>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>

          <reg_reset_value></reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Provides information about what features the GIC implementation supports. It indicates:</para>

      </purpose_text>
      <purpose_text>
        <list type="unordered">
<listitem><content>Whether the GIC implementation supports two Security states.</content>
</listitem><listitem><content>The maximum number of INTIDs that the GIC implementation supports.</content>
</listitem><listitem><content>The number of PEs that can be used as interrupt targets.</content>
</listitem></list>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
            <reg_group>GIC Distributor registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>This register is available in all configurations of the GIC. When <register_link state="ext" id="ext-gicd_ctlr.xml">GICD_CTLR</register_link>.DS==0, this register is Common.</para>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>GICD_TYPER is a 32-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="32">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="ESPI_range_31_27_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="True"
           reserved_type="RES0"
        >
          <field_name>ESPI_range</field_name>
          <field_msb>31</field_msb>
          <field_lsb>27</field_lsb>
           <field_range>31</field_range>
          <field_description order="before">
          
  <para>Indicates the maximum INTID in the Extended SPI range.</para>
<list type="unordered">
<listitem><content>Maximum Extended SPI INTID is (32*(ESPI_range + 1) + 4095)</content>
</listitem></list>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
            <fields_condition>When GICD_TYPER.ESPI == 1</fields_condition>
      </field>
        <field
           id="0_31_27_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="True"
           rwtype="RES0"
           reserved_type="RES0"
        >
          <field_name>0</field_name>
          <field_msb>31</field_msb>
          <field_lsb>27</field_lsb>
           <field_range>31</field_range>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="RSS_26_26"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>RSS</field_name>
          <field_msb>26</field_msb>
          <field_lsb>26</field_lsb>
          <field_description order="before">
          
  <para>Range Selector Support.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The IRI supports targeted SGIs with affinity level 0 values of 0 - 15.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The IRI supports targeted SGIs with affinity level 0 values of 0 - 255.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="No1N_25_25"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>No1N</field_name>
          <field_msb>25</field_msb>
          <field_lsb>25</field_lsb>
          <field_description order="before">
          
  <para>Indicates whether 1 of N SPI interrupts are supported.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>1 of N SPI interrupts are supported.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>1 of N SPI interrupts are not supported.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="A3V_24_24"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>A3V</field_name>
          <field_msb>24</field_msb>
          <field_lsb>24</field_lsb>
          <field_description order="before">
          
  <para>Affinity 3 valid. Indicates whether the Distributor supports nonzero values of Affinity level 3.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The Distributor only supports zero values of Affinity level 3.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The Distributor supports nonzero values of Affinity level 3.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="IDbits_23_19"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>IDbits</field_name>
          <field_msb>23</field_msb>
          <field_lsb>19</field_lsb>
          <field_description order="before">
          
  <para>The number of interrupt identifier bits supported, minus one.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="DVIS_18_18"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>DVIS</field_name>
          <field_msb>18</field_msb>
          <field_lsb>18</field_lsb>
          <field_description order="before">
          
  <para>Indicates whether the implementation supports Direct Virtual LPI injection.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The implementation does not support Direct Virtual LPI injection.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The implementation supports Direct Virtual LPI injection.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>For GICv3, this field is <arm-defined-word>RES0</arm-defined-word>.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="LPIS_17_17"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>LPIS</field_name>
          <field_msb>17</field_msb>
          <field_lsb>17</field_lsb>
          <field_description order="before">
          
  <para>Indicates whether the implementation supports LPIs.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The implementation does not support LPIs.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The implementation supports LPIs.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="MBIS_16_16"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>MBIS</field_name>
          <field_msb>16</field_msb>
          <field_lsb>16</field_lsb>
          <field_description order="before">
          
  <para>Indicates whether the implementation supports message-based interrupts by writing to Distributor registers.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The implementation does not support message-based interrupts by writing to Distributor registers.</para>
<para>The <register_link state="ext" id="ext-gicd_clrspi_nsr.xml">GICD_CLRSPI_NSR</register_link>, <register_link state="ext" id="ext-gicd_setspi_nsr.xml">GICD_SETSPI_NSR</register_link>, <register_link state="ext" id="ext-gicd_clrspi_sr.xml">GICD_CLRSPI_SR</register_link>, and <register_link state="ext" id="ext-gicd_setspi_sr.xml">GICD_SETSPI_SR</register_link> registers are reserved.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The implementation supports message-based interrupts by writing to the <register_link state="ext" id="ext-gicd_clrspi_nsr.xml">GICD_CLRSPI_NSR</register_link>, <register_link state="ext" id="ext-gicd_setspi_nsr.xml">GICD_SETSPI_NSR</register_link>, <register_link state="ext" id="ext-gicd_clrspi_sr.xml">GICD_CLRSPI_SR</register_link>, or <register_link state="ext" id="ext-gicd_setspi_sr.xml">GICD_SETSPI_SR</register_link> registers.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="num_LPIs_15_11"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>num_LPIs</field_name>
          <field_msb>15</field_msb>
          <field_lsb>11</field_lsb>
          <field_description order="before">
          
  <para>Number of supported LPIs.</para>
<list type="unordered">
<listitem><content>
<para><binarynumber>0b00000</binarynumber> Number of LPIs as indicated by GICD_TYPER.IDbits.</para>
</content>
</listitem><listitem><content>
<para>All other values Number of LPIs supported is 2^(num_LPIs+1) .</para>
<list type="unordered">
<listitem><content>
<para>Available LPI INTIDs are 8192..(8192 + 2^(num_LPIs+1) - 1).</para>
</content>
</listitem><listitem><content>
<para>This field cannot indicate a maximum LPI INTID greater than that indicated by GICD_TYPER.IDbits.</para>
</content>
</listitem></list>
</content>
</listitem></list>
<para>When the supported INTID width is less than 14 bits, this field is <arm-defined-word>RES0</arm-defined-word> and no LPIs are supported.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="SecurityExtn_10_10"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>SecurityExtn</field_name>
          <field_msb>10</field_msb>
          <field_lsb>10</field_lsb>
          <field_description order="before">
          
  <para>Indicates whether the GIC implementation supports two Security states:</para>
<para>When <register_link state="ext" id="ext-gicd_ctlr.xml">GICD_CTLR</register_link>.DS == 1, this field is RAZ.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The GIC implementation supports only a single Security state.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The GIC implementation supports two Security states.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="0_9_9"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>9</field_msb>
          <field_lsb>9</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="ESPI_8_8"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ESPI</field_name>
          <field_msb>8</field_msb>
          <field_lsb>8</field_lsb>
          <field_description order="before">
          
  <para>Extended SPI</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Extended SPI range not implemented.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Extended SPI range implemented.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="CPUNumber_7_5"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>CPUNumber</field_name>
          <field_msb>7</field_msb>
          <field_lsb>5</field_lsb>
          <field_description order="before">
          
  <para>Reports the number of PEs that can be used when affinity routing is not enabled, minus 1.</para>
<para>These PEs must be numbered contiguously from zero, but the relationship between this number and the affinity hierarchy from <xref linkend="CACGIGDF" browsertext="MPIDR"/> is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word>. If the implementation does not support ARE being zero, this field is 000.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="ITLinesNumber_4_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ITLinesNumber</field_name>
          <field_msb>4</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Indicates the maximum SPI INTID that the GIC implementation supports. If the value of this field is N, the maximum SPI INTID is 32(N+1)-1. For example, 00011 specifies that the maximum SPI INTID is 127.</para>
<para>The maximum SPI INTID an implementation might support is 1019 (field value 11111). Regardless of the range of INTIDs defined by this field, interrupt IDs 1020-1023 are reserved for special purposes.</para>
<para>A value of 0 indicates no SPIs are support.</para>
<note><para>The value derived from this field specifies the maximum number of SPIs that the GIC implementation might support. An implementation might not implement all SPIs up to this maximum.</para></note>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
    <text_after_fields>
    
  <para>The ITLinesNumber field only indicates the maximum number of SPIs that the GIC implementation might support. This value determines the number of instances of the following interrupt registers:</para>
<list type="unordered">
<listitem><content><register_link state="ext" id="ext-gicd_igrouprn.xml">GICD_IGROUPR&lt;n&gt;</register_link>.</content>
</listitem><listitem><content><register_link state="ext" id="ext-gicd_isenablern.xml">GICD_ISENABLER&lt;n&gt;</register_link>.</content>
</listitem><listitem><content><register_link state="ext" id="ext-gicd_icenablern.xml">GICD_ICENABLER&lt;n&gt;</register_link>.</content>
</listitem><listitem><content><register_link state="ext" id="ext-gicd_ispendrn.xml">GICD_ISPENDR&lt;n&gt;</register_link>.</content>
</listitem><listitem><content><register_link state="ext" id="ext-gicd_icpendrn.xml">GICD_ICPENDR&lt;n&gt;</register_link>.</content>
</listitem><listitem><content><register_link state="ext" id="ext-gicd_isactivern.xml">GICD_ISACTIVER&lt;n&gt;</register_link>.</content>
</listitem><listitem><content><register_link state="ext" id="ext-gicd_icactivern.xml">GICD_ICACTIVER&lt;n&gt;</register_link>.</content>
</listitem><listitem><content><register_link state="ext" id="ext-gicd_ipriorityrn.xml">GICD_IPRIORITYR&lt;n&gt;</register_link>.</content>
</listitem><listitem><content><register_link state="ext" id="ext-gicd_itargetsrn.xml">GICD_ITARGETSR&lt;n&gt;</register_link>.</content>
</listitem><listitem><content><register_link state="ext" id="ext-gicd_icfgrn.xml">GICD_ICFGR&lt;n&gt;</register_link>.</content>
</listitem></list>
<para>The GIC architecture does not require a GIC implementation to support a continuous range of SPI interrupt IDs. Software must check which SPI INTIDs are supported, up to the maximum value indicated by GICD_TYPER.ITLinesNumber.</para>

    </text_after_fields>
  </fields>
  <reg_fieldset length="32">
      
        <fieldat id="ESPI_range_31_27_1" msb="31" lsb="27"/>
        <fieldat id="RSS_26_26" msb="26" lsb="26"/>
        <fieldat id="No1N_25_25" msb="25" lsb="25"/>
        <fieldat id="A3V_24_24" msb="24" lsb="24"/>
        <fieldat id="IDbits_23_19" msb="23" lsb="19"/>
        <fieldat id="DVIS_18_18" msb="18" lsb="18"/>
        <fieldat id="LPIS_17_17" msb="17" lsb="17"/>
        <fieldat id="MBIS_16_16" msb="16" lsb="16"/>
        <fieldat id="num_LPIs_15_11" msb="15" lsb="11"/>
        <fieldat id="SecurityExtn_10_10" msb="10" lsb="10"/>
        <fieldat id="0_9_9" msb="9" lsb="9"/>
        <fieldat id="ESPI_8_8" msb="8" lsb="8"/>
        <fieldat id="CPUNumber_7_5" msb="7" lsb="5"/>
        <fieldat id="ITLinesNumber_4_0" msb="4" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  


</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>