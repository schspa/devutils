<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register execution_state="AArch32" is_register="True" is_internal="True" is_banked="True" is_optional="False" is_stub_entry="False">
      <reg_short_name>DFSR</reg_short_name>
      <reg_long_name>Data Fault Status Register</reg_long_name>
        <reg_condition otherwise="UNKNOWN">when AArch32 is supported at any Exception level</reg_condition>
      

          <reg_reset_value></reg_reset_value>
      <reg_mappings>
          <reg_mapping>
              
            <mapped_name filename="AArch64-esr_el1.xml">ESR_EL1</mapped_name>
            <mapped_type>Architectural</mapped_type>
              <mapped_execution_state>AArch64</mapped_execution_state>
              <mapped_from_startbit>31</mapped_from_startbit>
              <mapped_from_endbit>0</mapped_from_endbit>

              <mapped_to_startbit>31</mapped_to_startbit>
              <mapped_to_endbit>0</mapped_to_endbit>

          </reg_mapping>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Holds status information about the last data fault.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
            <reg_group>Exception and fault handling registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>The current translation table format determines which format of the register is used.</para>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>DFSR is a 32-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="32">
      <fields_condition>When TTBCR.EAE == 0</fields_condition>
      <fields_instance>TTBCR.EAE==0</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_31_17"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>31</field_msb>
          <field_lsb>17</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="FnV_16_16"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>FnV</field_name>
          <field_msb>16</field_msb>
          <field_lsb>16</field_lsb>
          <field_description order="before">
          
  <para>FAR not Valid, for a synchronous External abort other than a synchronous External abort on a translation table walk.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><register_link state="AArch32" id="AArch32-dfar.xml">DFAR</register_link> is valid.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para><register_link state="AArch32" id="AArch32-dfar.xml">DFAR</register_link> is not valid, and holds an <arm-defined-word>UNKNOWN</arm-defined-word> value.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This field is only valid for a synchronous External abort other than a synchronous External abort on a translation table walk. It is <arm-defined-word>RES0</arm-defined-word> for all other Data Abort exceptions.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="AET_15_14"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>AET</field_name>
          <field_msb>15</field_msb>
          <field_lsb>14</field_lsb>
          <field_description order="before">
          
  <para>Asynchronous Error Type. When the RAS Extension is implemented, this field describes the state of the PE after taking an asynchronous Data Abort exception. Possible values are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
  <para>Uncontainable error (UC) or uncategorized.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
  <para>Unrecoverable error (UEU).</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
  <para>Restartable error (UEO) or Corrected error (CE).</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b11</field_value>
        <field_value_description>
  <para>Recoverable error (UER).</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>When the RAS Extension is not implemented, or on a synchronous Data Abort, this field is <arm-defined-word>RES0</arm-defined-word>.</para>
<note><para>Armv8.2 requires the implementation of the RAS Extension.</para></note><para>In the event of multiple errors taken as a single SError interrupt exception, the overall state of the PE is reported.</para>
<note><para>Software can use this information to determine what recovery might be possible. The recovery software must also examine any implemented fault records to determine the location and extent of the error.</para></note>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="CM_13_13"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>CM</field_name>
          <field_msb>13</field_msb>
          <field_lsb>13</field_lsb>
          <field_description order="before">
          
  <para>Cache maintenance fault. For synchronous faults, this bit indicates whether a cache maintenance instruction generated the fault. The possible values of this bit are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Abort not caused by execution of a cache maintenance instruction.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Abort caused by execution of a cache maintenance instruction, or on an address translation.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>On a synchronous Data Abort on a translation table walk, this bit is <arm-defined-word>UNKNOWN</arm-defined-word>.</para>
<para>On an asynchronous fault, this bit is <arm-defined-word>UNKNOWN</arm-defined-word>.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="ExT_12_12"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ExT</field_name>
          <field_msb>12</field_msb>
          <field_lsb>12</field_lsb>
          <field_description order="before">
          
  <para>External abort type. This bit can be used to provide an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> classification of External aborts.</para>
<para>In an implementation that does not provide any classification of External aborts, this bit is <arm-defined-word>RES0</arm-defined-word>.</para>
<para>For aborts other than External aborts this bit always returns 0.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="WnR_11_11"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>WnR</field_name>
          <field_msb>11</field_msb>
          <field_lsb>11</field_lsb>
          <field_description order="before">
          
  <para>Write not Read bit. Indicates whether the abort was caused by a write or a read instruction. The possible values of this bit are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Abort caused by a read instruction.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Abort caused by a write instruction.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>For faults on the cache maintenance and address translation System instructions in the (coproc==<binarynumber>0b1111</binarynumber>) encoding space this bit always returns a value of 1.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="FS_10_10"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>FS[4]</field_name>
          <field_msb>10</field_msb>
          <field_lsb>10</field_lsb>
          <field_description order="before">
          
  <para>This field is bit[4] of FS[4:0].</para>
<para>Fault status bits. Possible values of FS[4:0] are:</para>

          </field_description>
            <field_values>
                <field_value_name>FS</field_value_name>
                  <field_value_instance>
        <field_value>0b00001</field_value>
        <field_value_description>
  <para>Alignment fault.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b00010</field_value>
        <field_value_description>
  <para>Debug exception.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b00011</field_value>
        <field_value_description>
  <para>Access flag fault, level 1.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b00100</field_value>
        <field_value_description>
  <para>Fault on instruction cache maintenance.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b00101</field_value>
        <field_value_description>
  <para>Translation fault, level 1.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b00110</field_value>
        <field_value_description>
  <para>Access flag fault, level 2.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b00111</field_value>
        <field_value_description>
  <para>Translation fault, level 2.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b01000</field_value>
        <field_value_description>
  <para>Synchronous External abort, not on translation table walk.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b01001</field_value>
        <field_value_description>
  <para>Domain fault, level 1.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b01011</field_value>
        <field_value_description>
  <para>Domain fault, level 2.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b01100</field_value>
        <field_value_description>
  <para>Synchronous External abort, on translation table walk, level 1.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b01101</field_value>
        <field_value_description>
  <para>Permission fault, level 1.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b01110</field_value>
        <field_value_description>
  <para>Synchronous External abort, on translation table walk, level 2.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b01111</field_value>
        <field_value_description>
  <para>Permission fault, level 2.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b10000</field_value>
        <field_value_description>
  <para>TLB conflict abort.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b10100</field_value>
        <field_value_description>
  <para><arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> fault (Lockdown fault).</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b10101</field_value>
        <field_value_description>
  <para><arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> fault (Unsupported Exclusive access fault).</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b10110</field_value>
        <field_value_description>
  <para>SError interrupt.</para>
</field_value_description>
    </field_value_instance>
                    <field_value_instance>
        <field_value>0b11000</field_value>
        <field_value_description>
  <para>SError interrupt, from a parity or ECC error on memory access.</para>
</field_value_description>
            <field_value_condition>When RAS is not implemented</field_value_condition>
    </field_value_instance>
                    <field_value_instance>
        <field_value>0b11001</field_value>
        <field_value_description>
  <para>Synchronous parity or ECC error on memory access, not on translation table walk.</para>
</field_value_description>
            <field_value_condition>When RAS is not implemented</field_value_condition>
    </field_value_instance>
                    <field_value_instance>
        <field_value>0b11100</field_value>
        <field_value_description>
  <para>Synchronous parity or ECC error on translation table walk, level 1.</para>
</field_value_description>
            <field_value_condition>When RAS is not implemented</field_value_condition>
    </field_value_instance>
                    <field_value_instance>
        <field_value>0b11110</field_value>
        <field_value_description>
  <para>Synchronous parity or ECC error on translation table walk, level 2.</para>
</field_value_description>
            <field_value_condition>When RAS is not implemented</field_value_condition>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>All other values are reserved.</para>
<para>For more information about the lookup level associated with a fault, see <xref linkend="CACCBBHH" browsertext="'The level associated with MMU faults on a Short-descriptor translation table lookup' in the Arm® Architecture Reference Manual, Armv8, for Armv8-A architecture profile"/>.</para>
<para>The FS field is split as follows:</para>
<list type="unordered">
<listitem><content>FS[4] is DFSR[10].</content>
</listitem><listitem><content>FS[3:0] is DFSR[3:0].</content>
</listitem></list>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="LPAE_9_9"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>LPAE</field_name>
          <field_msb>9</field_msb>
          <field_lsb>9</field_lsb>
          <field_description order="before">
          
  <para>On taking a Data Abort exception, this bit is set as follows:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Using the Short-descriptor translation table formats.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Using the Long-descriptor translation table formats.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>Hardware does not interpret this bit to determine the behavior of the memory system, and therefore software can set this bit to 0 or 1 without affecting operation.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_8_8"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>8</field_msb>
          <field_lsb>8</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="Domain_7_4"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>Domain</field_name>
          <field_msb>7</field_msb>
          <field_lsb>4</field_lsb>
          <field_description order="before">
          
  <para>The domain of the fault address.</para>
<para>Arm deprecates any use of this field, see <xref linkend="BEIBBDDD" browsertext="'The Domain field in the DFSR' in the Arm® Architecture Reference Manual, Armv8, for Armv8-A architecture profile"/>.</para>
<para>This field is <arm-defined-word>UNKNOWN</arm-defined-word> for certain faults where the DFSR is updated and reported using the Short-descriptor FSR encodings, see <xref linkend="BEIGFEFJ" browsertext="'Validity of Domain field on faults that update the DFSR when using the Short-descriptor encodings' in the Arm® Architecture Reference Manual, Armv8, for Armv8-A architecture profile"/>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="FS_3_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>FS[3:0]</field_name>
          <field_msb>3</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>This field is bits[3:0] of FS[4:0].</para>
<para>See FS[4] for the field description.</para>

          </field_description>
            <field_values>
               
                 <field_value_name>F</field_value_name>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <fields length="32">
      <fields_condition>When TTBCR.EAE == 1</fields_condition>
      <fields_instance>TTBCR.EAE==1</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_31_17"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>31</field_msb>
          <field_lsb>17</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="FnV_16_16"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>FnV</field_name>
          <field_msb>16</field_msb>
          <field_lsb>16</field_lsb>
          <field_description order="before">
          
  <para>FAR not Valid, for a synchronous External abort other than a synchronous External abort on a translation table walk.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><register_link state="AArch32" id="AArch32-dfar.xml">DFAR</register_link> is valid.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para><register_link state="AArch32" id="AArch32-dfar.xml">DFAR</register_link> is not valid, and holds an <arm-defined-word>UNKNOWN</arm-defined-word> value.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This field is only valid for a synchronous External abort other than a synchronous External abort on a translation table walk. It is <arm-defined-word>RES0</arm-defined-word> for all other Data Abort exceptions.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="AET_15_14"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>AET</field_name>
          <field_msb>15</field_msb>
          <field_lsb>14</field_lsb>
          <field_description order="before">
          
  <para>Asynchronous Error Type. When the RAS Extension is implemented, this field describes the state of the PE after taking an asynchronous Data Abort exception. Possible values are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
  <para>Uncontainable error (UC) or uncategorized.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
  <para>Unrecoverable error (UEU).</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
  <para>Restartable error (UEO) or Corrected error (CE).</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b11</field_value>
        <field_value_description>
  <para>Recoverable error (UER).</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>When the RAS Extension is not implemented, or on a synchronous Data Abort, this field is <arm-defined-word>RES0</arm-defined-word>.</para>
<note><para>Armv8.2 requires the implementation of the RAS Extension.</para></note><para>In the event of multiple errors taken as a single SError interrupt exception, the overall state of the PE is reported.</para>
<note><para>Software can use this information to determine what recovery might be possible. The recovery software must also examine any implemented fault records to determine the location and extent of the error.</para></note>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="CM_13_13"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>CM</field_name>
          <field_msb>13</field_msb>
          <field_lsb>13</field_lsb>
          <field_description order="before">
          
  <para>Cache maintenance fault. For synchronous faults, this bit indicates whether a cache maintenance instruction generated the fault. The possible values of this bit are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Abort not caused by execution of a cache maintenance instruction.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Abort caused by execution of a cache maintenance instruction.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>On a synchronous Data Abort on a translation table walk, this bit is <arm-defined-word>UNKNOWN</arm-defined-word>.</para>
<para>On an asynchronous fault, this bit is <arm-defined-word>UNKNOWN</arm-defined-word>.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="ExT_12_12"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ExT</field_name>
          <field_msb>12</field_msb>
          <field_lsb>12</field_lsb>
          <field_description order="before">
          
  <para>External abort type. This bit can be used to provide an <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> classification of External aborts.</para>
<para>In an implementation that does not provide any classification of External aborts, this bit is <arm-defined-word>RES0</arm-defined-word>.</para>
<para>For aborts other than External aborts this bit always returns 0.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="WnR_11_11"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>WnR</field_name>
          <field_msb>11</field_msb>
          <field_lsb>11</field_lsb>
          <field_description order="before">
          
  <para>Write not Read bit. Indicates whether the abort was caused by a write or a read instruction. The possible values of this bit are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Abort caused by a read instruction.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Abort caused by a write instruction.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>For faults on the cache maintenance and address translation System instructions in the (coproc==<binarynumber>0b1111</binarynumber>) encoding space this bit always returns a value of 1.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_10_10"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>10</field_msb>
          <field_lsb>10</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="LPAE_9_9"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>LPAE</field_name>
          <field_msb>9</field_msb>
          <field_lsb>9</field_lsb>
          <field_description order="before">
          
  <para>On taking a Data Abort exception, this bit is set as follows:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Using the Short-descriptor translation table formats.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Using the Long-descriptor translation table formats.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>Hardware does not interpret this bit to determine the behavior of the memory system, and therefore software can set this bit to 0 or 1 without affecting operation.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_8_6"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>8</field_msb>
          <field_lsb>6</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="STATUS_5_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>STATUS</field_name>
          <field_msb>5</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Fault status bits. Possible values of this field are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b000000</field_value>
        <field_value_description>
  <para>Address size fault in translation table base register.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b000001</field_value>
        <field_value_description>
  <para>Address size fault, level 1.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b000010</field_value>
        <field_value_description>
  <para>Address size fault, level 2.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b000011</field_value>
        <field_value_description>
  <para>Address size fault, level 3.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b000101</field_value>
        <field_value_description>
  <para>Translation fault, level 1.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b000110</field_value>
        <field_value_description>
  <para>Translation fault, level 2.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b000111</field_value>
        <field_value_description>
  <para>Translation fault, level 3.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b001001</field_value>
        <field_value_description>
  <para>Access flag fault, level 1.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b001010</field_value>
        <field_value_description>
  <para>Access flag fault, level 2.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b001011</field_value>
        <field_value_description>
  <para>Access flag fault, level 3.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b001101</field_value>
        <field_value_description>
  <para>Permission fault, level 1.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b001110</field_value>
        <field_value_description>
  <para>Permission fault, level 2.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b001111</field_value>
        <field_value_description>
  <para>Permission fault, level 3.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b010000</field_value>
        <field_value_description>
  <para>Synchronous External abort, not on translation table walk.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b010001</field_value>
        <field_value_description>
  <para>Asynchronous SError interrupt.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b010101</field_value>
        <field_value_description>
  <para>Synchronous External abort, on translation table walk, level 1.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b010110</field_value>
        <field_value_description>
  <para>Synchronous External abort, on translation table walk, level 2.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b010111</field_value>
        <field_value_description>
  <para>Synchronous External abort, on translation table walk, level 3.</para>
</field_value_description>
    </field_value_instance>
                    <field_value_instance>
        <field_value>0b011000</field_value>
        <field_value_description>
  <para>Synchronous parity or ECC error on memory access, not on translation table walk.</para>
</field_value_description>
            <field_value_condition>When RAS is not implemented</field_value_condition>
    </field_value_instance>
                    <field_value_instance>
        <field_value>0b011001</field_value>
        <field_value_description>
  <para>Asynchronous SError interrupt, from a parity or ECC error on memory access.</para>
</field_value_description>
            <field_value_condition>When RAS is not implemented</field_value_condition>
    </field_value_instance>
                    <field_value_instance>
        <field_value>0b011101</field_value>
        <field_value_description>
  <para>Synchronous parity or ECC error on memory access on translation table walk, level 1.</para>
</field_value_description>
            <field_value_condition>When RAS is not implemented</field_value_condition>
    </field_value_instance>
                    <field_value_instance>
        <field_value>0b011110</field_value>
        <field_value_description>
  <para>Synchronous parity or ECC error on memory access on translation table walk, level 2.</para>
</field_value_description>
            <field_value_condition>When RAS is not implemented</field_value_condition>
    </field_value_instance>
                    <field_value_instance>
        <field_value>0b011111</field_value>
        <field_value_description>
  <para>Synchronous parity or ECC error on memory access on translation table walk, level 3.</para>
</field_value_description>
            <field_value_condition>When RAS is not implemented</field_value_condition>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b100001</field_value>
        <field_value_description>
  <para>Alignment fault.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b100010</field_value>
        <field_value_description>
  <para>Debug exception.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b110000</field_value>
        <field_value_description>
  <para>TLB conflict abort.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b110100</field_value>
        <field_value_description>
  <para><arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> fault (Lockdown).</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b110101</field_value>
        <field_value_description>
  <para><arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> fault (Unsupported Exclusive access).</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>All other values are reserved.</para>
<para>For more information about the lookup level associated with a fault, see <xref linkend="BEIEGEFF" browsertext="'The level associated with MMU faults on a Long-descriptor translation table lookup' in the Arm® Architecture Reference Manual, Armv8, for Armv8-A architecture profile"/>.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="32">
        <fields_condition>When TTBCR.EAE == 0</fields_condition>
      
        <fieldat id="0_31_17" msb="31" lsb="17"/>
        <fieldat id="FnV_16_16" msb="16" lsb="16"/>
        <fieldat id="AET_15_14" msb="15" lsb="14"/>
        <fieldat id="CM_13_13" msb="13" lsb="13"/>
        <fieldat id="ExT_12_12" msb="12" lsb="12"/>
        <fieldat id="WnR_11_11" msb="11" lsb="11"/>
        <fieldat id="FS_10_10" msb="10" lsb="10"/>
        <fieldat id="LPAE_9_9" msb="9" lsb="9"/>
        <fieldat id="0_8_8" msb="8" lsb="8"/>
        <fieldat id="Domain_7_4" msb="7" lsb="4"/>
        <fieldat id="FS_3_0" msb="3" lsb="0"/>
    </reg_fieldset>
  <reg_fieldset length="32">
        <fields_condition>When TTBCR.EAE == 1</fields_condition>
      
        <fieldat id="0_31_17" msb="31" lsb="17"/>
        <fieldat id="FnV_16_16" msb="16" lsb="16"/>
        <fieldat id="AET_15_14" msb="15" lsb="14"/>
        <fieldat id="CM_13_13" msb="13" lsb="13"/>
        <fieldat id="ExT_12_12" msb="12" lsb="12"/>
        <fieldat id="WnR_11_11" msb="11" lsb="11"/>
        <fieldat id="0_10_10" msb="10" lsb="10"/>
        <fieldat id="LPAE_9_9" msb="9" lsb="9"/>
        <fieldat id="0_8_6" msb="8" lsb="6"/>
        <fieldat id="STATUS_5_0" msb="5" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  


      <access_mechanism accessor="MRC DFSR">
        <encoding>
          
          <access_instruction>MRC{&lt;c&gt;}{&lt;q&gt;} &lt;coproc&gt;, {#}&lt;opc1&gt;, &lt;Rt&gt;, &lt;CRn&gt;, &lt;CRm&gt;{, {#}&lt;opc2&gt;}</access_instruction>
            
            <enc n="coproc" v="0b1111"/>
            
            <enc n="opc1" v="0b000"/>
            
            <enc n="CRn" v="0b0101"/>
            
            <enc n="CRm" v="0b0000"/>
            
            <enc n="opc2" v="0b000"/>
        </encoding>
          <access_permission>
            <ps name="MRC" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; !ELUsingAArch32(EL2) &amp;&amp; HSTR_EL2.T5 == '1' then
        AArch64.AArch32SystemAccessTrap(EL2, 0x03);
    elsif EL2Enabled() &amp;&amp; ELUsingAArch32(EL2) &amp;&amp; HSTR.T5 == '1' then
        AArch32.TakeHypTrapException(0x03);
    elsif EL2Enabled() &amp;&amp; !ELUsingAArch32(EL2) &amp;&amp; HCR_EL2.TRVM == '1' then
        AArch64.AArch32SystemAccessTrap(EL2, 0x03);
    elsif EL2Enabled() &amp;&amp; ELUsingAArch32(EL2) &amp;&amp; HCR.TRVM == '1' then
        AArch32.TakeHypTrapException(0x03);
    elsif HaveEL(EL3) &amp;&amp; ELUsingAArch32(EL3) then
        return DFSR_NS;
    else
        return DFSR;
elsif PSTATE.EL == EL2 then
    if HaveEL(EL3) &amp;&amp; ELUsingAArch32(EL3) then
        return DFSR_NS;
    else
        return DFSR;
elsif PSTATE.EL == EL3 then
    if SCR.NS == '0' then
        return DFSR_S;
    else
        return DFSR_NS;
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
      <access_mechanism accessor="MCR DFSR">
        <encoding>
          
          <access_instruction>MCR{&lt;c&gt;}{&lt;q&gt;} &lt;coproc&gt;, {#}&lt;opc1&gt;, &lt;Rt&gt;, &lt;CRn&gt;, &lt;CRm&gt;{, {#}&lt;opc2&gt;}</access_instruction>
            
            <enc n="coproc" v="0b1111"/>
            
            <enc n="opc1" v="0b000"/>
            
            <enc n="CRn" v="0b0101"/>
            
            <enc n="CRm" v="0b0000"/>
            
            <enc n="opc2" v="0b000"/>
        </encoding>
          <access_permission>
            <ps name="MCR" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; !ELUsingAArch32(EL2) &amp;&amp; HSTR_EL2.T5 == '1' then
        AArch64.AArch32SystemAccessTrap(EL2, 0x03);
    elsif EL2Enabled() &amp;&amp; ELUsingAArch32(EL2) &amp;&amp; HSTR.T5 == '1' then
        AArch32.TakeHypTrapException(0x03);
    elsif EL2Enabled() &amp;&amp; !ELUsingAArch32(EL2) &amp;&amp; HCR_EL2.TVM == '1' then
        AArch64.AArch32SystemAccessTrap(EL2, 0x03);
    elsif EL2Enabled() &amp;&amp; ELUsingAArch32(EL2) &amp;&amp; HCR.TVM == '1' then
        AArch32.TakeHypTrapException(0x03);
    elsif HaveEL(EL3) &amp;&amp; ELUsingAArch32(EL3) then
        DFSR_NS = R[t];
    else
        DFSR = R[t];
elsif PSTATE.EL == EL2 then
    if HaveEL(EL3) &amp;&amp; ELUsingAArch32(EL3) then
        DFSR_NS = R[t];
    else
        DFSR = R[t];
elsif PSTATE.EL == EL3 then
    if SCR.NS == '0' then
        DFSR_S = R[t];
    else
        DFSR_NS = R[t];
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>