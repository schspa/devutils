<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register is_register="True" is_internal="False" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>CounterID&lt;n&gt;</reg_short_name>
      <reg_long_name>Counter ID registers</reg_long_name>
          <reg_array>
              <reg_array_start>0</reg_array_start>
              <reg_array_end>11</reg_array_end>
         </reg_array>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Any"
  >
    <reg_component>Timer</reg_component>
    <reg_frame>CNTControlBase</reg_frame>
    <reg_offset><hexnumber>0xFD0</hexnumber> + 4n</reg_offset>
    <reg_instance>CounterID&lt;n&gt;</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Any"
  >
    <reg_component>Timer</reg_component>
    <reg_frame>CNTReadBase</reg_frame>
    <reg_offset><hexnumber>0xFD0</hexnumber> + 4n</reg_offset>
    <reg_instance>CounterID&lt;n&gt;</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Any"
  >
    <reg_component>Timer</reg_component>
    <reg_frame>CNTBaseN</reg_frame>
    <reg_offset><hexnumber>0xFD0</hexnumber> + 4n</reg_offset>
    <reg_instance>CounterID&lt;n&gt;</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Any"
  >
    <reg_component>Timer</reg_component>
    <reg_frame>CNTEL0BaseN</reg_frame>
    <reg_offset><hexnumber>0xFD0</hexnumber> + 4n</reg_offset>
    <reg_instance>CounterID&lt;n&gt;</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Any"
  >
    <reg_component>Timer</reg_component>
    <reg_frame>CNTCTLBase</reg_frame>
    <reg_offset><hexnumber>0xFD0</hexnumber> + 4n</reg_offset>
    <reg_instance>CounterID&lt;n&gt;</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>

          <reg_reset_value>

      </reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para><arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> identification registers 0 to 11 for the memory-mapped Generic Timer.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>Generic Timer registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>For more information see <xref browsertext="'Power and reset domains for the system level implementation of the Generic Timer' in the Arm&#174; Architecture Reference Manual, Armv8, for Armv8-A architecture profile" filename="I_system_level_implementation_of_the_generic__.fm" linkend="CEGHAIAF"/>.</para>

      </configuration_text>
      <configuration_text>
        <para>These registers are implemented independently in each of the  implemented Generic Timer memory-mapped frames.</para>

      </configuration_text>
      <configuration_text>
        <para>If the implementation of the Counter ID registers requires an architecture version, the value for this version of the Arm Generic Timer is version 0.</para>

      </configuration_text>
      <configuration_text>
        <para>The Counter ID registers can be implemented as a set of CoreSight ID registers, comprising Peripheral ID Registers and Component ID Registers. An implementation of these registers for the Generic Timer must use a Component class value of <hexnumber>0xF</hexnumber>.</para>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>CounterID&lt;n&gt; is a 32-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="32">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="IMPLEMENTATION DEFINED_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>IMPLEMENTATION DEFINED</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
            <para><arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word>.</para>
          
  

          </field_description>
            <field_values>
               
                 <field_value_name>I</field_value_name>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="32">
      
        <fieldat id="IMPLEMENTATION DEFINED_31_0" msb="31" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
        <reg_variables>
              <reg_variable variable="n" max="11"/>
        </reg_variables>
      


<access_mechanisms>
  
    
      <access_permission_text>
        <para>These registers must be implemented, as RO registers, in every implemented Generic Timer memory-mapped frame.</para>

      </access_permission_text>
      <access_permission_text>
        <para>For the CNTCTLBase frame, in a system that recognizes two Security states these registers are accessible by both Secure and Non-secure accesses.</para>

      </access_permission_text>
      <access_permission_text>
        <para>For the CNTControlBase frame, in a system that supports Secure and Non-secure memory maps the frame is implemented only in the Secure memory map, meaning these registers are implemented only in the Secure memory map.</para>

      </access_permission_text>
      <access_permission_text>
        <para>For the CNTBaseN frames, <xref linkend="CEGEDBEA" browsertext="'CNTCTLBase status and control fields for the CNTBaseN and CNTEL0BaseN frames' in Chapter I1 of the Arm&#174; Architecture Reference Manual, Armv8, for Armv8-A architecture profile"/> describes the status fields that identify whether a frame is implemented, and for an implemented frame:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>Whether the CNTBaseN frame has virtual timer capability.</content>
</listitem><listitem><content>Whether the corresponding CNTEL0BaseN frame is implemented.</content>
</listitem><listitem><content>For an implementation that recognizes two Security states, whether the CNTBaseN frame, and any corresponding CNTEL0BaseN frame, is accessible by Non-secure accesses.</content>
</listitem></list>
      </access_permission_text>


</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>