<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register is_register="True" is_internal="False" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>ERR&lt;n&gt;PFGCTL</reg_short_name>
      <reg_long_name>Pseudo-fault Generation Control Register</reg_long_name>
        <reg_condition otherwise="RES0">when error record &lt;n&gt; is implemented, the node implements the RAS Common Fault Injection Model Extension (ERR&lt;n&gt;FR.INJ != 0b00) and error record &lt;n&gt; is the first error record owned by a node</reg_condition>
          <reg_array>
              <reg_array_start>0</reg_array_start>
              <reg_array_end>65534</reg_array_end>
         </reg_array>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>RAS</reg_component>
    <reg_offset><hexnumber>0x808</hexnumber> + 64n</reg_offset>
    <reg_instance>ERR&lt;n&gt;PFGCTL</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_type>RW</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>

          <reg_reset_value>

      </reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Enables controlled fault generation.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>RAS registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para><register_link state="ext" id="ext-errnfr.xml">ERR&lt;n&gt;FR</register_link> describes the features implemented by the node.</para>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>ERR&lt;n&gt;PFGCTL is a 64-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="64">
      <fields_instance>ERR&lt;n&gt;PFGCTL</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_63_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>63</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="CDNEN_31_31"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>CDNEN</field_name>
          <field_msb>31</field_msb>
          <field_lsb>31</field_lsb>
          <field_description order="before">
          
  <para>Countdown Enable. Controls transfers from the value that is held in the <register_link state="ext" id="ext-errnpfgcdn.xml">ERR&lt;n&gt;PFGCDN</register_link> into the Error Generation Counter and enables this counter.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The Error Generation Counter is disabled.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The Error Generation Counter is enabled. On a write of <binarynumber>0b1</binarynumber> to this bit, the Error Generation Counter is set to <register_link state="ext" id="ext-errnpfgcdn.xml">ERR&lt;n&gt;PFGCDN</register_link>.CDN.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Error recovery">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="R_30_30"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>R</field_name>
          <field_msb>30</field_msb>
          <field_lsb>30</field_lsb>
          <field_description order="before">
          
  <para>Restart. Controls whether, upon reaching zero, the Error Generation Counter restarts from the <register_link state="ext" id="ext-errnpfgcdn.xml">ERR&lt;n&gt;PFGCDN</register_link> value or stops.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>On reaching 0, the Error Generation Counter will stop.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>On reaching 0, the Error Generation Counter is set to <register_link state="ext" id="ext-errnpfgcdn.xml">ERR&lt;n&gt;PFGCDN</register_link>.CDN.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is <arm-defined-word>RES0</arm-defined-word> if the node does not support this control.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Error recovery">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_29_13"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>29</field_msb>
          <field_lsb>13</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="MV_12_12"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>MV</field_name>
          <field_msb>12</field_msb>
          <field_lsb>12</field_lsb>
          <field_description order="before">
          
  <para>Miscellaneous syndrome. The value that is written to <register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.MV when an injected error is recorded.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.MV is set to <binarynumber>0b0</binarynumber> when an injected error is recorded.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.MV is set to <binarynumber>0b1</binarynumber> when an injected error is recorded.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit reads-as-one if the node always records some syndrome in ERR&lt;n&gt;MISC&lt;m&gt;, setting <register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.MV to 1, when an injected error is recorded. This bit is <arm-defined-word>RES0</arm-defined-word> if the node does not support this control.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Error recovery">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="AV_11_11"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>AV</field_name>
          <field_msb>11</field_msb>
          <field_lsb>11</field_lsb>
          <field_description order="before">
          
  <para>Address syndrome. The value that is written to <register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.AV when an injected error is recorded.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.AV is set to <binarynumber>0b0</binarynumber> when an injected error is recorded.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.AV is set to <binarynumber>0b1</binarynumber> when an injected error is recorded.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit reads-as-one if the node always sets <register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.AV to <binarynumber>0b1</binarynumber> when an injected error is recorded. This bit is <arm-defined-word>RES0</arm-defined-word> if the node does not support this control.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Error recovery">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="PN_10_10"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>PN</field_name>
          <field_msb>10</field_msb>
          <field_lsb>10</field_lsb>
          <field_description order="before">
          
  <para>Poison flag. The value that is written to <register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.PN when an injected error is recorded.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.PN is set to <binarynumber>0b0</binarynumber> when an injected error is recorded.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.PN is set to <binarynumber>0b1</binarynumber> when an injected error is recorded.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is <arm-defined-word>RES0</arm-defined-word> if the node does not support this control.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Error recovery">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="ER_9_9"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ER</field_name>
          <field_msb>9</field_msb>
          <field_lsb>9</field_lsb>
          <field_description order="before">
          
  <para>Error Reported flag. The value that is written to <register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.ER when an injected error is recorded.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.ER is set to <binarynumber>0b0</binarynumber> when an injected error is recorded.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.ER is set to <binarynumber>0b1</binarynumber> when an injected error is recorded.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is <arm-defined-word>RES0</arm-defined-word> if the node does not support this control.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Error recovery">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="CI_8_8"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>CI</field_name>
          <field_msb>8</field_msb>
          <field_lsb>8</field_lsb>
          <field_description order="before">
          
  <para>Critical Error flag. The value that is written to <register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.CI when an injected error is recorded.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.CI is set to <binarynumber>0b0</binarynumber> when an injected error is recorded.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.CI is set to <binarynumber>0b1</binarynumber> when an injected error is recorded.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is <arm-defined-word>RES0</arm-defined-word> if the node does not support this control.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Error recovery">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="CE_7_6"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>CE</field_name>
          <field_msb>7</field_msb>
          <field_lsb>6</field_lsb>
          <field_description order="before">
          
  <para>Corrected Error generation enable. Controls the type of Corrected Error condition that might be generated.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
  <para>No error of this type will be generated.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
  <para>A non-specific Corrected Error, that is, a Corrected Error that is recorded as <register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.CE == <binarynumber>0b10</binarynumber>, might be generated when the Error Generation Counter decrements to zero.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
  <para>A transient Corrected Error, that is, a Corrected Error that is recorded as <register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.CE == <binarynumber>0b01</binarynumber>, might be generated when the Error Generation Counter decrements to zero.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b11</field_value>
        <field_value_description>
  <para>A persistent Corrected Error, that is, a Corrected Error that is recorded as <register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.CE == <binarynumber>0b11</binarynumber>, might be generated when the Error Generation Counter decrements to zero.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>The set of permitted values for this field is defined by <register_link state="ext" id="ext-errnpfgf.xml">ERR&lt;n&gt;PFGF</register_link>.CE.</para>
<para>This field is <arm-defined-word>RES0</arm-defined-word> if the node does not support this control.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Error recovery">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="DE_5_5"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>DE</field_name>
          <field_msb>5</field_msb>
          <field_lsb>5</field_lsb>
          <field_description order="before">
          
  <para>Deferred Error generation enable. Controls whether this type of error condition might be generated. It is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether the error is generated if the data is not consumed.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>No error of this type will be generated.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>An error of this type might be generated when the Error Generation Counter decrements to zero.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is <arm-defined-word>RES0</arm-defined-word> if the node does not support this control.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Error recovery">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="UEO_4_4"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>UEO</field_name>
          <field_msb>4</field_msb>
          <field_lsb>4</field_lsb>
          <field_description order="before">
          
  <para>Latent or Restartable Error generation enable. Controls whether this type of error condition might be generated. It is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether the error is generated if the data is not consumed.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>No error of this type will be generated.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>An error of this type might be generated when the Error Generation Counter decrements to zero.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is <arm-defined-word>RES0</arm-defined-word> if the node does not support this control.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Error recovery">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="UER_3_3"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>UER</field_name>
          <field_msb>3</field_msb>
          <field_lsb>3</field_lsb>
          <field_description order="before">
          
  <para>Signaled or Recoverable Error generation enable. Controls whether this type of error condition might be generated. It is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether the error is generated if the data is not consumed.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>No error of this type will be generated.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>An error of this type might be generated when the Error Generation Counter decrements to zero.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is <arm-defined-word>RES0</arm-defined-word> if the node does not support this control.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Error recovery">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="UEU_2_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>UEU</field_name>
          <field_msb>2</field_msb>
          <field_lsb>2</field_lsb>
          <field_description order="before">
          
  <para>Unrecoverable Error generation enable. Controls whether this type of error condition might be generated. It is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether the error is generated if the data is not consumed.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>No error of this type will be generated.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>An error of this type might be generated when the Error Generation Counter decrements to zero.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is <arm-defined-word>RES0</arm-defined-word> if the node does not support this control.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Error recovery">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="UC_1_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>UC</field_name>
          <field_msb>1</field_msb>
          <field_lsb>1</field_lsb>
          <field_description order="before">
          
  <para>Uncontainable Error generation enable. Controls whether this type of error condition might be generated. It is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether the error is generated if the data is not consumed.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>No error of this type will be generated.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>An error of this type might be generated when the Error Generation Counter decrements to zero.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is <arm-defined-word>RES0</arm-defined-word> if the node does not support this control.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Error recovery">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="OF_0_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>OF</field_name>
          <field_msb>0</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Overflow flag. The value that is written to <register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.OF when an injected error is recorded.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.OF is set to <binarynumber>0b0</binarynumber> when an injected error is recorded.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para><register_link state="ext" id="ext-errnstatus.xml">ERR&lt;n&gt;STATUS</register_link>.OF is set to <binarynumber>0b1</binarynumber> when an injected error is recorded.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit is <arm-defined-word>RES0</arm-defined-word> if the node does not support this control.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Error recovery">
        
      <field_reset_standard_text>UC</field_reset_standard_text>
  
      </field_reset>
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="64">
      
        <fieldat id="0_63_32" msb="63" lsb="32"/>
        <fieldat id="CDNEN_31_31" msb="31" lsb="31"/>
        <fieldat id="R_30_30" msb="30" lsb="30"/>
        <fieldat id="0_29_13" msb="29" lsb="13"/>
        <fieldat id="MV_12_12" msb="12" lsb="12"/>
        <fieldat id="AV_11_11" msb="11" lsb="11"/>
        <fieldat id="PN_10_10" msb="10" lsb="10"/>
        <fieldat id="ER_9_9" msb="9" lsb="9"/>
        <fieldat id="CI_8_8" msb="8" lsb="8"/>
        <fieldat id="CE_7_6" msb="7" lsb="6"/>
        <fieldat id="DE_5_5" msb="5" lsb="5"/>
        <fieldat id="UEO_4_4" msb="4" lsb="4"/>
        <fieldat id="UER_3_3" msb="3" lsb="3"/>
        <fieldat id="UEU_2_2" msb="2" lsb="2"/>
        <fieldat id="UC_1_1" msb="1" lsb="1"/>
        <fieldat id="OF_0_0" msb="0" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
        <reg_variables>
              <reg_variable variable="n" max="65534"/>
        </reg_variables>
      


<access_mechanisms>
  


</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>