<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register is_register="True" is_internal="False" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>MPAMF_MBW_IDR</reg_short_name>
      <reg_long_name>MPAM Memory Bandwidth Partitioning Identification Register</reg_long_name>
        <reg_condition otherwise="RES0">when MPAMF_IDR.HAS_MBW_PART == 1</reg_condition>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Any"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_s</reg_frame>
    <reg_offset><hexnumber>0x0040</hexnumber></reg_offset>
    <reg_instance>MPAMF_MBW_IDR_s</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Any"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_ns</reg_frame>
    <reg_offset><hexnumber>0x0040</hexnumber></reg_offset>
    <reg_instance>MPAMF_MBW_IDR_ns</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>

          <reg_reset_value>

      </reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Indicates which MPAM bandwidth partitioning features are present on this MSC. MPAMF_MBW_IDR_s indicates bandwidth partitioning features accessed from the Secure MPAM feature page. MPAMF_MBW_IDR_ns indicates bandwidth partitioning features accessed from the Non-secure MPAM feature page.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>Memory Partitioning and Monitoring registers</reg_group>
      </reg_groups>
      <reg_configuration>
        

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>MPAMF_MBW_IDR is a 32-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="32">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_31_29"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>31</field_msb>
          <field_lsb>29</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="BWPBM_WD_28_16"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>BWPBM_WD</field_name>
          <field_msb>28</field_msb>
          <field_lsb>16</field_lsb>
          <field_description order="before">
          
  <para>Bandwidth portion bitmap width.</para>
<para>The number of bandwidth portion bits in <register_link state="ext" id="ext-mpamcfg_mbw_pbm.xml">MPAMCFG_MBW_PBM</register_link>.BWPBM.</para>
<para>This field must contain a value from 1 to 4096, inclusive. Values greater than 32 require a group of 32-bit registers to access the BWPBM, up to 128 if BWPBM_WD is the largest value.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="0_15_15"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>15</field_msb>
          <field_lsb>15</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="WINDWR_14_14"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>WINDWR</field_name>
          <field_msb>14</field_msb>
          <field_lsb>14</field_lsb>
          <field_description order="before">
          
  <para>Indicates the bandwidth accounting period register is writable.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The bandwidth accounting period is readable from <register_link state="ext" id="ext-mpamcfg_mbw_winwd.xml">MPAMCFG_MBW_WINWD</register_link> which might be fixed or vary due to clock rate reconfiguration of the memory channel or memory controller.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The bandwidth accounting width is readable and writable per partition in <register_link state="ext" id="ext-mpamcfg_mbw_winwd.xml">MPAMCFG_MBW_WINWD</register_link>.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="HAS_PROP_13_13"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>HAS_PROP</field_name>
          <field_msb>13</field_msb>
          <field_lsb>13</field_lsb>
          <field_description order="before">
          
  <para>Indicates that this MSC implements proportional stride bandwidth partitioning and the <register_link state="ext" id="ext-mpamcfg_mbw_prop.xml">MPAMCFG_MBW_PROP</register_link> register.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>There is no memory bandwidth proportional stride control and no <register_link state="ext" id="ext-mpamcfg_mbw_prop.xml">MPAMCFG_MBW_PROP</register_link> register.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The <register_link state="ext" id="ext-mpamcfg_mbw_prop.xml">MPAMCFG_MBW_PROP</register_link> register exists and the proportional stride memory bandwidth allocation scheme is supported.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="HAS_PBM_12_12"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>HAS_PBM</field_name>
          <field_msb>12</field_msb>
          <field_lsb>12</field_lsb>
          <field_description order="before">
          
  <para>Indicates that this MSC implements bandwidth portion partitioning and the <register_link state="ext" id="ext-mpamcfg_mbw_pbm.xml">MPAMCFG_MBW_PBM</register_link> register.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>There is no memory bandwidth portion control and no <register_link state="ext" id="ext-mpamcfg_mbw_pbm.xml">MPAMCFG_MBW_PBM</register_link> register.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The <register_link state="ext" id="ext-mpamcfg_mbw_pbm.xml">MPAMCFG_MBW_PBM</register_link> register exists and the memory bandwidth portion allocation scheme exists.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="HAS_MAX_11_11"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>HAS_MAX</field_name>
          <field_msb>11</field_msb>
          <field_lsb>11</field_lsb>
          <field_description order="before">
          
  <para>Indicates that this MSC implements maximum bandwidth partitioning and the <register_link state="ext" id="ext-mpamcfg_mbw_max.xml">MPAMCFG_MBW_MAX</register_link> register.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>There is no maximum memory bandwidth control and no <register_link state="ext" id="ext-mpamcfg_mbw_max.xml">MPAMCFG_MBW_MAX</register_link> register.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The <register_link state="ext" id="ext-mpamcfg_mbw_max.xml">MPAMCFG_MBW_MAX</register_link> register exists and the maximum memory bandwidth allocation scheme is supported.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="HAS_MIN_10_10"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>HAS_MIN</field_name>
          <field_msb>10</field_msb>
          <field_lsb>10</field_lsb>
          <field_description order="before">
          
  <para>Indicates that this MSC implements minimum bandwidth partitioning.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>There is no minimum memory bandwidth control and no <register_link state="ext" id="ext-mpamcfg_mbw_min.xml">MPAMCFG_MBW_MIN</register_link> register.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The <register_link state="ext" id="ext-mpamcfg_mbw_min.xml">MPAMCFG_MBW_MIN</register_link> register exists and the minimum memory bandwidth allocation scheme is supported.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="0_9_6"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>9</field_msb>
          <field_lsb>6</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="BWA_WD_5_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>BWA_WD</field_name>
          <field_msb>5</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Number of implemented bits in the bandwidth allocation fields: MIN, MAX and STRIDE. See <register_link state="ext" id="ext-mpamcfg_mbw_min.xml">MPAMCFG_MBW_MIN</register_link>, <register_link state="ext" id="ext-mpamcfg_mbw_max.xml">MPAMCFG_MBW_MAX</register_link> and <register_link state="ext" id="ext-mpamcfg_mbw_prop.xml">MPAMCFG_MBW_PROP</register_link>.</para>
<para>This field must have a value from 1 to 16, inclusive.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="32">
      
        <fieldat id="0_31_29" msb="31" lsb="29"/>
        <fieldat id="BWPBM_WD_28_16" msb="28" lsb="16"/>
        <fieldat id="0_15_15" msb="15" lsb="15"/>
        <fieldat id="WINDWR_14_14" msb="14" lsb="14"/>
        <fieldat id="HAS_PROP_13_13" msb="13" lsb="13"/>
        <fieldat id="HAS_PBM_12_12" msb="12" lsb="12"/>
        <fieldat id="HAS_MAX_11_11" msb="11" lsb="11"/>
        <fieldat id="HAS_MIN_10_10" msb="10" lsb="10"/>
        <fieldat id="0_9_6" msb="9" lsb="6"/>
        <fieldat id="BWA_WD_5_0" msb="5" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  
    
      <access_permission_text>
        <para>This register is within the MPAM feature page memory frames. In a system that supports Secure and Non-secure memory maps, there must be both Secure and Non-secure MPAM feature pages.</para>

      </access_permission_text>
      <access_permission_text>
        <para>MPAMF_MBW_IDR is read-only.</para>

      </access_permission_text>
      <access_permission_text>
        <para>MPAMF_MBW_IDR must be readable from the Non-secure and Secure MPAM feature pages.</para>

      </access_permission_text>
      <access_permission_text>
        <para>MPAMF_MBW_IDR is permitted to have the same contents when read from either the Secure and Non-secure MPAM feature pages unless the register contents is different for Secure and Non-secure versions, when there must be separate registers in the Secure (MPAMF_MBW_IDR_s) and Non-secure (MPAMF_MBW_IDR_ns) MPAM feature pages.</para>
      </access_permission_text>


</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>