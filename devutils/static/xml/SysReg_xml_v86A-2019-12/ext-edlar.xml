<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register is_register="True" is_internal="False" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>EDLAR</reg_short_name>
      <reg_long_name>External Debug Lock Access Register</reg_long_name>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="None"
  >
    <reg_component>Debug</reg_component>
    <reg_offset><hexnumber>0xFB0</hexnumber></reg_offset>
    <reg_instance>EDLAR</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_level>When ARMv8.3-DoPD is not implemented or IsCorePowered()</reg_access_level>
            <reg_access_type>WO</reg_access_type>
        </reg_access_state>
        
        <reg_access_state>
            <reg_access_type>ERROR</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>

          <reg_reset_value></reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Allows or disallows access to the external debug registers through a memory-mapped interface.</para>

      </purpose_text>
      <purpose_text>
        <para>The optional Software Lock provides a lock to prevent memory-mapped writes to the debug registers. Use of this lock mechanism reduces the risk of accidental damage to the contents of the debug registers. It does not, and cannot, prevent all accidental or malicious damage.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>Debug registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>If ARMv8.3-DoPD is implemented, then ARMv8.0-SoftwareLock is not implemented by the architecturally-defined debug components of the PE in the Core power domain.</para>

      </configuration_text>
      <configuration_text>
        <para>If ARMv8.3-DoPD is not implemented, then this register is in the Debug power domain.</para>

      </configuration_text>
      <configuration_text>
        <para>Software uses EDLAR to set or clear the lock, and <register_link state="ext" id="ext-edlsr.xml">EDLSR</register_link> to check the current status of the lock.</para>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>EDLAR is a 32-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="32">
      <fields_condition>When the Software Lock is implemented.</fields_condition>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="KEY_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>KEY</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Lock Access control. Writing the key value <hexnumber>0xC5ACCE55</hexnumber> to this field unlocks the lock, enabling write accesses to this component's registers through a memory-mapped interface.</para>
<para>Writing any other value to this register locks the lock, disabling write accesses to this component's registers through a memory mapped interface.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <fields length="32">
      <fields_condition></fields_condition>
      <fields_instance>Otherwise</fields_instance>
    <text_before_fields>
      
  <para>Otherwise</para>

    </text_before_fields>
    
        <field
           id="0_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="32">
        <fields_condition>When the Software Lock is implemented.</fields_condition>
      
        <fieldat id="KEY_31_0" msb="31" lsb="0"/>
    </reg_fieldset>
  <reg_fieldset length="32">
        <fields_condition></fields_condition>
      
        <fieldat id="0_31_0" msb="31" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  


</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>