<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register is_register="True" is_internal="False" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>DBGBVR&lt;n&gt;_EL1</reg_short_name>
      <reg_long_name>Debug Breakpoint Value Registers</reg_long_name>
          <reg_array>
              <reg_array_start>0</reg_array_start>
              <reg_array_end>15</reg_array_end>
         </reg_array>
      
  <reg_address
      external_access="True"
    mem_map_access="True"
      power_domain="Core"
      register_startbit="63"
      register_endbit="0"
  >
    <reg_component>Debug</reg_component>
    <reg_offset><hexnumber>0x400</hexnumber> + 16n</reg_offset>
    <reg_instance>DBGBVR&lt;n&gt;_EL1</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_level>When IsCorePowered(), !DoubleLockStatus(), !OSLockStatus(), AllowExternalDebugAccess() and SoftwareLockStatus()</reg_access_level>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
        
        <reg_access_state>
            <reg_access_level>When IsCorePowered(), !DoubleLockStatus(), !OSLockStatus(), AllowExternalDebugAccess() and !SoftwareLockStatus()</reg_access_level>
            <reg_access_type>RW</reg_access_type>
        </reg_access_state>
        
        <reg_access_state>
            <reg_access_type>ERROR</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>

          <reg_reset_value></reg_reset_value>
      <reg_mappings>
          <reg_mapping>
              
            <mapped_name filename="AArch64-dbgbvrn_el1.xml">DBGBVR&lt;n&gt;_EL1</mapped_name>
            <mapped_type>Architectural</mapped_type>
              <mapped_execution_state>AArch64</mapped_execution_state>
              <mapped_from_startbit>63</mapped_from_startbit>
              <mapped_from_endbit>0</mapped_from_endbit>

              <mapped_to_startbit>63</mapped_to_startbit>
              <mapped_to_endbit>0</mapped_to_endbit>

          </reg_mapping>
          <reg_mapping>
              
            <mapped_name filename="AArch32-dbgbvrn.xml">DBGBVR&lt;n&gt;</mapped_name>
            <mapped_type>Architectural</mapped_type>
              <mapped_execution_state>AArch32</mapped_execution_state>
              <mapped_from_startbit>31</mapped_from_startbit>
              <mapped_from_endbit>0</mapped_from_endbit>

              <mapped_to_startbit>31</mapped_to_startbit>
              <mapped_to_endbit>0</mapped_to_endbit>

          </reg_mapping>
          <reg_mapping>
              
            <mapped_name filename="AArch32-dbgbxvrn.xml">DBGBXVR&lt;n&gt;</mapped_name>
            <mapped_type>Architectural</mapped_type>
              <mapped_execution_state>AArch32</mapped_execution_state>
              <mapped_from_startbit>63</mapped_from_startbit>
              <mapped_from_endbit>32</mapped_from_endbit>

              <mapped_to_startbit>31</mapped_to_startbit>
              <mapped_to_endbit>0</mapped_to_endbit>

          </reg_mapping>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Holds a virtual address, or a VMID and/or a context ID, for use in breakpoint matching. Forms breakpoint n together with control register <register_link state="ext" id="ext-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>Debug registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>If breakpoint n is not implemented then accesses to this register are:</para>

      </configuration_text>
      <configuration_text>
        <list type="unordered">
<listitem><content><arm-defined-word>RES0</arm-defined-word> when IsCorePowered() &amp;&amp; !DoubleLockStatus() &amp;&amp; !OSLockStatus() &amp;&amp; AllowExternalDebugAccess().</content>
</listitem><listitem><content>A <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word> choice of <arm-defined-word>RES0</arm-defined-word> or ERROR otherwise.</content>
</listitem></list>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          
    
      <attributes_text>
        <para>How this register is interpreted depends on the value of <register_link state="ext" id="ext-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>.BT.</para>

      </attributes_text>
      <attributes_text>
        <list type="unordered">
<listitem><content>When <register_link state="ext" id="ext-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>.BT is <binarynumber>0b0x0x</binarynumber>, this register holds a virtual address.</content>
</listitem><listitem><content>When <register_link state="ext" id="ext-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>.BT is <binarynumber>0b001x</binarynumber>, <binarynumber>0b011x</binarynumber>, or <binarynumber>0b110x</binarynumber>, this register holds a Context ID.</content>
</listitem><listitem><content>When <register_link state="ext" id="ext-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>.BT is <binarynumber>0b100x</binarynumber>, this register holds a VMID.</content>
</listitem><listitem><content>When <register_link state="ext" id="ext-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>.BT is <binarynumber>0b101x</binarynumber>, this register holds a VMID and a Context ID.</content>
</listitem><listitem><content>When <register_link state="ext" id="ext-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>.BT is <binarynumber>0b111x</binarynumber>, this register holds two Context ID values.</content>
</listitem></list>

      </attributes_text>
      <attributes_text>
        <para>For other values of <register_link state="ext" id="ext-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>.BT, this register is <arm-defined-word>RES0</arm-defined-word>.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="64">
      <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b0x0x</fields_condition>
      <fields_instance>DBGBCR&lt;n&gt;_EL1.BT==0b0x0x</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="RESS[14:4]_63_53"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>RESS[14:4]</field_name>
          <field_msb>63</field_msb>
          <field_lsb>53</field_lsb>
          <field_description order="before">
          
  <para>Reserved, Sign extended. Software must treat this field as <arm-defined-word>RES0</arm-defined-word> if the most significant bit of VA is 0 or <arm-defined-word>RES0</arm-defined-word>, and as <arm-defined-word>RES1</arm-defined-word> if the most significant bit of VA is 1.</para>
<para>Hardware always ignores the value of these bits and it is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether:</para>
<list type="unordered">
<listitem><content>The bits are hardwired to a copy of the most significant bit of VA, meaning writes to these bits are ignored, and reads to the bits always return the hardwired value.</content>
</listitem><listitem><content>The value in those bits can be written, and reads will return the last value written. The value held in those bits is ignored by hardware.</content>
</listitem></list>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="VA[52:49]_52_49_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>VA[52:49]</field_name>
          <field_msb>52</field_msb>
          <field_lsb>49</field_lsb>
           <field_range>52:49</field_range>
          <field_description order="before">
          
  <para>Extension to VA[48:2]. See VA[48:2] for more details.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When ARMv8.2-LVA is implemented</fields_condition>
      </field>
        <field
           id="RESS[3:0]_52_49_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>RESS[3:0]</field_name>
          <field_msb>52</field_msb>
          <field_lsb>49</field_lsb>
           <field_range>52:49</field_range>
          <field_description order="before">
          
  <para>Extension to RESS[14:4]. See RESS[14:4] for more details.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="VA[48:2]_48_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>VA[48:2]</field_name>
          <field_msb>48</field_msb>
          <field_lsb>2</field_lsb>
          <field_description order="before">
          
  <para>If the address is being matched in an AArch64 stage 1 translation regime:</para>
<list type="unordered">
<listitem><content>This field contains bits[48:2] of the address for comparison.</content>
</listitem><listitem><content>When <xref browsertext="ARMv8.2-LVA" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.LVA"></xref> is implemented, VA[52:49] forms the upper part of the address value. Otherwise, VA[52:49] are RESS.</content>
</listitem></list>
<para>If the address is being matched in an AArch32 stage 1 translation regime, the first 20 bits of this field are <arm-defined-word>RES0</arm-defined-word>, and the rest of the field contains bits[31:2] of the address for comparison.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_1_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>1</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <fields length="64">
      <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b001x</fields_condition>
      <fields_instance>DBGBCR&lt;n&gt;_EL1.BT==0b001x</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_63_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>63</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="ContextID_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ContextID</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Context ID value for comparison.</para>
<para>The value is compared against <register_link state="AArch64" id="AArch64-contextidr_el2.xml">CONTEXTIDR_EL2</register_link> when <xref browsertext="ARMv8.1-VHE" filename="A_armv8_architecture_extensions.fm" linkend="v8.1.VHE"></xref> is implemented, EL2 is using AArch64, <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.E2H is 1, and either:</para>
<list type="unordered">
<listitem><content>The PE is executing at EL2.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.TGE is 1, the PE is executing at EL0, and EL2 is enabled in the current Security state.</content>
</listitem></list>
<para>Otherwise, the value is compared against the following:</para>
<list type="unordered">
<listitem><content>
<para><register_link state="AArch32" id="AArch32-contextidr.xml">CONTEXTIDR</register_link> when the PE is executing at AArch32</para>
</content>
</listitem><listitem><content>
<para><register_link state="AArch64" id="AArch64-contextidr_el1.xml">CONTEXTIDR_EL1</register_link> when the PE is executing at AArch64.</para>
</content>
</listitem></list>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <fields length="64">
      <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b011x, EL2 is implemented and (ARMv8.1-VHE is implemented or ARMv8.2-Debug is implemented)</fields_condition>
      <fields_instance>DBGBCR&lt;n&gt;_EL1.BT==0b011x</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_63_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>63</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="ContextID_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ContextID</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Context ID value for comparison against <register_link state="AArch64" id="AArch64-contextidr_el1.xml">CONTEXTIDR_EL1</register_link>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <fields length="64">
      <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b100x and EL2 is implemented</fields_condition>
      <fields_instance>DBGBCR&lt;n&gt;_EL1.BT==0b100x and EL2 implemented</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_63_48"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>63</field_msb>
          <field_lsb>48</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="VMID[15:8]_47_40_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>VMID[15:8]</field_name>
          <field_msb>47</field_msb>
          <field_lsb>40</field_lsb>
           <field_range>47:40</field_range>
          <field_description order="before">
          
  <para>Extension to VMID[7:0]. See DBGBVR&lt;n&gt;_EL1.VMID[7:0] for more details.</para>
<para>If EL2 is using AArch32, this field is <arm-defined-word>RES0</arm-defined-word>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When ARMv8.1-VHE is implemented and VTCR_EL2.VS == 1</fields_condition>
      </field>
        <field
           id="0_47_40_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>47</field_msb>
          <field_lsb>40</field_lsb>
           <field_range>47:40</field_range>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="VMID[7:0]_39_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>VMID[7:0]</field_name>
          <field_msb>39</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
          
  <para>VMID value for comparison.</para>
<para>The VMID is 8 bits when any of the following are true:</para>
<list type="unordered">
<listitem><content>EL2 is using AArch32.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-vtcr_el2.xml">VTCR_EL2</register_link>.VS is 0.</content>
</listitem><listitem><content><xref browsertext="ARMv8.1-VMID16" filename="A_armv8_architecture_extensions.fm" linkend="v8.1.VMID16"></xref> is not implemented.</content>
</listitem></list>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <fields length="64">
      <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b101x and EL2 is implemented</fields_condition>
      <fields_instance>DBGBCR&lt;n&gt;_EL1.BT==0b101x and EL2 implemented</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_63_48"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>63</field_msb>
          <field_lsb>48</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="VMID[15:8]_47_40_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>VMID[15:8]</field_name>
          <field_msb>47</field_msb>
          <field_lsb>40</field_lsb>
           <field_range>47:40</field_range>
          <field_description order="before">
          
  <para>Extension to VMID[7:0]. See DBGBVR&lt;n&gt;_EL1.VMID[7:0] for more details.</para>
<para>If EL2 is using AArch32, or if the implementation has an 8-bit VMID, this field is <arm-defined-word>RES0</arm-defined-word>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When ARMv8.1-VMID16 is implemented and VTCR_EL2.VS == 1</fields_condition>
      </field>
        <field
           id="0_47_40_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>47</field_msb>
          <field_lsb>40</field_lsb>
           <field_range>47:40</field_range>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="VMID[7:0]_39_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>VMID[7:0]</field_name>
          <field_msb>39</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
          
  <para>VMID value for comparison.</para>
<para>The VMID is 8 bits when any of the following are true:</para>
<list type="unordered">
<listitem><content>EL2 is using AArch32.</content>
</listitem><listitem><content><register_link state="AArch64" id="AArch64-vtcr_el2.xml">VTCR_EL2</register_link>.VS is 0.</content>
</listitem><listitem><content><xref browsertext="ARMv8.1-VMID16" filename="A_armv8_architecture_extensions.fm" linkend="v8.1.VMID16"></xref> is not implemented.</content>
</listitem></list>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="ContextID_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ContextID</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Context ID value for comparison against <register_link state="AArch64" id="AArch64-contextidr_el1.xml">CONTEXTIDR_EL1</register_link>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <fields length="64">
      <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b110x, EL2 is implemented and (ARMv8.1-VHE is implemented or ARMv8.2-Debug is implemented)</fields_condition>
      <fields_instance>DBGBCR&lt;n&gt;_EL1.BT==0b110x and EL2 implemented</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="ContextID2_63_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ContextID2</field_name>
          <field_msb>63</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
          
  <para>Context ID value for comparison against <register_link state="AArch64" id="AArch64-contextidr_el2.xml">CONTEXTIDR_EL2</register_link>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <fields length="64">
      <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b111x, EL2 is implemented and (ARMv8.1-VHE is implemented or ARMv8.2-Debug is implemented)</fields_condition>
      <fields_instance>DBGBCR&lt;n&gt;_EL1.BT==0b111x and EL2 implemented</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="ContextID2_63_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ContextID2</field_name>
          <field_msb>63</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
          
  <para>Context ID value for comparison against <register_link state="AArch64" id="AArch64-contextidr_el2.xml">CONTEXTIDR_EL2</register_link>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="ContextID_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ContextID</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Context ID value for comparison against <register_link state="AArch64" id="AArch64-contextidr_el1.xml">CONTEXTIDR_EL1</register_link>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="64">
        <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b0x0x</fields_condition>
      
        <fieldat id="RESS[14:4]_63_53" msb="63" lsb="53"/>
        <fieldat id="VA[52:49]_52_49_1" msb="52" lsb="49"/>
        <fieldat id="VA[48:2]_48_2" msb="48" lsb="2"/>
        <fieldat id="0_1_0" msb="1" lsb="0"/>
    </reg_fieldset>
  <reg_fieldset length="64">
        <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b001x</fields_condition>
      
        <fieldat id="0_63_32" msb="63" lsb="32"/>
        <fieldat id="ContextID_31_0" msb="31" lsb="0"/>
    </reg_fieldset>
  <reg_fieldset length="64">
        <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b011x, EL2 is implemented and (ARMv8.1-VHE is implemented or ARMv8.2-Debug is implemented)</fields_condition>
      
        <fieldat id="0_63_32" msb="63" lsb="32"/>
        <fieldat id="ContextID_31_0" msb="31" lsb="0"/>
    </reg_fieldset>
  <reg_fieldset length="64">
        <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b100x and EL2 is implemented</fields_condition>
      
        <fieldat id="0_63_48" msb="63" lsb="48"/>
        <fieldat id="VMID[15:8]_47_40_1" msb="47" lsb="40"/>
        <fieldat id="VMID[7:0]_39_32" msb="39" lsb="32"/>
        <fieldat id="0_31_0" msb="31" lsb="0"/>
    </reg_fieldset>
  <reg_fieldset length="64">
        <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b101x and EL2 is implemented</fields_condition>
      
        <fieldat id="0_63_48" msb="63" lsb="48"/>
        <fieldat id="VMID[15:8]_47_40_1" msb="47" lsb="40"/>
        <fieldat id="VMID[7:0]_39_32" msb="39" lsb="32"/>
        <fieldat id="ContextID_31_0" msb="31" lsb="0"/>
    </reg_fieldset>
  <reg_fieldset length="64">
        <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b110x, EL2 is implemented and (ARMv8.1-VHE is implemented or ARMv8.2-Debug is implemented)</fields_condition>
      
        <fieldat id="ContextID2_63_32" msb="63" lsb="32"/>
        <fieldat id="0_31_0" msb="31" lsb="0"/>
    </reg_fieldset>
  <reg_fieldset length="64">
        <fields_condition>When DBGBCR&lt;n&gt;_EL1.BT == 0b111x, EL2 is implemented and (ARMv8.1-VHE is implemented or ARMv8.2-Debug is implemented)</fields_condition>
      
        <fieldat id="ContextID2_63_32" msb="63" lsb="32"/>
        <fieldat id="ContextID_31_0" msb="31" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
        <reg_variables>
              <reg_variable variable="n" max="15"/>
        </reg_variables>
      


<access_mechanisms>
  
    
      <access_permission_text>
        <note><para>SoftwareLockStatus() depends on the type of access attempted and AllowExternalDebugAccess() has a new definition from Armv8.4. Refer to the Pseudocode definitions for more information.</para></note>
      </access_permission_text>


</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>