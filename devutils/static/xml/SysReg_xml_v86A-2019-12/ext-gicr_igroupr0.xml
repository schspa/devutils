<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register is_register="True" is_internal="False" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>GICR_IGROUPR0</reg_short_name>
      <reg_long_name>Interrupt Group Register 0</reg_long_name>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Unknown"
  >
    <reg_component>GIC Redistributor</reg_component>
    <reg_frame>SGI_base</reg_frame>
    <reg_offset><hexnumber>0x0080</hexnumber></reg_offset>
    <reg_instance>GICR_IGROUPR0</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_level>When GICD_CTLR.DS == 0b0</reg_access_level>
            <reg_access_type>RW</reg_access_type>
        </reg_access_state>
        
        <reg_access_state>
            <reg_access_level>When IsAccessSecure()</reg_access_level>
            <reg_access_type>RW</reg_access_type>
        </reg_access_state>
        
        <reg_access_state>
            <reg_access_level>When !IsAccessSecure()</reg_access_level>
            <reg_access_type>RW</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>

          <reg_reset_value></reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Controls whether the corresponding SGI or PPI is in Group 0 or Group 1.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
            <reg_group>GIC Redistributor registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>This register is available in all GIC configurations. If the GIC implementation supports two Security states, this register is Secure.</para>

      </configuration_text>
      <configuration_text>
        <para>A copy of this register is provided for each Redistributor.</para>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>GICR_IGROUPR0 is a 32-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="32">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="Redistributor_group_status_bit&lt;x&gt;_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>Redistributor_group_status_bit&lt;x&gt;</field_name>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_array>
            <field_array_start>31</field_array_start>
            <field_array_end>0</field_array_end>
            <field_array_description>x</field_array_description>
          </field_array>
          <field_description order="before">
          
  <para>Group status bit. In this register:</para>
<list type="unordered">
<listitem><content>Bits [31:16] are group status bits for PPIs.</content>
</listitem><listitem><content>Bits [15:0] are group status bits for SGIs.</content>
</listitem></list>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>When <register_link state="ext" id="ext-gicd_ctlr.xml">GICD_CTLR</register_link>.DS==1, the corresponding interrupt is Group 0.</para>
<para>When <register_link state="ext" id="ext-gicd_ctlr.xml">GICD_CTLR</register_link>.DS==0, the corresponding interrupt is Secure.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>When <register_link state="ext" id="ext-gicd_ctlr.xml">GICD_CTLR</register_link>.DS==1, the corresponding interrupt is Group 1.</para>
<para>When <register_link state="ext" id="ext-gicd_ctlr.xml">GICD_CTLR</register_link>.DS==0, the corresponding interrupt is Non-secure Group 1.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>When <register_link state="ext" id="ext-gicd_ctlr.xml">GICD_CTLR</register_link>.DS == 0, the bit that corresponds to the interrupt is concatenated with the equivalent bit in <register_link state="ext" id="ext-gicr_igrpmodr0.xml">GICR_IGRPMODR0</register_link> to form a 2-bit field that defines an interrupt group. The encoding of this field is at <register_link state="ext" id="ext-gicr_igrpmodr0.xml">GICR_IGRPMODR0</register_link>.</para>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
    <text_after_fields>
    
  <para>The considerations for the reset value of this register are the same as those for <register_link state="ext" id="ext-gicd_igrouprn.xml">GICD_IGROUPR&lt;n&gt;</register_link> with n=0.</para>

    </text_after_fields>
  </fields>
  <reg_fieldset length="32">
      
        <fieldat id="Redistributor_group_status_bit&lt;x&gt;_31_0" msb="31" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  
    
      <access_permission_text>
        <para>When affinity routing is not enabled for the Security state of an interrupt in GICR_IGROUPR0, the corresponding bit is <arm-defined-word>RES0</arm-defined-word> and equivalent functionality is provided by <register_link state="ext" id="ext-gicd_igrouprn.xml">GICD_IGROUPR&lt;n&gt;</register_link> with n=0.</para>

      </access_permission_text>
      <access_permission_text>
        <para>When <register_link state="ext" id="ext-gicd_ctlr.xml">GICD_CTLR</register_link>.DS == 0, the register is RAZ/WI to Non-secure accesses.</para>

      </access_permission_text>
      <access_permission_text>
        <para>Bits corresponding to unimplemented interrupts are RAZ/WI.</para>

      </access_permission_text>
      <access_permission_text>
        <note><para>Implementations must ensure that an interrupt that is pending at the time of the write uses either the old value or the new value and must ensure that the interrupt is neither lost nor handled more than one time. The effect of the change must be visible in finite time.</para></note>
      </access_permission_text>


</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>