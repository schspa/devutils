<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register is_register="True" is_internal="False" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>MPAMCFG_CPBM</reg_short_name>
      <reg_long_name>MPAM Cache Portion Bitmap Partition Configuration Register</reg_long_name>
        <reg_condition otherwise="RES0">when MPAMF_IDR.HAS_CPOR_PART == 1</reg_condition>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Any"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_s</reg_frame>
    <reg_offset><hexnumber>0x1000</hexnumber></reg_offset>
    <reg_instance>MPAMCFG_CPBM_s</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_type>RW</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Any"
  >
    <reg_component>MPAM</reg_component>
    <reg_frame>MPAMF_BASE_ns</reg_frame>
    <reg_offset><hexnumber>0x1000</hexnumber></reg_offset>
    <reg_instance>MPAMCFG_CPBM_ns</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_type>RW</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>

          <reg_reset_value>

      </reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>The MPAMCFG_CPBM register is a read-write register that configures the cache portions that a PARTID is allowed to allocate. After setting <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link> with a PARTID, software (usually a hypervisor) writes to the MPAMCFG_CPBM register to configure which cache portions the PARTID is allowed to allocate.</para>

      </purpose_text>
      <purpose_text>
        <para>MPAMCFG_CPBM_s controls cache portions for the Secure PARTID selected by the Secure instance of <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>. MPAMCFG_CPBM_ns controls the cache portions for the Non-secure PARTID selected by the Non-secure instance of <register_link state="ext" id="ext-mpamcfg_part_sel.xml">MPAMCFG_PART_SEL</register_link>.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>Memory Partitioning and Monitoring registers</reg_group>
      </reg_groups>
      <reg_configuration>
        

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>MPAMCFG_CPBM is a 32768-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="32768">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="CPBM&lt;n&gt;_32767_0"
           is_variable_length="True"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>CPBM&lt;n&gt;</field_name>
          <field_msb>32767</field_msb>
          <field_lsb>0</field_lsb>
          <field_array>
            <field_array_start>32767</field_array_start>
            <field_array_end>0</field_array_end>
            <field_array_description>n</field_array_description>
          </field_array>
          <field_description order="before">
          
  <para>Each bit, CPBM&lt;n&gt;, grants permission to the PARTID to allocate cache lines within cache portion n.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>The PARTID is not permitted to allocate into cache portion n.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>The PARTID is permitted to allocate within cache portion n.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>The number of bits in the cache portion partitioning bit map of this component is given in <register_link state="ext" id="ext-mpamf_cpor_idr.xml">MPAMF_CPOR_IDR</register_link>.CPBM_WD. CPBM_WD contains a value from 1 to 2<sup>15</sup>, inclusive. Values of CPBM_WD greater than 32 require a group of 32-bit registers to access the CPBM, up to 1024 registers.</para>
<para>Bits CPBM&lt;n&gt;, where n is greater than CPBM_WD, are not required to be implemented.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="32768">
      
        <fieldat id="CPBM&lt;n&gt;_32767_0" msb="32767" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  
    
      <access_permission_text>
        <para>This register is within the MPAM feature page memory frames. In a system that supports Secure and Non-secure memory maps, there must be both Secure and Non-secure MPAM feature pages.</para>

      </access_permission_text>
      <access_permission_text>
        <para>MPAMCFG_CPBM_s must be accessible from the Secure MPAM feature page. MPAMCFG_CPBM_ns must be accessible from the Non-secure MPAM feature page.</para>

      </access_permission_text>
      <access_permission_text>
        <para>MPAMCFG_CPBM_s and MPAMCFG_CPBM_ns must be separate registers. The Secure instance (MPAMCFG_CPBM_s) accesses the cache portion bitmaps used for Secure PARTIDs, and the Non-secure instance (MPAMCFG_CPBM_ns) accesses the cache portion bitmaps used for Non-secure PARTIDs.</para>
      </access_permission_text>


</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>