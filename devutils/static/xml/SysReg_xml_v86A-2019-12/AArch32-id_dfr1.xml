<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register execution_state="AArch32" is_register="True" is_internal="True" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>ID_DFR1</reg_short_name>
      <reg_long_name>Debug Feature Register 1</reg_long_name>
        <reg_condition otherwise="RES0">when AArch32 is supported at any Exception level</reg_condition>
      

          <reg_reset_value>

      </reg_reset_value>
      <reg_mappings>
          <reg_mapping>
              
            <mapped_name filename="AArch64-id_dfr1_el1.xml">ID_DFR1_EL1</mapped_name>
            <mapped_type>Architectural</mapped_type>
              <mapped_execution_state>AArch64</mapped_execution_state>
              <mapped_from_startbit>31</mapped_from_startbit>
              <mapped_from_endbit>0</mapped_from_endbit>

              <mapped_to_startbit>31</mapped_to_startbit>
              <mapped_to_endbit>0</mapped_to_endbit>

          </reg_mapping>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Provides top level information about the debug system in AArch32.</para>

      </purpose_text>
      <purpose_text>
        <para>For general information about the interpretation of the ID registers see <xref linkend="CHDIDAGF" browsertext="'Principles of the ID scheme for fields in ID registers' in the Arm&#174; Architecture Reference Manual, Armv8, for Armv8-A architecture profile, section G7.1.3"/>.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>Identification registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <note><para>Prior to the introduction of the features described by this register, this register was unnamed and reserved, <arm-defined-word>RES0</arm-defined-word> from EL1, EL2, and EL3.</para></note>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>ID_DFR1 is a 32-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="32">
      <fields_instance>ID_DFR1</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_31_4"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>31</field_msb>
          <field_lsb>4</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="MTPMU_3_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>MTPMU</field_name>
          <field_msb>3</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Multi-threaded PMU extension. Defined values are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
  <para>ARMv8.6-MTPMU not implemented. If PMUv3 is implemented, it is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether <register_link state="AArch32" id="AArch32-pmevtypern.xml">PMEVTYPER&lt;n&gt;</register_link>.MT are read/write or <arm-defined-word>RES0</arm-defined-word>.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
  <para>ARMv8.6-MTPMU implemented and <register_link state="AArch32" id="AArch32-pmevtypern.xml">PMEVTYPER&lt;n&gt;</register_link>.MT are read/write. When <xref browsertext="ARMv8.6-MTPMU" filename="A_armv8_architecture_extensions.fm" linkend="v8.6.MTPMU"></xref> is disabled, the Effective values of <register_link state="AArch32" id="AArch32-pmevtypern.xml">PMEVTYPER&lt;n&gt;</register_link>.MT are 0.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1111</field_value>
        <field_value_description>
  <para>ARMv8.6-MTPMU not implemented. If PMUv3 is implemented, <register_link state="AArch32" id="AArch32-pmevtypern.xml">PMEVTYPER&lt;n&gt;</register_link>.MT are <arm-defined-word>RES0</arm-defined-word>.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>All other values are reserved.</para>
<para><xref browsertext="ARMv8.6-MTPMU" filename="A_armv8_architecture_extensions.fm" linkend="v8.6.MTPMU"></xref> implements the functionality identified by the value <binarynumber>0b0001</binarynumber>.</para>
<para>In an Armv8.6-compliant implementation that includes PMUv3, the value <binarynumber>0b0000</binarynumber> is not permitted.</para>
<para>In an implementation that does not include PMUv3, the value <binarynumber>0b0001</binarynumber> is not permitted.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="32">
      
        <fieldat id="0_31_4" msb="31" lsb="4"/>
        <fieldat id="MTPMU_3_0" msb="3" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  


      <access_mechanism accessor="MRC ID_DFR1">
        <encoding>
          
          <access_instruction>MRC{&lt;c&gt;}{&lt;q&gt;} &lt;coproc&gt;, {#}&lt;opc1&gt;, &lt;Rt&gt;, &lt;CRn&gt;, &lt;CRm&gt;{, {#}&lt;opc2&gt;}</access_instruction>
            
            <enc n="coproc" v="0b1111"/>
            
            <enc n="opc1" v="0b000"/>
            
            <enc n="CRn" v="0b0000"/>
            
            <enc n="CRm" v="0b0011"/>
            
            <enc n="opc2" v="0b101"/>
        </encoding>
          <access_permission>
            <ps name="MRC" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; !ELUsingAArch32(EL2) &amp;&amp; HSTR_EL2.T0 == '1' then
        AArch64.AArch32SystemAccessTrap(EL2, 0x03);
    elsif EL2Enabled() &amp;&amp; ELUsingAArch32(EL2) &amp;&amp; HSTR.T0 == '1' then
        AArch32.TakeHypTrapException(0x03);
    elsif EL2Enabled() &amp;&amp; !ELUsingAArch32(EL2) &amp;&amp; (!IsZero(ID_DFR1) || boolean IMPLEMENTATION_DEFINED "ID_DFR1 trapped by HCR_EL2.TID3") &amp;&amp; HCR_EL2.TID3 == '1' then
        AArch64.AArch32SystemAccessTrap(EL2, 0x03);
    elsif EL2Enabled() &amp;&amp; ELUsingAArch32(EL2) &amp;&amp; (!IsZero(ID_DFR1) || boolean IMPLEMENTATION_DEFINED "ID_DFR1 trapped by HCR.TID3") &amp;&amp; HCR.TID3 == '1' then
        AArch32.TakeHypTrapException(0x03);
    else
        return ID_DFR1;
elsif PSTATE.EL == EL2 then
    return ID_DFR1;
elsif PSTATE.EL == EL3 then
    return ID_DFR1;
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>