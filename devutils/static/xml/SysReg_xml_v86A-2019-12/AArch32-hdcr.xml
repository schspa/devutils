<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register execution_state="AArch32" is_register="True" is_internal="True" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>HDCR</reg_short_name>
      <reg_long_name>Hyp Debug Control Register</reg_long_name>
        <reg_condition otherwise="UNKNOWN">when AArch32 is supported at any Exception level</reg_condition>
      

          <reg_reset_value type="Warm">
            <reg_reset_limited_to_el>EL2</reg_reset_limited_to_el>
            <reg_reset_limited_to_el>EL3</reg_reset_limited_to_el>

      </reg_reset_value>
      <reg_mappings>
          <reg_mapping>
              
            <mapped_name filename="AArch64-mdcr_el2.xml">MDCR_EL2</mapped_name>
            <mapped_type>Architectural</mapped_type>
              <mapped_execution_state>AArch64</mapped_execution_state>
              <mapped_from_startbit>31</mapped_from_startbit>
              <mapped_from_endbit>0</mapped_from_endbit>

              <mapped_to_startbit>31</mapped_to_startbit>
              <mapped_to_endbit>0</mapped_to_endbit>

          </reg_mapping>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Controls the trapping to Hyp mode of Non-secure accesses, at EL1 or lower, to functions provided by the debug and trace architectures and the Performance Monitors Extension.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
            <reg_group>Virtualization registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>If EL2 is not implemented, this register is <arm-defined-word>RES0</arm-defined-word> from EL3, and other than for a direct read of the register, the PE behaves as if HDCR.HPMN == <register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.N.</para>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>HDCR is a 32-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="32">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_31_29"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>31</field_msb>
          <field_lsb>29</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="MTPME_28_28_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>MTPME</field_name>
          <field_msb>28</field_msb>
          <field_lsb>28</field_lsb>
          <field_description order="before">
          
  <para>Multi-threaded PMU Enable. Enables use of the <register_link state="AArch32" id="AArch32-pmevtypern.xml">PMEVTYPER&lt;n&gt;</register_link>.MT bits.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>ARMv8.6-MTPMU is disabled. The Effective value of <register_link state="AArch32" id="AArch32-pmevtypern.xml">PMEVTYPER&lt;n&gt;</register_link>.MT is zero.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para><register_link state="AArch32" id="AArch32-pmevtypern.xml">PMEVTYPER&lt;n&gt;</register_link>.MT bits not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If ARMv8.6-MTPMU is disabled for any other PE in the system that has the same level 1 Affinity as the PE, it is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether the PE behaves as if this bit is 0.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_number>1</field_reset_number>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When ARMv8.6-MTPMU is implemented and EL3 is not implemented</fields_condition>
      </field>
        <field
           id="0_28_28_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>28</field_msb>
          <field_lsb>28</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TDCC_27_27_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TDCC</field_name>
          <field_msb>27</field_msb>
          <field_lsb>27</field_lsb>
          <field_description order="before">
          
  <para>Trap DCC. Traps use of the Debug Comms Channel at EL1 and EL0 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>This control does not cause any register accesses to be trapped.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If EL2 is implemented and enabled in the current Security state, accesses to the DCC registers at EL1 and EL0 generate a Hyp Trap exception, unless the access also generates a higher priority exception.</para>
<para>Traps on the DCC data transfer registers are ignored when the PE is in Debug state.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>The DCC registers trapped by this control are:</para>
<list type="unordered">
<listitem><content><register_link state="AArch32" id="AArch32-dbgdtrrxext.xml">DBGDTRRXext</register_link>, <register_link state="AArch32" id="AArch32-dbgdtrtxext.xml">DBGDTRTXext</register_link>, <register_link state="AArch32" id="AArch32-dbgdscrint.xml">DBGDSCRint</register_link>, <register_link state="AArch32" id="AArch32-dbgdccint.xml">DBGDCCINT</register_link>, and, when the PE is in Non-debug state, <register_link state="AArch32" id="AArch32-dbgdtrrxint.xml">DBGDTRRXint</register_link> and <register_link state="AArch32" id="AArch32-dbgdtrtxint.xml">DBGDTRTXint</register_link>.</content>
</listitem></list>
<para>The traps are reported with EC syndrome value:</para>
<list type="unordered">
<listitem><content>
<para><hexnumber>0x05</hexnumber> for trapped <instruction>MRC</instruction> and <instruction>MCR</instruction> accesses with <value>coproc</value> == <binarynumber>0b1110</binarynumber>.</para>
</content>
</listitem><listitem><content>
<para><hexnumber>0x06</hexnumber> for trapped <instruction>LDC</instruction> to <register_link state="AArch32" id="AArch32-dbgdtrtxint.xml">DBGDTRTXint</register_link> and <instruction>STC</instruction> from <register_link state="AArch32" id="AArch32-dbgdtrrxint.xml">DBGDTRRXint</register_link>.</para>
</content>
</listitem></list>
<para>When the PE is in Debug state, HDCR.TDCC does not trap any accesses to:</para>
<list type="unordered">
<listitem><content><register_link state="AArch32" id="AArch32-dbgdtrrxint.xml">DBGDTRRXint</register_link> and <register_link state="AArch32" id="AArch32-dbgdtrtxint.xml">DBGDTRTXint</register_link>.</content>
</listitem></list>

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
            <fields_condition>When ARMv8.6-FGT is implemented</fields_condition>
      </field>
        <field
           id="0_27_27_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>27</field_msb>
          <field_lsb>27</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="HLP_26_26_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>HLP</field_name>
          <field_msb>26</field_msb>
          <field_lsb>26</field_lsb>
          <field_description order="before">
          
  <para>Hypervisor Long event counter enable. Determines when unsigned overflow is recorded by a counter overflow bit.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event counter overflow on increment that causes unsigned overflow of <register_link state="AArch32" id="AArch32-pmevcntrn.xml">PMEVCNTR&lt;n&gt;</register_link>[31:0].</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Event counter overflow on increment that causes unsigned overflow of <register_link state="AArch32" id="AArch32-pmevcntrn.xml">PMEVCNTR&lt;n&gt;</register_link>[63:0].</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If the highest implemented Exception level is using AArch32, it is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether this bit is read/write or RAZ/WI.</para>
<para>If HDCR.HPMN is less than PMCR.N, this bit affects the operation of event counters in the range [HDCR.HPMN..(<register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.N-1)]. Otherwise this bit has no effect on the operation of the event counters.</para>
<note><para>The effect of HDCR.HPMN on the operation of this bit always applies if EL2 is implemented, at all Exception levels including EL2 and EL3, and regardless of whether EL2 is enabled in the current Security state.</para></note><para>For more information see the description of the HDCR.HPMN field.</para>
<note><para><register_link state="AArch32" id="AArch32-pmevcntrn.xml">PMEVCNTR&lt;n&gt;</register_link>[63:32] cannot be accessed directly in AArch32 state.</para></note>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When ARMv8.5-PMU is implemented</fields_condition>
      </field>
        <field
           id="0_26_26_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>26</field_msb>
          <field_lsb>26</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_25_24"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>25</field_msb>
          <field_lsb>24</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="HCCD_23_23_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>HCCD</field_name>
          <field_msb>23</field_msb>
          <field_lsb>23</field_lsb>
          <field_description order="before">
          
  <para>Hypervisor Cycle Counter Disable. Prohibits <register_link state="AArch32" id="AArch32-pmccntr.xml">PMCCNTR</register_link> from counting at EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Cycle counting by <register_link state="AArch32" id="AArch32-pmccntr.xml">PMCCNTR</register_link> is not affected by this bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Cycle counting by <register_link state="AArch32" id="AArch32-pmccntr.xml">PMCCNTR</register_link> is prohibited at EL2.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This bit does not affect the CPU_CYCLES event or any other event that counts cycles.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When ARMv8.5-PMU is implemented</fields_condition>
      </field>
        <field
           id="0_23_23_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>23</field_msb>
          <field_lsb>23</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_22_20"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>22</field_msb>
          <field_lsb>20</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TTRF_19_19_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TTRF</field_name>
          <field_msb>19</field_msb>
          <field_lsb>19</field_lsb>
          <field_description order="before">
          
  <para>Traps use of the Trace Filter Control registers at EL1 to EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Accesses to <register_link state="AArch32" id="AArch32-trfcr.xml">TRFCR</register_link> at EL1 are not affected by this control bit.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Accesses to <register_link state="AArch32" id="AArch32-trfcr.xml">TRFCR</register_link> at EL1 generate a Hyp Trap exception.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When ARMv8.4-Trace is implemented</fields_condition>
      </field>
        <field
           id="0_19_19_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>19</field_msb>
          <field_lsb>19</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_18_18"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>18</field_msb>
          <field_lsb>18</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="HPMD_17_17_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>HPMD</field_name>
          <field_msb>17</field_msb>
          <field_lsb>17</field_lsb>
          <field_description order="before">
          
  <para>Guest Performance Monitors Disable. This control prohibits event counting at EL2.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event counting allowed in Hyp mode.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Event counting prohibited in Hyp mode.</para>
<para>If ARMv8.2-Debug is not implemented, event counting is prohibited unless enabled by the <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> authentication interface ExternalSecureNoninvasiveDebugEnabled().</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>This control applies only to:</para>
<list type="unordered">
<listitem><content>The event counters in the range [0..(HDCR.HPMN-1)].</content>
</listitem><listitem><content>If <register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.DP is set to 1, <register_link state="AArch32" id="AArch32-pmccntr.xml">PMCCNTR</register_link>.</content>
</listitem></list>
<para>The other event counters are unaffected. When <register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.DP is set to 0, <register_link state="AArch32" id="AArch32-pmccntr.xml">PMCCNTR</register_link> is unaffected.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When ARMv8.1-PMU is implemented</fields_condition>
      </field>
        <field
           id="0_17_17_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>17</field_msb>
          <field_lsb>17</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="0_16_12"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>16</field_msb>
          <field_lsb>12</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TDRA_11_11"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>TDRA</field_name>
          <field_msb>11</field_msb>
          <field_lsb>11</field_lsb>
          <field_description order="before">
          
  <para>Trap Debug ROM Address register access. Traps Non-secure EL0 and EL1 System register accesses to the Debug ROM registers to Hyp mode.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>This control does not cause any instructions to be trapped.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Non-secure EL0 and EL1 System register accesses to the <register_link state="AArch32" id="AArch32-dbgdrar.xml">DBGDRAR</register_link> or <register_link state="AArch32" id="AArch32-dbgdsar.xml">DBGDSAR</register_link> are trapped to Hyp mode, unless it is trapped by <register_link state="AArch32" id="AArch32-dbgdscrext.xml">DBGDSCRext</register_link>.UDCCdis.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If <register_link state="AArch32" id="AArch32-hcr.xml">HCR</register_link>.TGE or HDCR.TDE is 1, behavior is as if this bit is 1 other than for the purpose of a direct read.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="TDOSA_10_10_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TDOSA</field_name>
          <field_msb>10</field_msb>
          <field_lsb>10</field_lsb>
          <field_description order="before">
          
  <para>Trap debug OS-related register access. Traps Non-secure EL1 System register accesses to the powerdown debug registers to Hyp mode.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>This control does not cause any instructions to be trapped.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Non-secure EL1 System register accesses to the powerdown debug registers are trapped to Hyp mode.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>The registers for which accesses are trapped are as follows:</para>
<list type="unordered">
<listitem><content><register_link state="AArch32" id="AArch32-dbgoslsr.xml">DBGOSLSR</register_link>, <register_link state="AArch32" id="AArch32-dbgoslar.xml">DBGOSLAR</register_link>, <register_link state="AArch32" id="AArch32-dbgosdlr.xml">DBGOSDLR</register_link>, and <register_link state="AArch32" id="AArch32-dbgprcr.xml">DBGPRCR</register_link>.</content>
</listitem><listitem><content>Any <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> register with similar functionality that the implementation specifies as trapped by this bit.</content>
</listitem></list>
<note><para>These registers are not accessible at EL0.</para></note><para>If <register_link state="AArch32" id="AArch32-hcr.xml">HCR</register_link>.TGE or <register_link state="AArch32" id="AArch32-hdcr.xml">HDCR</register_link>.TDE is 1, behavior is as if this bit is 1 other than for the purpose of a direct read.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When ARMv8.0-DoubleLock is implemented</fields_condition>
      </field>
        <field
           id="TDOSA_10_10_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TDOSA</field_name>
          <field_msb>10</field_msb>
          <field_lsb>10</field_lsb>
          <field_description order="before">
          
  <para>Trap debug OS-related register access. Traps Non-secure EL1 System register accesses to the powerdown debug registers to Hyp mode.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>This control does not cause any instructions to be trapped.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Non-secure EL1 System register accesses to the powerdown debug registers are trapped to Hyp mode.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>The registers for which accesses are trapped are as follows:</para>
<list type="unordered">
<listitem><content><register_link state="AArch32" id="AArch32-dbgoslsr.xml">DBGOSLSR</register_link>, <register_link state="AArch32" id="AArch32-dbgoslar.xml">DBGOSLAR</register_link>, and <register_link state="AArch32" id="AArch32-dbgprcr.xml">DBGPRCR</register_link>.</content>
</listitem><listitem><content>Any <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> register with similar functionality that the implementation specifies as trapped by this bit.</content>
</listitem></list>
<para>It is <arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> whether accesses to <register_link state="AArch32" id="AArch32-dbgosdlr.xml">DBGOSDLR</register_link> are trapped.</para>
<note><para>These registers are not accessible at EL0.</para></note><para>If <register_link state="AArch32" id="AArch32-hcr.xml">HCR</register_link>.TGE or <register_link state="AArch32" id="AArch32-hdcr.xml">HDCR</register_link>.TDE is 1, behavior is as if this bit is 1 other than for the purpose of a direct read.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="TDA_9_9"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>TDA</field_name>
          <field_msb>9</field_msb>
          <field_lsb>9</field_lsb>
          <field_description order="before">
          
  <para>Trap debug access. Traps Non-secure EL0 and EL1 System register accesses to those debug System registers in the (coproc==<binarynumber>0b1110</binarynumber>) encoding space that are not trapped by either of the following:</para>
<list type="unordered">
<listitem><content><register_link state="AArch32" id="AArch32-hdcr.xml">HDCR</register_link>.TDRA.</content>
</listitem><listitem><content><register_link state="AArch32" id="AArch32-hdcr.xml">HDCR</register_link>.TDOSA.</content>
</listitem></list>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>This control does not cause any instructions to be trapped.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Non-secure EL0 or EL1 System register accesses to the debug registers, other than the registers trapped by HDCR.TDRA and HDCR.TDOSA, are trapped to Hyp mode, unless it is trapped by <register_link state="AArch32" id="AArch32-dbgdscrext.xml">DBGDSCRext</register_link>.UDCCdis.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>Traps of AArch32 accesses to <register_link state="AArch32" id="AArch32-dbgdtrrxint.xml">DBGDTRRXint</register_link> and <register_link state="AArch32" id="AArch32-dbgdtrtxint.xml">DBGDTRTXint</register_link> are ignored in Debug state.</para>
<para>If <register_link state="AArch32" id="AArch32-hcr.xml">HCR</register_link>.TGE or HDCR.TDE is 1, behavior is as if this bit is 1 other than for the purpose of a direct read.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="TDE_8_8"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>TDE</field_name>
          <field_msb>8</field_msb>
          <field_lsb>8</field_lsb>
          <field_description order="before">
          
  <para>Trap Debug exceptions. The possible values of this bit are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>This control has no effect on the routing of debug exceptions, and has no effect on Non-secure accesses to debug registers.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Debug exceptions generated at EL1 or EL0 are routed to EL2 when enabled in the current Security state. The HDCR.{TDRA, TDOSA, TDA} fields are treated as being 1 for all purposes other than returning the result of a direct read of the register.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>When <register_link state="AArch32" id="AArch32-hcr.xml">HCR</register_link>.TGE == 1, the PE behaves as if the value of this field is 1 for all purposes other than returning the value of a direct read of the register.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="HPME_7_7_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>HPME</field_name>
          <field_msb>7</field_msb>
          <field_lsb>7</field_lsb>
          <field_description order="before">
          
  <para>[HDCR.HPMN..(N-1)] event counters enable.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Event counters in the range [HDCR.HPMN..(<register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.N-1)] are disabled.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Event counters in the range [HDCR.HPMN..(<register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.N-1)] are enabled by <register_link state="AArch32" id="AArch32-pmcntenset.xml">PMCNTENSET</register_link>.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>If HDCR.HPMN is less than <register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.N, the event counters in the range [HDCR.HPMN..(<register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.N-1)], are enabled and disabled by this bit. Otherwise this bit has no effect on the operation of the event counters.</para>
<note><para>The effect of HDCR.HPMN on the operation of this bit applies regardless of whether EL2 is enabled in the current Security state.</para></note><para>For more information see the description of the HPMN field.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When PMUv3 is implemented</fields_condition>
      </field>
        <field
           id="0_7_7_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>7</field_msb>
          <field_lsb>7</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TPM_6_6_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TPM</field_name>
          <field_msb>6</field_msb>
          <field_lsb>6</field_lsb>
          <field_description order="before">
          
  <para>Trap Performance Monitors accesses. Traps Non-secure EL0 and EL1 accesses to all Performance Monitors registers to Hyp mode.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>This control does not cause any instructions to be trapped.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Non-secure EL0 and EL1 accesses to all Performance Monitors registers are trapped to Hyp mode.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <note><para>EL2 does not provide traps on Performance Monitor register accesses through the optional memory-mapped external debug interface.</para></note>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When PMUv3 is implemented</fields_condition>
      </field>
        <field
           id="0_6_6_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>6</field_msb>
          <field_lsb>6</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TPMCR_5_5_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TPMCR</field_name>
          <field_msb>5</field_msb>
          <field_lsb>5</field_lsb>
          <field_description order="before">
          
  <para>Trap <register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link> accesses. Traps Non-secure EL0 and EL1 accesses to the <register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link> to Hyp mode.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>This control does not cause any instructions to be trapped.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Non-secure EL0 and EL1 accesses to the <register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link> are trapped to Hyp mode, unless it is trapped by <register_link state="AArch32" id="AArch32-pmuserenr.xml">PMUSERENR</register_link>.EN.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <note><para>EL2 does not provide traps on Performance Monitor register accesses through the optional memory-mapped external debug interface.</para></note>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When PMUv3 is implemented</fields_condition>
      </field>
        <field
           id="0_5_5_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>5</field_msb>
          <field_lsb>5</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="HPMN_4_0_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>HPMN</field_name>
          <field_msb>4</field_msb>
          <field_lsb>0</field_lsb>
           <field_range>4:0</field_range>
          <field_description order="before">
          
  <para>Defines the number of event counters that are accessible from Non-secure EL1 modes, and from Non-secure EL0 modes if unprivileged access is enabled.</para>
<para>If HPMN is less than <register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.N, HPMN divides the event counters into two ranges, [0..(HPMN-1)] and [HPMN..(<register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.N-1)].</para>
<para>For an event counter in the range [0..(HPMN-1)]:</para>
<list type="unordered">
<listitem><content>The counter is accessible from EL1 and EL2, and from EL0 if unprivileged access to the counters is enabled.</content>
</listitem><listitem><content>If <xref browsertext="ARMv8.5-PMU" filename="A_armv8_architecture_extensions.fm" linkend="v8.5.PMU"></xref> is implemented, <register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.LP determines whether the counter overflows at <register_link state="AArch32" id="AArch32-pmevcntrn.xml">PMEVCNTR&lt;n&gt;</register_link>[31:0] or <register_link state="AArch32" id="AArch32-pmevcntrn.xml">PMEVCNTR&lt;n&gt;</register_link>[63:0].</content>
</listitem><listitem><content><register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.E enables the operation of counters in this range.</content>
</listitem></list>
<note><para>If HPMN is equal to <register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.N, this applies to all event counters.</para></note><para>If HPMN is less than <register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.N, for an event counter in the range [HPMN..(<register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.N-1)]:</para>
<list type="unordered">
<listitem><content>The counter is accessible only from EL2 and from Secure state.</content>
</listitem><listitem><content>If <xref browsertext="ARMv8.5-PMU" filename="A_armv8_architecture_extensions.fm" linkend="v8.5.PMU"></xref> is implemented, <register_link state="AArch32" id="AArch32-hdcr.xml">HDCR</register_link>.HLP determines whether the counter overflows at <register_link state="AArch32" id="AArch32-pmevcntrn.xml">PMEVCNTR&lt;n&gt;</register_link>[31:0] or <register_link state="AArch32" id="AArch32-pmevcntrn.xml">PMEVCNTR&lt;n&gt;</register_link>[63:0].</content>
</listitem><listitem><content>HDCR.HPME enables the operation of counters in this range.</content>
</listitem></list>
<para>If this field is set to 0, or to a value larger than <register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.N, then the following <arm-defined-word>CONSTRAINED UNPREDICTABLE</arm-defined-word> behaviors apply:</para>
<list type="unordered">
<listitem><content>The value returned by a direct read of HDCR.HPMN is <arm-defined-word>UNKNOWN</arm-defined-word>.</content>
</listitem><listitem><content>Either:<list type="unordered">
<listitem><content>An <arm-defined-word>UNKNOWN</arm-defined-word> number of counters are reserved for EL2 use. That is, the PE behaves as if HDCR.HPMN is set to an <arm-defined-word>UNKNOWN</arm-defined-word> non-zero value less than or equal to <register_link state="AArch32" id="AArch32-pmcr.xml">PMCR</register_link>.N.</content>
</listitem><listitem><content>All counters are reserved for EL2 use, meaning no counters are accessible from Non-secure EL1 and Non-secure EL0.</content>
</listitem></list>
</content>
</listitem></list>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Warm">
        
      <field_reset_other_field>
        
        <field_reset_other_field_regname state="AArch32">PMCR</field_reset_other_field_regname>
        <field_reset_other_field_fieldname>N</field_reset_other_field_fieldname>
      </field_reset_other_field>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When PMUv3 is implemented</fields_condition>
      </field>
        <field
           id="0_4_0_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>4</field_msb>
          <field_lsb>0</field_lsb>
           <field_range>4:0</field_range>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="32">
      
        <fieldat id="0_31_29" msb="31" lsb="29"/>
        <fieldat id="MTPME_28_28_1" msb="28" lsb="28"/>
        <fieldat id="TDCC_27_27_1" msb="27" lsb="27"/>
        <fieldat id="HLP_26_26_1" msb="26" lsb="26"/>
        <fieldat id="0_25_24" msb="25" lsb="24"/>
        <fieldat id="HCCD_23_23_1" msb="23" lsb="23"/>
        <fieldat id="0_22_20" msb="22" lsb="20"/>
        <fieldat id="TTRF_19_19_1" msb="19" lsb="19"/>
        <fieldat id="0_18_18" msb="18" lsb="18"/>
        <fieldat id="HPMD_17_17_1" msb="17" lsb="17"/>
        <fieldat id="0_16_12" msb="16" lsb="12"/>
        <fieldat id="TDRA_11_11" msb="11" lsb="11"/>
        <fieldat id="TDOSA_10_10_1" msb="10" lsb="10"/>
        <fieldat id="TDA_9_9" msb="9" lsb="9"/>
        <fieldat id="TDE_8_8" msb="8" lsb="8"/>
        <fieldat id="HPME_7_7_1" msb="7" lsb="7"/>
        <fieldat id="TPM_6_6_1" msb="6" lsb="6"/>
        <fieldat id="TPMCR_5_5_1" msb="5" lsb="5"/>
        <fieldat id="HPMN_4_0_1" msb="4" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  


      <access_mechanism accessor="MRC HDCR">
        <encoding>
          
          <access_instruction>MRC{&lt;c&gt;}{&lt;q&gt;} &lt;coproc&gt;, {#}&lt;opc1&gt;, &lt;Rt&gt;, &lt;CRn&gt;, &lt;CRm&gt;{, {#}&lt;opc2&gt;}</access_instruction>
            
            <enc n="coproc" v="0b1111"/>
            
            <enc n="opc1" v="0b100"/>
            
            <enc n="CRn" v="0b0001"/>
            
            <enc n="CRm" v="0b0001"/>
            
            <enc n="opc2" v="0b001"/>
        </encoding>
          <access_permission>
            <ps name="MRC" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; !ELUsingAArch32(EL2) &amp;&amp; HSTR_EL2.T1 == '1' then
        AArch64.AArch32SystemAccessTrap(EL2, 0x03);
    elsif EL2Enabled() &amp;&amp; ELUsingAArch32(EL2) &amp;&amp; HSTR.T1 == '1' then
        AArch32.TakeHypTrapException(0x03);
    else
        UNDEFINED;
elsif PSTATE.EL == EL2 then
    if HaveEL(EL3) &amp;&amp; !ELUsingAArch32(EL3) &amp;&amp; MDCR_EL3.TDA == '1' then
        AArch64.AArch32SystemAccessTrap(EL3, 0x03);
    else
        return HDCR;
elsif PSTATE.EL == EL3 then
    if SCR.NS == '0' then
        UNDEFINED;
    else
        return HDCR;
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
      <access_mechanism accessor="MCR HDCR">
        <encoding>
          
          <access_instruction>MCR{&lt;c&gt;}{&lt;q&gt;} &lt;coproc&gt;, {#}&lt;opc1&gt;, &lt;Rt&gt;, &lt;CRn&gt;, &lt;CRm&gt;{, {#}&lt;opc2&gt;}</access_instruction>
            
            <enc n="coproc" v="0b1111"/>
            
            <enc n="opc1" v="0b100"/>
            
            <enc n="CRn" v="0b0001"/>
            
            <enc n="CRm" v="0b0001"/>
            
            <enc n="opc2" v="0b001"/>
        </encoding>
          <access_permission>
            <ps name="MCR" sections="1" secttype="access_permission">
              <pstext>
if PSTATE.EL == EL0 then
    UNDEFINED;
elsif PSTATE.EL == EL1 then
    if EL2Enabled() &amp;&amp; !ELUsingAArch32(EL2) &amp;&amp; HSTR_EL2.T1 == '1' then
        AArch64.AArch32SystemAccessTrap(EL2, 0x03);
    elsif EL2Enabled() &amp;&amp; ELUsingAArch32(EL2) &amp;&amp; HSTR.T1 == '1' then
        AArch32.TakeHypTrapException(0x03);
    else
        UNDEFINED;
elsif PSTATE.EL == EL2 then
    if HaveEL(EL3) &amp;&amp; !ELUsingAArch32(EL3) &amp;&amp; MDCR_EL3.TDA == '1' then
        AArch64.AArch32SystemAccessTrap(EL3, 0x03);
    else
        HDCR = R[t];
elsif PSTATE.EL == EL3 then
    if SCR.NS == '0' then
        UNDEFINED;
    else
        HDCR = R[t];
              </pstext>
            </ps>
          </access_permission>
      </access_mechanism>
</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>