<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register is_register="True" is_internal="False" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>CNTVOFF</reg_short_name>
      <reg_long_name>Counter-timer Virtual Offset</reg_long_name>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Any"
      register_startbit="31"
      register_endbit="0"
  >
    <reg_component>Timer</reg_component>
    <reg_frame>CNTBaseN</reg_frame>
    <reg_offset><hexnumber>0x018</hexnumber></reg_offset>
    <reg_access>
        
        <reg_access_state>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Any"
      register_startbit="63"
      register_endbit="32"
  >
    <reg_component>Timer</reg_component>
    <reg_frame>CNTBaseN</reg_frame>
    <reg_offset><hexnumber>0x01C</hexnumber></reg_offset>
    <reg_access>
        
        <reg_access_state>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>

          <reg_reset_value>


          <reg_reset_special_text>
              <para>On a reset of the reset domain in which an RW instance of this register is implemented, RW fields in the register reset to <arm-defined-word>UNKNOWN</arm-defined-word> values. The register is not affected by a reset of any other reset domain. For more information see <xref linkend="CEGHAIAF" browsertext="'Power and reset domains for the system level implementation of the Generic Timer' in Chapter I1 of the ArmÂ® Architecture Reference Manual, Armv8, for Armv8-A architecture profile"/>.</para>
          </reg_reset_special_text>
      </reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Holds the 64-bit virtual offset for a CNTBaseN frame that has virtual timer capability. This is the offset between real time and virtual time.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>Generic Timer registers</reg_group>
      </reg_groups>
      <reg_configuration>
        

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>CNTVOFF is a 64-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="64">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="None_63_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
           <field_shortdesc>Virtual offset</field_shortdesc>
          <field_msb>63</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Virtual offset.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
    
    
        <field_reset>
          
      <field_reset_standard_text>AU</field_reset_standard_text>
  
        </field_reset>
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="64">
      
        <fieldat id="None_63_0" msb="63" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  
    
      <access_permission_text>
        <para>CNTVOFF is implemented, as a RO register, in any implemented CNTBaseN frame that has virtual timer capability.</para>

      </access_permission_text>
      <access_permission_text>
        <para><xref linkend="CEGEDBEA" browsertext="'CNTCTLBase status and control fields for the CNTBaseN and CNTEL0BaseN frames' in Chapter I1 of the Arm&#174; Architecture Reference Manual, Armv8, for Armv8-A architecture profile"/> describes the status fields that identify whether a CNTBaseN frame is implemented, and for an implemented frame:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>Whether the CNTBaseN frame has virtual timer capability.</content>
</listitem><listitem><content>Whether the corresponding CNTEL0BaseN frame is implemented.</content>
</listitem><listitem><content>For an implementation that recognizes two Security states, whether the CNTBaseN frame, and any corresponding CNTEL0BaseN frame, is accessible by Non-secure accesses.</content>
</listitem></list>

      </access_permission_text>
      <access_permission_text>
        <para>For an implemented CNTBaseN frame that has virtual timer capability:</para>

      </access_permission_text>
      <access_permission_text>
        <list type="unordered">
<listitem><content>CNTVOFF is accessible in that frame, as a RO register, if the value of <register_link state="ext" id="ext-cntacrn.xml">CNTACR&lt;n&gt;</register_link>.RVOFF is 1.</content>
</listitem><listitem><content>Otherwise, the CNTVOFF address in that frame is RAZ/WI.</content>
</listitem></list>

      </access_permission_text>
      <access_permission_text>
        <note><para>CNTVOFF is never visible in any CNTEL0BaseN frame. This means that the CNTVOFF address in any implemented CNTEL0BaseN frame is RAZ/WI.</para></note>
      </access_permission_text>
      <access_permission_text>
        <para>In an implementation that supports 64-bit atomic accesses, a CNTVOFF{&lt;n&gt;} register must be accessible as an atomic 64-bit value.</para>
      </access_permission_text>


</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>