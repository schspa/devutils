<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register is_register="True" is_internal="False" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>EDDFR</reg_short_name>
      <reg_long_name>External Debug Feature Register</reg_long_name>
      
  <reg_address
      external_access="True"
    mem_map_access="True"
      power_domain="IMP DEF"
      register_startbit="31"
      register_endbit="0"
  >
    <reg_component>Debug</reg_component>
    <reg_offset><hexnumber>0xD28</hexnumber></reg_offset>
    <reg_instance>EDDFR</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_level>When IsCorePowered() and !DoubleLockStatus()</reg_access_level>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
        
        <reg_access_state>
            <reg_access_type>IMPDEF</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="True"
    mem_map_access="True"
      power_domain="IMP DEF"
      register_startbit="63"
      register_endbit="32"
  >
    <reg_component>Debug</reg_component>
    <reg_offset><hexnumber>0xD2C</hexnumber></reg_offset>
    <reg_instance>EDDFR</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_level>When IsCorePowered() and !DoubleLockStatus()</reg_access_level>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
        
        <reg_access_state>
            <reg_access_type>IMPDEF</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>

          <reg_reset_value></reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Provides top level information about the debug system.</para>

      </purpose_text>
      <purpose_text>
        <note><para>Debuggers must use <register_link state="ext" id="ext-eddevarch.xml">EDDEVARCH</register_link> to determine the Debug architecture version.</para></note>
      </purpose_text>
      <purpose_text>
        <para>For general information about the interpretation of the ID registers, see <xref browsertext="'Principles of the ID scheme for fields in ID registers' in the Arm&#174; Architecture Reference Manual, Armv8, for Armv8-A architecture profile" filename="D_aarch64_system_register_descriptions.fm" linkend="BABFAFHI"/>.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>Identification registers</reg_group>
      </reg_groups>
      <reg_configuration>
        

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>EDDFR is a 64-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="64">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="0_63_44"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>63</field_msb>
          <field_lsb>44</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="TraceFilt_43_40"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>TraceFilt</field_name>
          <field_msb>43</field_msb>
          <field_lsb>40</field_lsb>
          <field_description order="before">
          
  <para>Armv8.4 Self-hosted Trace Extension version. Defined values are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
  <para>Armv8.4 Self-hosted Trace Extension is not implemented.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
  <para>Armv8.4 Self-hosted Trace Extension is implemented.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>All other values are reserved.</para>
<para><xref browsertext="ARMv8.4-Trace" filename="A_armv8_architecture_extensions.fm" linkend="v8.4.Trace"></xref> implements the functionality added by <binarynumber>0b0001</binarynumber>.</para>
<para>From Armv8.4, the permitted values are <binarynumber>0b0000</binarynumber> and <binarynumber>0b0001</binarynumber>.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="UNKNOWN_39_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="UNKNOWN"
        >
          <field_name>UNKNOWN</field_name>
          <field_msb>39</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>UNKNOWN</arm-defined-word>.</para>
          </field_description>
            <field_values>
               
                 <field_value_name>U</field_value_name>
            </field_values>
      </field>
        <field
           id="CTX_CMPs_31_28"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>CTX_CMPs</field_name>
          <field_msb>31</field_msb>
          <field_lsb>28</field_lsb>
          <field_description order="before">
          
  <para>Number of breakpoints that are context-aware, minus 1. These are the highest numbered breakpoints.</para>
<para>In an Armv8-A implementation that supports AArch64 state in at least one Exception level, this field returns the value of <register_link state="AArch64" id="AArch64-id_aa64dfr0_el1.xml">ID_AA64DFR0_EL1</register_link>.CTX_CMPs.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="0_27_24"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>27</field_msb>
          <field_lsb>24</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="WRPs_23_20"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>WRPs</field_name>
          <field_msb>23</field_msb>
          <field_lsb>20</field_lsb>
          <field_description order="before">
          
  <para>Number of watchpoints, minus 1. The value of <binarynumber>0b0000</binarynumber> is reserved.</para>
<para>In an Armv8-A implementation that supports AArch64 state in at least one Exception level, this field returns the value of <register_link state="AArch64" id="AArch64-id_aa64dfr0_el1.xml">ID_AA64DFR0_EL1</register_link>.WRPs.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="0_19_16"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>19</field_msb>
          <field_lsb>16</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="BRPs_15_12"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>BRPs</field_name>
          <field_msb>15</field_msb>
          <field_lsb>12</field_lsb>
          <field_description order="before">
          
  <para>Number of breakpoints, minus 1. The value of <binarynumber>0b0000</binarynumber> is reserved.</para>
<para>In an Armv8-A implementation that supports AArch64 state in at least one Exception level, this field returns the value of <register_link state="AArch64" id="AArch64-id_aa64dfr0_el1.xml">ID_AA64DFR0_EL1</register_link>.BRPs.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="PMUVer_11_8"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>PMUVer</field_name>
          <field_msb>11</field_msb>
          <field_lsb>8</field_lsb>
          <field_description order="before">
          
  <para>Performance Monitors Extension version.</para>
<para>This field does not follow the standard ID scheme, but uses the Alternative ID scheme described in <xref browsertext="'Alternative ID scheme used for the Performance Monitors Extension version' in the Arm® Architecture Reference Manual, Armv8, for Armv8-A architecture profile, section D10.1.4" filename="D_aarch64_system_register_descriptions" linkend="BABDFEID"></xref>.</para>
<para>Defined values are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
  <para>Performance Monitors Extension not implemented.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
  <para>Performance Monitors Extension implemented, PMUv3.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0100</field_value>
        <field_value_description>
  <para>PMUv3 for Armv8.1. As <binarynumber>0b0001</binarynumber>, and also includes support for:</para>
<list type="unordered">
<listitem><content>Extended 16-bit <register_link state="ext" id="ext-pmevtypern_el0.xml">PMEVTYPER&lt;n&gt;_EL0</register_link>.evtCount field.</content>
</listitem><listitem><content>If EL2 is implemented, the <register_link state="AArch64" id="AArch64-mdcr_el2.xml">MDCR_EL2</register_link>.HPMD control bit.</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0101</field_value>
        <field_value_description>
  <para>PMUv3 for Armv8.4. As <binarynumber>0b0100</binarynumber>, and also includes support for the <register_link state="ext" id="ext-pmmir.xml">PMMIR</register_link> register.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0110</field_value>
        <field_value_description>
  <para>PMUv3 for Armv8.5. As <binarynumber>0b0101</binarynumber>, and also includes support for:</para>
<list type="unordered">
<listitem><content>64-bit event counters.</content>
</listitem><listitem><content>If EL2 is implemented, the <register_link state="AArch64" id="AArch64-mdcr_el2.xml">MDCR_EL2</register_link>.HCCD control bit.</content>
</listitem><listitem><content>If EL3 is implemented, the <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.SCCD control bit.</content>
</listitem></list>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1111</field_value>
        <field_value_description>
  <para><arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> form of performance monitors supported, PMUv3 not supported. Arm does not recommend this value in new implementations.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para><xref browsertext="ARMv8.1-PMU" filename="A_armv8_architecture_extensions.fm" linkend="v8.1.PMU"></xref> implements the functionality added by the value <binarynumber>0b0100</binarynumber>.</para>
<para><xref browsertext="ARMv8.4-PMU" filename="A_armv8_architecture_extensions.fm" linkend="v8.4.PMU"></xref> implements the functionality added by the value <binarynumber>0b0101</binarynumber>.</para>
<para><xref browsertext="ARMv8.5-PMU" filename="A_armv8_architecture_extensions.fm" linkend="v8.5.PMU"></xref> implements the functionality added by the value <binarynumber>0b0110</binarynumber>.</para>
<para>All other values are reserved.</para>
<para>From Armv8.1, the value <binarynumber>0b0001</binarynumber> is not permitted.</para>
<para>From Armv8.4, the value <binarynumber>0b0100</binarynumber> is not permitted.</para>
<para>From Armv8.5, the value <binarynumber>0b0101</binarynumber> is not permitted.</para>
<para>In an Armv8-A implementation that supports AArch64 state in at least one Exception level, this field returns the value of <register_link state="AArch64" id="AArch64-id_aa64dfr0_el1.xml">ID_AA64DFR0_EL1</register_link>.PMUVer.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="TraceVer_7_4"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>TraceVer</field_name>
          <field_msb>7</field_msb>
          <field_lsb>4</field_lsb>
          <field_description order="before">
          
  <para>Trace support. Indicates whether System register interface to a PE trace unit is implemented. Defined values are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0000</field_value>
        <field_value_description>
  <para>PE trace unit System registers not implemented.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0001</field_value>
        <field_value_description>
  <para>PE trace unit System registers implemented.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>All other values are reserved.</para>
<para>A value of <binarynumber>0b0000</binarynumber> only indicates that no System register interface to a PE trace unit is implemented. A PE trace unit might nevertheless be implemented without a System register interface.</para>
<para>In an Armv8-A implementation that supports AArch64 state in at least one Exception level, this field returns the value of <register_link state="AArch64" id="AArch64-id_aa64dfr0_el1.xml">ID_AA64DFR0_EL1</register_link>.TraceVer.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
      </field>
        <field
           id="UNKNOWN_3_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="UNKNOWN"
        >
          <field_name>UNKNOWN</field_name>
          <field_msb>3</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>UNKNOWN</arm-defined-word>.</para>
          </field_description>
            <field_values>
               
                 <field_value_name>U</field_value_name>
            </field_values>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="64">
      
        <fieldat id="0_63_44" msb="63" lsb="44"/>
        <fieldat id="TraceFilt_43_40" msb="43" lsb="40"/>
        <fieldat id="UNKNOWN_39_32" msb="39" lsb="32"/>
        <fieldat id="CTX_CMPs_31_28" msb="31" lsb="28"/>
        <fieldat id="0_27_24" msb="27" lsb="24"/>
        <fieldat id="WRPs_23_20" msb="23" lsb="20"/>
        <fieldat id="0_19_16" msb="19" lsb="16"/>
        <fieldat id="BRPs_15_12" msb="15" lsb="12"/>
        <fieldat id="PMUVer_11_8" msb="11" lsb="8"/>
        <fieldat id="TraceVer_7_4" msb="7" lsb="4"/>
        <fieldat id="UNKNOWN_3_0" msb="3" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  


</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>