<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register is_register="True" is_internal="False" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>EDSCR</reg_short_name>
      <reg_long_name>External Debug Status and Control Register</reg_long_name>
      
  <reg_address
      external_access="True"
    mem_map_access="True"
      power_domain="Core"
  >
    <reg_component>Debug</reg_component>
    <reg_offset><hexnumber>0x088</hexnumber></reg_offset>
    <reg_instance>EDSCR</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_level>When IsCorePowered(), !DoubleLockStatus(), !OSLockStatus() and SoftwareLockStatus()</reg_access_level>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
        
        <reg_access_state>
            <reg_access_level>When IsCorePowered(), !DoubleLockStatus(), !OSLockStatus() and !SoftwareLockStatus()</reg_access_level>
            <reg_access_type>RW</reg_access_type>
        </reg_access_state>
        
        <reg_access_state>
            <reg_access_type>ERROR</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>

          <reg_reset_value></reg_reset_value>
      <reg_mappings>
          <reg_mapping>
              
            <mapped_name filename="AArch64-mdccsr_el0.xml">MDCCSR_EL0</mapped_name>
            <mapped_type>Architectural</mapped_type>
              <mapped_execution_state>AArch64</mapped_execution_state>
              <mapped_from_startbit>30</mapped_from_startbit>
              <mapped_from_endbit>29</mapped_from_endbit>

              <mapped_to_startbit>30</mapped_to_startbit>
              <mapped_to_endbit>29</mapped_to_endbit>

          </reg_mapping>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Main control register for the debug implementation.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>Debug registers</reg_group>
      </reg_groups>
      <reg_configuration>
        

      </reg_configuration>
      <reg_attributes>
          <attributes_text>
            <para>EDSCR is a 32-bit register.</para>
          </attributes_text>
      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="32">
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="TFO_31_31_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>TFO</field_name>
          <field_msb>31</field_msb>
          <field_lsb>31</field_lsb>
          <field_description order="before">
          
  <para>Trace Filter Override. Overrides the Trace Filter controls allowing the external debugger to trace any visible Exception level.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Trace Filter controls are not affected.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Trace Filter controls in <register_link state="AArch64" id="AArch64-trfcr_el1.xml">TRFCR_EL1</register_link>, <register_link state="AArch64" id="AArch64-trfcr_el2.xml">TRFCR_EL2</register_link> are ignored.</para>
<para>Trace Filter controls <register_link state="AArch32" id="AArch32-trfcr.xml">TRFCR</register_link> and <register_link state="AArch32" id="AArch32-htrfcr.xml">HTRFCR</register_link> are ignored.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>When <register_link state="AArch64" id="AArch64-oslsr_el1.xml">OSLSR_EL1</register_link>.OSLK == 1, this bit can be indirectly read and written through the <register_link state="AArch64" id="AArch64-mdscr_el1.xml">MDSCR_EL1</register_link> and <register_link state="AArch32" id="AArch32-dbgdscrext.xml">DBGDSCRext</register_link> System registers.</para>
<para>This bit is ignored by the PE when ExternalSecureNoninvasiveDebugEnabled() == FALSE and the Effective value of <register_link state="AArch64" id="AArch64-mdcr_el3.xml">MDCR_EL3</register_link>.STE == 1.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When ARMv8.4-Trace is implemented</fields_condition>
      </field>
        <field
           id="0_31_31_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>31</field_msb>
          <field_lsb>31</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="RXfull_30_30"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>RXfull</field_name>
          <field_msb>30</field_msb>
          <field_lsb>30</field_lsb>
          <field_description order="before">
          
  <para>DTRRX full.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
          <field_access>
              <field_access_state>
               <field_access_type>RO</field_access_type>
              </field_access_state>
          </field_access>
      </field>
        <field
           id="TXfull_29_29"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>TXfull</field_name>
          <field_msb>29</field_msb>
          <field_lsb>29</field_lsb>
          <field_description order="before">
          
  <para>DTRTX full.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
          <field_access>
              <field_access_state>
               <field_access_type>RO</field_access_type>
              </field_access_state>
          </field_access>
      </field>
        <field
           id="ITO_28_28"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ITO</field_name>
          <field_msb>28</field_msb>
          <field_lsb>28</field_lsb>
          <field_description order="before">
          
  <para>ITR overrun.</para>
<para>If the PE is in Non-debug state, this bit is <arm-defined-word>UNKNOWN</arm-defined-word>. ITO is set to 0 on entry to Debug state.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
          <field_access>
              <field_access_state>
               <field_access_type>RO</field_access_type>
              </field_access_state>
          </field_access>
      </field>
        <field
           id="RXO_27_27"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>RXO</field_name>
          <field_msb>27</field_msb>
          <field_lsb>27</field_lsb>
          <field_description order="before">
          
  <para>DTRRX overrun.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
          <field_access>
              <field_access_state>
               <field_access_type>RO</field_access_type>
              </field_access_state>
          </field_access>
      </field>
        <field
           id="TXU_26_26"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>TXU</field_name>
          <field_msb>26</field_msb>
          <field_lsb>26</field_lsb>
          <field_description order="before">
          
  <para>DTRTX underrun.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
          <field_access>
              <field_access_state>
               <field_access_type>RO</field_access_type>
              </field_access_state>
          </field_access>
      </field>
        <field
           id="PipeAdv_25_25"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>PipeAdv</field_name>
          <field_msb>25</field_msb>
          <field_lsb>25</field_lsb>
          <field_description order="before">
          
  <para>Pipeline advance. Set to 1 every time the PE pipeline retires one or more instructions. Cleared to 0 by a write to <register_link state="ext" id="ext-edrcr.xml">EDRCR</register_link>.CSPA.</para>
<para>The architecture does not define precisely when this bit is set to 1. It requires only that this happen periodically in Non-debug state to indicate that software execution is progressing.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
          <field_access>
              <field_access_state>
               <field_access_type>RO</field_access_type>
              </field_access_state>
          </field_access>
      </field>
        <field
           id="ITE_24_24"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ITE</field_name>
          <field_msb>24</field_msb>
          <field_lsb>24</field_lsb>
          <field_description order="before">
          
  <para>ITR empty.</para>
<para>If the PE is in Non-debug state, this bit is <arm-defined-word>UNKNOWN</arm-defined-word>. It is always valid in Debug state.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
          <field_access>
              <field_access_state>
               <field_access_type>RO</field_access_type>
              </field_access_state>
          </field_access>
      </field>
        <field
           id="INTdis_23_22_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="True"
           reserved_type="RES0"
        >
          <field_name>INTdis</field_name>
          <field_msb>23</field_msb>
          <field_lsb>22</field_lsb>
           <field_range>22</field_range>
          <field_description order="before">
          
  <para>Interrupt disable. Disables taking interrupts in Non-Debug state.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Masking of interrupts is controlled by PSTATE and interrupt routing controls.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>If ExternalSecureDebugEnabled() == TRUE, then all interrupts, including virtual and SError interrupts, are masked.</para>
<para>If ExternalSecureDebugEnabled() == FALSE, then all interrupts targetting Non-secure state are masked.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>When <register_link state="AArch64" id="AArch64-oslsr_el1.xml">OSLSR_EL1</register_link>.OSLK == 1, this field can be indirectly read and written through the <register_link state="AArch64" id="AArch64-mdscr_el1.xml">MDSCR_EL1</register_link> and <register_link state="AArch32" id="AArch32-dbgdscrext.xml">DBGDSCRext</register_link> System registers.</para>
<para>This field is ignored by the PE and treated as zero when ExternalDebugEnabled() == FALSE.</para>

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When ARMv8.4-Debug is implemented</fields_condition>
      </field>
        <field
           id="INTdis_23_22_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>INTdis</field_name>
          <field_msb>23</field_msb>
          <field_lsb>22</field_lsb>
           <field_range>23:22</field_range>
          <field_description order="before">
          
  <para>Interrupt disable.</para>
<para>When <register_link state="AArch64" id="AArch64-oslsr_el1.xml">OSLSR_EL1</register_link>.OSLK == 1, this field can be indirectly read and written through the <register_link state="AArch64" id="AArch64-mdscr_el1.xml">MDSCR_EL1</register_link> and <register_link state="AArch32" id="AArch32-dbgdscrext.xml">DBGDSCRext</register_link> System registers.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
  <para>Do not disable interrupts.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
  <para>Disable interrupts taken to Non-secure EL1.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
  <para>Disable interrupts taken only to Non-secure EL1 and Non-secure EL2. If ExternalSecureInvasiveDebugEnabled() == TRUE, also disable interrupts taken to Secure EL1.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b11</field_value>
        <field_value_description>
  <para>Disable interrupts taken only to Non-secure EL1 and Non-secure EL2. If ExternalSecureInvasiveDebugEnabled() == TRUE, also disable all other interrupts.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="TDA_21_21"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>TDA</field_name>
          <field_msb>21</field_msb>
          <field_lsb>21</field_lsb>
          <field_description order="before">
          
  <para>Traps accesses to the following debug System registers:</para>
<list type="unordered">
<listitem><content>AArch64: <register_link state="ext" id="ext-dbgbcrn_el1.xml">DBGBCR&lt;n&gt;_EL1</register_link>, <register_link state="ext" id="ext-dbgbvrn_el1.xml">DBGBVR&lt;n&gt;_EL1</register_link>, <register_link state="ext" id="ext-dbgwcrn_el1.xml">DBGWCR&lt;n&gt;_EL1</register_link>, <register_link state="ext" id="ext-dbgwvrn_el1.xml">DBGWVR&lt;n&gt;_EL1</register_link>.</content>
</listitem><listitem><content>AArch32: <register_link state="AArch32" id="AArch32-dbgbcrn.xml">DBGBCR&lt;n&gt;</register_link>, <register_link state="AArch32" id="AArch32-dbgbvrn.xml">DBGBVR&lt;n&gt;</register_link>, <register_link state="AArch32" id="AArch32-dbgbxvrn.xml">DBGBXVR&lt;n&gt;</register_link>, <register_link state="AArch32" id="AArch32-dbgwcrn.xml">DBGWCR&lt;n&gt;</register_link>, <register_link state="AArch32" id="AArch32-dbgwvrn.xml">DBGWVR&lt;n&gt;</register_link>.</content>
</listitem></list>
<para>The possible values of this field are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Accesses to debug System registers do not generate a Software Access Debug event.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Accesses to debug System registers generate a Software Access Debug event, if <register_link state="AArch64" id="AArch64-oslsr_el1.xml">OSLSR_EL1</register_link>.OSLK is 0 and if halting is allowed.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="MA_20_20"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>MA</field_name>
          <field_msb>20</field_msb>
          <field_lsb>20</field_lsb>
          <field_description order="before">
          
  <para>Memory access mode. Controls the use of memory-access mode for accessing ITR and the DCC. This bit is ignored if in Non-debug state and set to zero on entry to Debug state.</para>
<para>Possible values of this field are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Normal access mode.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Memory access mode.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="SC2_19_19_1"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           reserved_type="RES0"
        >
          <field_name>SC2</field_name>
          <field_msb>19</field_msb>
          <field_lsb>19</field_lsb>
          <field_description order="before">
          
  <para>Sample <register_link state="AArch64" id="AArch64-contextidr_el2.xml">CONTEXTIDR_EL2</register_link>. Controls whether the PC Sample-based Profiling Extension samples <register_link state="AArch64" id="AArch64-contextidr_el2.xml">CONTEXTIDR_EL2</register_link> or <register_link state="AArch64" id="AArch64-vttbr_el2.xml">VTTBR_EL2</register_link>.VMID.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Sample <register_link state="AArch64" id="AArch64-vttbr_el2.xml">VTTBR_EL2</register_link>.VMID.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Sample <register_link state="AArch64" id="AArch64-contextidr_el2.xml">CONTEXTIDR_EL2</register_link>.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
            <fields_condition>When ARMv8.0-PCSample is implemented, (ARMv8.1-VHE is implemented or ARMv8.2-Debug is implemented) and ARMv8.2-PCSample is not implemented</fields_condition>
      </field>
        <field
           id="0_19_19_2"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>19</field_msb>
          <field_lsb>19</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="NS_18_18"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>NS</field_name>
          <field_msb>18</field_msb>
          <field_lsb>18</field_lsb>
          <field_description order="before">
          
  <para>Non-secure status. When in Debug state, gives the current Security state:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Secure state, IsSecure() == TRUE.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Non-secure state, IsSecure() == FALSE.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>In Non-debug state, this bit is <arm-defined-word>UNKNOWN</arm-defined-word>.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
          <field_access>
              <field_access_state>
               <field_access_type>RO</field_access_type>
              </field_access_state>
          </field_access>
      </field>
        <field
           id="0_17_17"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>17</field_msb>
          <field_lsb>17</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="SDD_16_16"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>SDD</field_name>
          <field_msb>16</field_msb>
          <field_lsb>16</field_lsb>
          <field_description order="before">
          
  <para>Secure debug disabled.</para>
<para>On entry to Debug state:</para>
<list type="unordered">
<listitem><content>If entering in Secure state, SDD is set to 0.</content>
</listitem><listitem><content>If entering in Non-secure state, SDD is set to the inverse of ExternalSecureInvasiveDebugEnabled().</content>
</listitem></list>
<para>In Debug state, the value of the SDD bit does not change, even if ExternalSecureInvasiveDebugEnabled() changes.</para>
<para>In Non-debug state:</para>
<list type="unordered">
<listitem><content>SDD returns the inverse of ExternalSecureInvasiveDebugEnabled(). If the authentication signals that control ExternalSecureInvasiveDebugEnabled() change, a context synchronization event is required to guarantee their effect.</content>
</listitem><listitem><content>This bit is unaffected by the Security state of the PE.</content>
</listitem></list>
<para>If EL3 is not implemented and the implementation is Non-secure, this bit is <arm-defined-word>RES1</arm-defined-word>.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
          <field_access>
              <field_access_state>
               <field_access_type>RO</field_access_type>
              </field_access_state>
          </field_access>
      </field>
        <field
           id="0_15_15"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>15</field_msb>
          <field_lsb>15</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="HDE_14_14"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>HDE</field_name>
          <field_msb>14</field_msb>
          <field_lsb>14</field_lsb>
          <field_description order="before">
          
  <para>Halting debug enable. The possible values of this field are:</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Halting disabled for Breakpoint, Watchpoint and Halt Instruction debug events.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Halting enabled for Breakpoint, Watchpoint and Halt Instruction debug events.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="RW_13_10"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>RW</field_name>
          <field_msb>13</field_msb>
          <field_lsb>10</field_lsb>
          <field_description order="before">
          
  <para>Exception level Execution state status. In Debug state, each bit gives the current Execution state of each Exception level.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b1111</field_value>
        <field_value_description>
  <para>All Exception levels are using AArch64 or the PE is in Non-debug state.</para>
</field_value_description>
    </field_value_instance>
                    <field_value_instance>
        <field_value>0b1110</field_value>
        <field_value_description>
  <para>The PE is in Debug state. EL0 is using AArch32. All other Exception levels are using AArch64. Only permitted if the PE is executing at EL0.</para>
</field_value_description>
            <field_value_condition>When AArch32 is supported at any Exception level</field_value_condition>
    </field_value_instance>
                    <field_value_instance>
        <field_value>0b110x</field_value>
        <field_value_description>
  <para>The PE is in Debug state. EL0 and EL1 are using AArch32. EL2 and EL3 are using AArch64. Only permitted if EL2 is implemented and enabled in the current Security state.</para>
</field_value_description>
            <field_value_condition>When AArch32 is supported at any Exception level</field_value_condition>
    </field_value_instance>
                    <field_value_instance>
        <field_value>0b10xx</field_value>
        <field_value_description>
  <para>The PE is in Debug state. EL0, EL1, and, if implemented in the current Security state, EL2 are using AArch32. EL3 is using AArch64.</para>
</field_value_description>
            <field_value_condition>When AArch32 is supported at any Exception level and EL3 is implemented</field_value_condition>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b0xxx</field_value>
        <field_value_description>
  <para>The PE is in Debug state. All Exception levels are using AArch32.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>In Non-debug state, this field is RAO.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
          <field_access>
              <field_access_state>
               <field_access_type>RO</field_access_type>
              </field_access_state>
          </field_access>
      </field>
        <field
           id="EL_9_8"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>EL</field_name>
          <field_msb>9</field_msb>
          <field_lsb>8</field_lsb>
          <field_description order="before">
          
  <para>Exception level. In Debug state, this gives the current Exception level of the PE.</para>
<para>In Non-debug state, this field is RAZ.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
</field_resets>
          <field_access>
              <field_access_state>
               <field_access_type>RO</field_access_type>
              </field_access_state>
          </field_access>
      </field>
        <field
           id="A_7_7"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>A</field_name>
          <field_msb>7</field_msb>
          <field_lsb>7</field_lsb>
          <field_description order="before">
          
  <para>SError interrupt pending. In Debug state, indicates whether an SError interrupt is pending:</para>
<list type="unordered">
<listitem><content>If <register_link state="AArch64" id="AArch64-hcr_el2.xml">HCR_EL2</register_link>.{AMO, TGE} = {1, 0}, EL2 is enabled in the current Security state, and the PE is executing at EL0 or EL1, a virtual SError interrupt.</content>
</listitem><listitem><content>Otherwise, a physical SError interrupt.</content>
</listitem></list>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>No SError interrupt pending.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>SError interrupt pending.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>A debugger can read EDSCR to check whether an SError interrupt is pending without having to execute further instructions. A pending SError might indicate data from target memory is corrupted.</para>
<para><arm-defined-word>UNKNOWN</arm-defined-word> in Non-debug state.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
          <field_access>
              <field_access_state>
               <field_access_type>RO</field_access_type>
              </field_access_state>
          </field_access>
      </field>
        <field
           id="ERR_6_6"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>ERR</field_name>
          <field_msb>6</field_msb>
          <field_lsb>6</field_lsb>
          <field_description order="before">
          
  <para>Cumulative error flag. This bit is set to 1 following exceptions in Debug state and on any signaled overrun or underrun on the DTR or EDITR.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_number>0</field_reset_number>
  
      </field_reset>
  
</field_resets>
          <field_access>
              <field_access_state>
               <field_access_type>RO</field_access_type>
              </field_access_state>
          </field_access>
      </field>
        <field
           id="STATUS_5_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>STATUS</field_name>
          <field_msb>5</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>Debug status flags.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b000001</field_value>
        <field_value_description>
  <para>PE is restarting, exiting Debug state.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b000010</field_value>
        <field_value_description>
  <para>PE is in Non-debug state.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b000111</field_value>
        <field_value_description>
  <para>Breakpoint.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b010011</field_value>
        <field_value_description>
  <para>External debug request.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b011011</field_value>
        <field_value_description>
  <para>Halting step, normal.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b011111</field_value>
        <field_value_description>
  <para>Halting step, exclusive.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b100011</field_value>
        <field_value_description>
  <para>OS Unlock Catch.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b100111</field_value>
        <field_value_description>
  <para>Reset Catch.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b101011</field_value>
        <field_value_description>
  <para>Watchpoint.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b101111</field_value>
        <field_value_description>
  <para>HLT instruction.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b110011</field_value>
        <field_value_description>
  <para>Software access to debug register.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b110111</field_value>
        <field_value_description>
  <para>Exception Catch.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b111011</field_value>
        <field_value_description>
  <para>Halting step, no syndrome.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  <para>All other values of STATUS are reserved.</para>

          </field_description>
          <field_resets>
  
  
</field_resets>
          <field_access>
              <field_access_state>
               <field_access_type>RO</field_access_type>
              </field_access_state>
          </field_access>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="32">
      
        <fieldat id="TFO_31_31_1" msb="31" lsb="31"/>
        <fieldat id="RXfull_30_30" msb="30" lsb="30"/>
        <fieldat id="TXfull_29_29" msb="29" lsb="29"/>
        <fieldat id="ITO_28_28" msb="28" lsb="28"/>
        <fieldat id="RXO_27_27" msb="27" lsb="27"/>
        <fieldat id="TXU_26_26" msb="26" lsb="26"/>
        <fieldat id="PipeAdv_25_25" msb="25" lsb="25"/>
        <fieldat id="ITE_24_24" msb="24" lsb="24"/>
        <fieldat id="INTdis_23_22_1" msb="23" lsb="22"/>
        <fieldat id="TDA_21_21" msb="21" lsb="21"/>
        <fieldat id="MA_20_20" msb="20" lsb="20"/>
        <fieldat id="SC2_19_19_1" msb="19" lsb="19"/>
        <fieldat id="NS_18_18" msb="18" lsb="18"/>
        <fieldat id="0_17_17" msb="17" lsb="17"/>
        <fieldat id="SDD_16_16" msb="16" lsb="16"/>
        <fieldat id="0_15_15" msb="15" lsb="15"/>
        <fieldat id="HDE_14_14" msb="14" lsb="14"/>
        <fieldat id="RW_13_10" msb="13" lsb="10"/>
        <fieldat id="EL_9_8" msb="9" lsb="8"/>
        <fieldat id="A_7_7" msb="7" lsb="7"/>
        <fieldat id="ERR_6_6" msb="6" lsb="6"/>
        <fieldat id="STATUS_5_0" msb="5" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  


</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>