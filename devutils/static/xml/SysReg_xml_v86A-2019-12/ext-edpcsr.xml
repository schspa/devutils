<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE register_page SYSTEM "registers.dtd">
<!-- Copyright (c) 2010-2018 Arm Limited or its affiliates. All rights reserved. -->
<!-- This document is Non-Confidential. This document may only be used and distributed in accordance with the terms of the agreement entered into by Arm and the party that Arm delivered this document to. -->
<?xml-stylesheet href="one_register.xsl" type="text/xsl" ?>






<register_page>
  <registers>
    <register is_register="True" is_internal="False" is_banked="False" is_optional="False" is_stub_entry="False">
      <reg_short_name>EDPCSR</reg_short_name>
      <reg_long_name>External Debug Program Counter Sample Register</reg_long_name>
        <reg_condition otherwise="RES0">when ARMv8.0-PCSample is implemented and ARMv8.2-PCSample is not implemented</reg_condition>
      
  <reg_address
      external_access="False"
    mem_map_access="True"
      power_domain="Core"
      register_startbit="31"
      register_endbit="0"
  >
    <reg_component>Debug</reg_component>
    <reg_offset><hexnumber>0x0A0</hexnumber></reg_offset>
    <reg_instance>EDPCSR</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_level>When IsCorePowered(), !DoubleLockStatus() and !OSLockStatus()</reg_access_level>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
        
        <reg_access_state>
            <reg_access_type>ERROR</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>
  <reg_address
      external_access="True"
    mem_map_access="True"
      power_domain="Core"
      register_startbit="63"
      register_endbit="32"
  >
    <reg_component>Debug</reg_component>
    <reg_offset><hexnumber>0x0AC</hexnumber></reg_offset>
    <reg_instance>EDPCSR</reg_instance>
    <reg_access>
        
        <reg_access_state>
            <reg_access_level>When IsCorePowered(), !DoubleLockStatus() and !OSLockStatus()</reg_access_level>
            <reg_access_type>RO</reg_access_type>
        </reg_access_state>
        
        <reg_access_state>
            <reg_access_type>ERROR</reg_access_type>
        </reg_access_state>
    </reg_access>
</reg_address>

          <reg_reset_value>

      </reg_reset_value>
      <reg_mappings>
      </reg_mappings>
      <reg_purpose>
        
    
      <purpose_text>
        <para>Holds a sampled instruction address value.</para>
      </purpose_text>

      </reg_purpose>
      <reg_groups>
          <reg_group>Debug registers</reg_group>
      </reg_groups>
      <reg_configuration>
        
    
      <configuration_text>
        <para>Implemented only if the <arm-defined-word>OPTIONAL</arm-defined-word> PC Sample-based Profiling Extension is implemented in the external debug registers space.</para>

      </configuration_text>
      <configuration_text>
        <note><para><xref browsertext="ARMv8.2-PCSample" filename="A_armv8_architecture_extensions.fm" linkend="v8.2.PCSample"/> implements the PC Sample-based Profiling Extension in the Performance Monitors registers space.</para></note>
      </configuration_text>

      </reg_configuration>
      <reg_attributes>
          
    
      <attributes_text>
        <para>EDPCSR is a pair of 32-bit registers.</para>

      </attributes_text>
      <attributes_text>
        <para>If <xref browsertext="ARMv8.1-VHE" filename="A_armv8_architecture_extensions.fm" linkend="v8.1.VHE"/> is implemented, the format of this register differs depending on the value of <register_link state="ext" id="ext-edscr.xml">EDSCR</register_link>.SC2.</para>
      </attributes_text>

      </reg_attributes>
      <reg_fieldsets>
        





  <fields length="64">
      <fields_condition>When ARMv8.1-VHE is not implemented or EDSCR.SC2 == 0</fields_condition>
      <fields_instance>ARMv8.1-VHE is not implemented or EDSCR.SC2 == 0</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="None_63_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
           <field_shortdesc>PC Sample high word, EDPCSRhi</field_shortdesc>
          <field_msb>63</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
          
  <para>PC Sample high word, EDPCSRhi. If <register_link state="ext" id="ext-edvidsr.xml">EDVIDSR</register_link>.HV == 0 then this field is RAZ, otherwise bits [63:32] of the sampled instruction address value. The translation regime that EDPCSR samples can be determined from <register_link state="ext" id="ext-edvidsr.xml">EDVIDSR</register_link>.{NS,E2,E3}.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="None_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
           <field_shortdesc>PC Sample low word</field_shortdesc>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>PC Sample low word. EDPCSRlo, bits[31:0] of the sampled instruction address value.</para>
<para>EDPCSRlo reads as <hexnumber>0xFFFFFFFF</hexnumber> when any of the following are true:</para>
<list type="unordered">
<listitem><content>The PE is in Debug state.</content>
</listitem><listitem><content>PC Sample-based profiling is prohibited.</content>
</listitem></list>
<para>If an instruction has retired since the PE left Reset state, then the first read of EDPCSR[31:0] is permitted but not required to return <hexnumber>0xFFFFFFFF</hexnumber>.</para>
<para>EDPCSRlo reads as an <arm-defined-word>UNKNOWN</arm-defined-word> value when any of the following are true:</para>
<list type="unordered">
<listitem><content>The PE is in Reset state.</content>
</listitem><listitem><content>No instruction has retired since the PE left Reset state, Debug state, or a state where PC Sample-based Profiling is prohibited.</content>
</listitem><listitem><content>No instruction has retired since the last read of EDPCSR[31:0].</content>
</listitem></list>
<para>For the cases where a read of EDPCSR[31:0] returns <hexnumber>0xFFFFFFFF</hexnumber> or an <arm-defined-word>UNKNOWN</arm-defined-word> value, the read has the side-effect of setting EDPCSRhi, <register_link state="ext" id="ext-edcidsr.xml">EDCIDSR</register_link>, and <register_link state="ext" id="ext-edvidsr.xml">EDVIDSR</register_link> to <arm-defined-word>UNKNOWN</arm-defined-word> values.</para>
<para>Otherwise, a read of EDPCSR[31:0] returns bits [31:0] of the sampled instruction address value and has the side-effect of indirectly writing to EDPCSRhi, <register_link state="ext" id="ext-edcidsr.xml">EDCIDSR</register_link>, and <register_link state="ext" id="ext-edvidsr.xml">EDVIDSR</register_link>. The translation regime that EDPCSR samples can be determined from <register_link state="ext" id="ext-edvidsr.xml">EDVIDSR</register_link>.{NS,E2,E3}.</para>
<para>For a read of EDPCSR[31:0] from the memory-mapped interface, if EDLSR.SLK == 1, meaning the <arm-defined-word>OPTIONAL</arm-defined-word> Software Lock is locked, then the side-effect of the access does not occur and EDPCSRhi, <register_link state="ext" id="ext-edcidsr.xml">EDCIDSR</register_link>, and <register_link state="ext" id="ext-edvidsr.xml">EDVIDSR</register_link> are unchanged.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <fields length="64">
      <fields_condition>When ARMv8.1-VHE is implemented and EDSCR.SC2 == 1</fields_condition>
      <fields_instance>ARMv8.1-VHE is implemented and EDSCR.SC2 == 1</fields_instance>
    <text_before_fields>
      
  

    </text_before_fields>
    
        <field
           id="NS_63_63"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>NS</field_name>
          <field_msb>63</field_msb>
          <field_lsb>63</field_lsb>
          <field_description order="before">
          
  <para>Non-secure state sample. Indicates the Security state that is associated with the most recent EDPCSR sample or, when it is read as a single atomic 64-bit read, the current EDPCSR sample. The translation regime that EDPCSR samples can be determined from EDPCSR.{NS,EL}.</para>
<para>If EL3 is not implemented, this bit indicates the Effective value of <xref browsertext="SCR" filename="appx_registers_index.fm" linkend="CEGCEECB"></xref>.NS.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b0</field_value>
        <field_value_description>
  <para>Sample is from Secure state.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b1</field_value>
        <field_value_description>
  <para>Sample is from Non-secure state.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="EL_62_61"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
          <field_name>EL</field_name>
          <field_msb>62</field_msb>
          <field_lsb>61</field_lsb>
          <field_description order="before">
          
  <para>Exception level status sample. Indicates the Exception level that is associated with the most recent EDPCSR sample or, when it is read as a single atomic 64-bit read, the current EDPCSR sample. The translation regime that EDPCSR samples can be determined from EDPCSR.{NS,EL}.</para>

          </field_description>
            <field_values>
                  <field_value_instance>
        <field_value>0b00</field_value>
        <field_value_description>
  <para>Sample is from EL0.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b01</field_value>
        <field_value_description>
  <para>Sample is from EL1.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b10</field_value>
        <field_value_description>
  <para>Sample is from EL2.</para>
</field_value_description>
    </field_value_instance>
                  <field_value_instance>
        <field_value>0b11</field_value>
        <field_value_description>
  <para>Sample is from EL3.</para>
</field_value_description>
    </field_value_instance>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="0_60_56"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
           rwtype="RES0"
        >
          <field_name>0</field_name>
          <field_msb>60</field_msb>
          <field_lsb>56</field_lsb>
          <field_description order="before">
            <para>Reserved, <arm-defined-word>RES0</arm-defined-word>.</para>
          </field_description>
            <field_values>
            </field_values>
      </field>
        <field
           id="None_55_32"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
           <field_shortdesc>PC Sample high word, EDPCSRhi</field_shortdesc>
          <field_msb>55</field_msb>
          <field_lsb>32</field_lsb>
          <field_description order="before">
          
  <para>PC Sample high word, EDPCSRhi. Bits [55:32] of the sampled instruction address value. The translation regime that EDPCSR samples can be determined from EDPCSR.{NS,EL}.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
        <field
           id="None_31_0"
           is_variable_length="False"
           has_partial_fieldset="False"
           is_linked_to_partial_fieldset="False"
           is_access_restriction_possible="False"
           is_constant_value="False"
           is_partial_field="False"
        >
           <field_shortdesc>PC Sample low word</field_shortdesc>
          <field_msb>31</field_msb>
          <field_lsb>0</field_lsb>
          <field_description order="before">
          
  <para>PC Sample low word. EDPCSRlo, bits[31:0] of the sampled instruction address value.</para>
<para>EDPCSRlo reads as <hexnumber>0xFFFFFFFF</hexnumber> when any of the following are true:</para>
<list type="unordered">
<listitem><content>The PE is in Debug state.</content>
</listitem><listitem><content>PC Sample-based profiling is prohibited.</content>
</listitem></list>
<para>If an instruction has retired since the PE left Reset state, then the first read of EDPCSR[31:0] is permitted but not required to return <hexnumber>0xFFFFFFFF</hexnumber>.</para>
<para>EDPCSRlo reads as an <arm-defined-word>UNKNOWN</arm-defined-word> value when any of the following are true:</para>
<list type="unordered">
<listitem><content>The PE is in Reset state.</content>
</listitem><listitem><content>No instruction has retired since the PE left Reset state, Debug state, or a state where PC Sample-based Profiling is prohibited.</content>
</listitem><listitem><content>No instruction has retired since the last read of EDPCSR[31:0].</content>
</listitem></list>
<para>For the cases where a read of EDPCSR[31:0] returns <hexnumber>0xFFFFFFFF</hexnumber> or an <arm-defined-word>UNKNOWN</arm-defined-word> value, the read has the side-effect of setting EDPCSRhi, <register_link state="ext" id="ext-edcidsr.xml">EDCIDSR</register_link>, and <register_link state="ext" id="ext-edvidsr.xml">EDVIDSR</register_link> to <arm-defined-word>UNKNOWN</arm-defined-word> values.</para>
<para>Otherwise, a read of EDPCSR[31:0] returns bits [31:0] of the sampled instruction address value and has the side-effect of indirectly writing to EDPCSRhi, <register_link state="ext" id="ext-edcidsr.xml">EDCIDSR</register_link>, and <register_link state="ext" id="ext-edvidsr.xml">EDVIDSR</register_link>. The translation regime that EDPCSR samples can be determined from EDPCSR.{NS,EL}.</para>
<para>For a read of EDPCSR[31:0] from the memory-mapped interface, if EDLSR.SLK == 1, meaning the <arm-defined-word>OPTIONAL</arm-defined-word> Software Lock is locked, then the side-effect of the access does not occur and EDPCSRhi, <register_link state="ext" id="ext-edcidsr.xml">EDCIDSR</register_link>, and <register_link state="ext" id="ext-edvidsr.xml">EDVIDSR</register_link> are unchanged.</para>

          </field_description>
            <field_values>
            </field_values>
          <field_description order="after">
            
  

          </field_description>
          <field_resets>
  
  
        
    
      <field_reset reset_type="Cold">
        
      <field_reset_standard_text>AU</field_reset_standard_text>
  
      </field_reset>
  
</field_resets>
      </field>
    <text_after_fields>
    
  

    </text_after_fields>
  </fields>
  <reg_fieldset length="64">
        <fields_condition>When ARMv8.1-VHE is not implemented or EDSCR.SC2 == 0</fields_condition>
      
        <fieldat id="None_63_32" msb="63" lsb="32"/>
        <fieldat id="None_31_0" msb="31" lsb="0"/>
    </reg_fieldset>
  <reg_fieldset length="64">
        <fields_condition>When ARMv8.1-VHE is implemented and EDSCR.SC2 == 1</fields_condition>
      
        <fieldat id="NS_63_63" msb="63" lsb="63"/>
        <fieldat id="EL_62_61" msb="62" lsb="61"/>
        <fieldat id="0_60_56" msb="60" lsb="56"/>
        <fieldat id="None_55_32" msb="55" lsb="32"/>
        <fieldat id="None_31_0" msb="31" lsb="0"/>
    </reg_fieldset>

      </reg_fieldsets>
      


<access_mechanisms>
  
    
      <access_permission_text>
        <para><arm-defined-word>IMPLEMENTATION DEFINED</arm-defined-word> extensions to external debug might make the value of this register <arm-defined-word>UNKNOWN</arm-defined-word>, see <xref browsertext="'Permitted behavior that might make the PC Sample-based profiling registers UNKNOWN' in the Arm&#174; Architecture Reference Manual, Armv8, for Armv8-A architecture profile" filename="H_the_sample_based_profiling__" linkend="BABCBGEF"/></para>
      </access_permission_text>


</access_mechanisms>

      <arch_variants>
      </arch_variants>
  </register>
</registers>

    <timestamp>13/12/2019 15:13; 391b5248b29fb2f001ef74792eaacbd6fc72f211</timestamp>
</register_page>